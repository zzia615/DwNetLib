<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebDataWindow</name>
    </assembly>
    <members>
        <member name="T:Sybase.DataWindow.Web.Design.WebDataWindowControlDesigner">
            <summary>
            Summary description for WebDataWindowControlDesigner.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.Design.WebDataWindowControlDesigner.#ctor">
            <summary>
            Initializes a new instance of the WebDataWindowControlDesigner class.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.Design.WebDataWindowControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
            <summary>
            Represents the method that will handle the component changed event.		
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="ce">The ComponentChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:Sybase.DataWindow.Web.Design.WebDataWindowControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Filters the properties exposed through a TypeDescriptor and replaces the runtime DataSource property descriptor with a design-time data source.
            </summary>
            <param name="properties">An IDictionary that contains the set of properties to filter.</param>
        </member>
        <member name="M:Sybase.DataWindow.Web.Design.WebDataWindowControlDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified WebDataWindowControl control.
            </summary>
            <param name="component">The IComponent for the designer.</param>
        </member>
        <member name="M:Sybase.DataWindow.Web.Design.WebDataWindowControlDesigner.OnBehaviorAttached">
            <summary>
            Provides an opportunity to perform additional processing when a behavior is attached to the designer.
            </summary>
        </member>
        <member name="P:Sybase.DataWindow.Web.Design.WebDataWindowControlDesigner.ClientObjectName">
            <summary>
            Gets the client object name of the WebDataWindowControl this designer is designing.
            </summary>
            <value>The client object name that WebDataWindowControl will generate during rendering.</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.Design.WebDataWindowControlDesigner.ActionLists">
            <summary>
            Gets the design-time action lists supported by the component associated with the designer. 		
            </summary>
            <value>The design-time action lists supported by the component associated with the designer.</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.Design.WebDataWindowControlDesigner.Verbs">
            <summary>
            Gets or sets the collection of verbs available to this designer.		
            </summary>
            <value>A DesignerVerbCollection that contains the verbs available to the designer.</value>
        </member>
        <member name="T:Sybase.DataWindow.Web.WebDataWindowLicenseProvider">
            <summary>
            Summary description for WebDataWindowLicenseProvider.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.RowFocusIndicatorStyle">
            <summary>
            Summary description for RowFocusIndicatorStyle.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.StateObject">
            <summary>A base class that implements the IStateManager interface. It is used to keep track of changes to properties and to save changes to a control's view state.
	    </summary>
            
        </member>
        <member name="M:Sybase.DataWindow.Web.StateObject.#ctor">
            <summary>
            Initialize an instance of StateObject.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.StateObject.System#Web#UI#IStateManager#TrackViewState">
            <summary>
            This member overrides TrackViewState of IStateManager
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.StateObject.System#Web#UI#IStateManager#SaveViewState">
            <summary>
            This member overrides SaveViewState of IStateManager
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.StateObject.System#Web#UI#IStateManager#LoadViewState(System.Object)">
            <summary>
            This member overrides LoadViewState of IStateManager
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.StateObject.LoadViewState(System.Object)">
            <summary>
            Restores view-state information from a previous page request that was saved by the SaveViewState method.
            </summary>		
        </member>
        <member name="M:Sybase.DataWindow.Web.StateObject.SaveViewState">
            <summary>
            Saves any view-state changes that have occurred since the time the page was posted back to the server.
            </summary>		
        </member>
        <member name="M:Sybase.DataWindow.Web.StateObject.TrackViewState">
            <summary>
            auses tracking of view-state changes to the object so they can be stored in the object's StateBag object. This object is accessible through the StateObject.ViewState property.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.StateObject.IsSet(System.Int32)">
            <summary>
            Gets the value that indicate whether the property key bit is set to true.
            </summary>		
        </member>
        <member name="M:Sybase.DataWindow.Web.StateObject.SetBit(System.Int32)">
            <summary>
            Set property key bit to true
            </summary>		
        </member>
        <member name="P:Sybase.DataWindow.Web.StateObject.System#Web#UI#IStateManager#IsTrackingViewState">
            <summary>
            This member overrides IsTrackingViewState of IStateManager
            </summary>
        </member>
        <member name="P:Sybase.DataWindow.Web.StateObject.IsTrackingViewState">
            <summary>
            Gets a value that indicates whether the object is saving changes to its view state.
            </summary>
        </member>
        <member name="P:Sybase.DataWindow.Web.StateObject.ViewState">
            <summary>
            Gets the StateBag object.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.PageNavigationBarSettings">
            <summary>
				Represents the properties of page navigation bar in WebDataWindowControl for page navigation.
			</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.PageNavigationBarSettings.#ctor">
            <summary>
				Initializes a new instance of the <b>PageNavigationBarSettings</b> class.
			</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.PageNavigationBarSettings.LoadViewState(System.Object)">
            <summary>
            Restores view-state information from a previous page request that was saved by the SaveViewState method.
            </summary>	
        </member>
        <member name="M:Sybase.DataWindow.Web.PageNavigationBarSettings.SaveViewState">
            <summary>
            Saves any view-state changes that have occurred since the time the page was posted back to the server.
            </summary>	
        </member>
        <member name="M:Sybase.DataWindow.Web.PageNavigationBarSettings.TrackViewState">
            <summary>
            auses tracking of view-state changes to the object so they can be stored in the object's StateBag object. This object is accessible through the StateObject.ViewState property.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.PageNavigationBarSettings.ToString">
            <summary>
            This member overrides ToString of Object.
            </summary>
        </member>
        <member name="P:Sybase.DataWindow.Web.PageNavigationBarSettings.BarStyle">
            <summary>
				Gets a reference to the PageNavigationBarStyle object that allows you to set the appearance style of the page navigation bar.
			</summary><value>
				A reference to the PageNavigationBarStyle object that represents the style of the page navigation bar.
			</value><remarks>
				Use the BarStyle property to control the appearance(like background color, border style and so on) of the page 
				navigation bar. This property is read-only; however, you can set the properties of the PageNavigationBarStyle object it returns.
			</remarks>
        </member>
        <member name="P:Sybase.DataWindow.Web.PageNavigationBarSettings.NextPrevNavigator">
            <summary>
				Gets a reference to the NextPrevPageNavigatorSettings object that allows you to set the properties of NextPrev style page navigator in the page navigation bar.
			</summary><value>
				A reference to the NextPrevPageNavigatorSettings object that contains the properties of NextPrev style page navigator in the page navigation bar.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.PageNavigationBarSettings.NumericNavigator">
            <summary>
				Gets a reference to the NumericPageNavigatorSettings object that allows you to set the properties of Numeric style page navigator in the page navigation bar.
			</summary><value>
				A reference to the NumericPageNavigatorSettings object that contains the properties of Numeric style page navigator in the page navigation bar.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.PageNavigationBarSettings.QuickGoNavigator">
            <summary>
				Gets a reference to the QuickGoPageNavigatorSettings object that allows you to set the properties of Quick Go style page navigator in the page navigation bar.
			</summary><value>
				A reference to the QuickGoPageNavigatorSettings object that contains the properties of Quick Go style page navigator in the page navigation bar.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.PageNavigationBarSettings.PageStatusInfo">
            <summary>
				Gets a reference to the PageStatusInfo object that allows you to set the visibility and appearance of current page status information in the page navigation bar.
			</summary><value>
				A reference to the PageStatusInfo object that contains visibility and appearance of current page status information in the page navigation bar.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.PageNavigationBarSettings.Visible">
            <summary>
				Gets or sets a value indicating whether the page navigation bar is displayed in the WebDataWindowControl.
			</summary><value>
				<c>true</c> to display the page navigation bar; otherwise, <c>false</c>. The default value is <c>false</c>.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.PageNavigationBarSettings.Position">
            <summary>
				Gets or sets the position of the page navigation bar in the WebDataWindowControl.
			</summary><value>
				One of the <see cref="T:Sybase.DataWindow.Web.NavigationBarPosition"/> values. The default value is Bottom.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.PageNavigationBarSettings.NavigatorType">
            <summary>
				Gets or sets the navigator type of the page navigation bar in the WebDataWindowControl.
			</summary><value>
				One of the <see cref="T:Sybase.DataWindow.Web.PageNavigatorType"/> values. The default value is NextPrev.
			</value>
        </member>
        <member name="T:Sybase.DataWindow.Web.LinkArgumentCollection">
            <summary>Represents a collection of LinkArgument objects.
		</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.LinkArgumentCollection.#ctor">
            <overloads>Initializes a new instance of the LinkArgumentCollection class.</overloads><summary>Initializes a new instance of the LinkArgumentCollection class.</summary><remarks>The LinkArgumentCollection class provides a simple collection
			object that can be used to store a set of LinkArgument objects.
		</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.LinkArgumentCollection.#ctor(Sybase.DataWindow.Web.LinkArgument[])">
            <summary>Uses a LinkArgument array to initialize a new instance of the LinkArgumentCollection class.</summary><param name="linkArgumentEntries"> The LinkArgument array to be added to the LinkArgumentCollection. </param><remarks>The LinkArgumentCollection class provides a simple collection
			object that can be used to store a set of LinkArgument objects.
		</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.LinkArgumentCollection.Add(Sybase.DataWindow.Web.LinkArgument)">
            <summary>Adds a LinkArgument to the end of the LinkArgumentCollection.
		</summary><returns>The index at which the new element was inserted.</returns><param name="item"> The LinkArgument Object to be added to the end of the LinkArgumentCollection. </param>
        </member>
        <member name="M:Sybase.DataWindow.Web.LinkArgumentCollection.Insert(System.Int32,Sybase.DataWindow.Web.LinkArgument)">
            <summary>Inserts the specified LinkArgument into the collection at the specified index.
		</summary><param name="index">The zero-based index where the specified object should be inserted. </param><param name="item">The LinkArgument to insert.</param>
        </member>
        <member name="M:Sybase.DataWindow.Web.LinkArgumentCollection.Contains(Sybase.DataWindow.Web.LinkArgument)">
            <summary>Indicates whether the specified category is contained in the collection.
		</summary><returns><c>true</c> if the specified LinkArgument is contained in the collection; otherwise <c>false</c>.</returns><param name="item"> The LinkArgument to check for in the collection.  </param>
        </member>
        <member name="M:Sybase.DataWindow.Web.LinkArgumentCollection.IndexOf(Sybase.DataWindow.Web.LinkArgument)">
            <summary>Gets the index of the specified LinkArgument.
		</summary><returns>The index in the collection, or a null reference if the string does not exist in the collection.</returns><param name="item">The LinkArgument to retrieve the index of in the collection.  </param>		
        </member>
        <member name="M:Sybase.DataWindow.Web.LinkArgumentCollection.Remove(Sybase.DataWindow.Web.LinkArgument)">
            <summary>Removes the specified LinkArgument from the collection.
		</summary><param name="item">	The LinkArgument to remove from the collection.</param>		
        </member>
        <member name="M:Sybase.DataWindow.Web.LinkArgumentCollection.CopyTo(Sybase.DataWindow.Web.LinkArgument[],System.Int32)">
            <summary>Copies the collection elements to the specified array at the specified index.
		</summary><param name="linkArgumentArray">The linkArgumentArray to copy to.</param><param name="index">The index of the destination array at which to begin copying.</param>		
        </member>
        <member name="P:Sybase.DataWindow.Web.LinkArgumentCollection.Item(System.Int32)">
            <summary>Get or set a specified item from a linkArgumentArray.
	    </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.Design.DataWindowObjectBrowserForm">
            <summary>
            Summary description for DataWindowObjectBrowserForm.
            </summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.Design.DataWindowObjectBrowserForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.Design.DataWindowObjectBrowserForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.Design.DataWindowObjectBrowserForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.ResHelper">
            <summary>
            Summary description for ResHelper.
            This is a helper class for get the resources from DataWindow.resx or DataWindow.dll
            assembly manifest resources. It contains a lot of static methods which can be used 
            directly to get the resource string, int, bitmap,....
            This class can not be instantiated outside. ResHelper class itself maintains
            a single static instance of ResHelper
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.Design.LinkUrlEditor">
            <summary>
            Summary description for LinkUrlEditor.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.Design.UrlPathForm">
            <summary>
            Summary description for UrlPathForm.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.Design.UrlPathForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.Design.UrlPathForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.Design.ImageFileUrlEditor">
            <summary>
            Summary description for ImageFileUrlEditor.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.StreamImageContainer">
            <summary>A standard ASP.NET server control used to display a graph DataWindow as an image stream in a <see cref="P:Sybase.DataWindow.Web.GraphConfigurations.StreamImageContainerPage"/>.
	    </summary>
            
        </member>
        <member name="M:Sybase.DataWindow.Web.StreamImageContainer.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="T:Sybase.DataWindow.Web.GraphConfigurations">
            <summary>A class that wraps the deployment behavior for DataWindow graph object rendering.
		</summary><remarks>There are two ways to deploy the result of rendering a graph object in a WebDataWindowControl. Graphs can be displayed in a DataWindow in a stand-alone image file or in an image stream embedded into the Web page. You specify how you want the graph to be rendered by setting the <see cref="P:Sybase.DataWindow.Web.GraphConfigurations.RenderOption"></see> property.
	<para>If you set the RenderOption property to ImageFile, the rendering of the graph object is saved into a temporary file on the Web server and an image URL is generated to reference the temporary image file. The physical directory in which the temporary image file and URL path is specified in the  <see cref="P:Sybase.DataWindow.Web.GraphConfigurations.GraphDynamicImageFileUrlPath"/> property. This property must specify a URL path in your Web application virtual directory, and it must be a path that can be  mapped to a writable physical directory in your Web application's physical directory.</para>
	<para>If you set the RenderOption property to ImageStream, the rendering of the graph object is saved into a memory stream in the session cache in a <see cref="T:Sybase.DataWindow.Web.StreamImageContainer"></see> and the stream is output to a page whose content type is “image/jpeg”. The URL reference to the image, set in the <see cref="P:Sybase.DataWindow.Web.GraphConfigurations.StreamImageContainerPage"></see> property, points to this page instead of to an image file. </para>
	</remarks><seealso cref="P:Sybase.DataWindow.Web.GraphConfigurations.GraphDynamicImageFileUrlPath"></seealso><seealso cref="T:Sybase.DataWindow.Web.StreamImageContainer"></seealso><seealso cref="P:Sybase.DataWindow.Web.GraphConfigurations.StreamImageContainerPage"></seealso>
        </member>
        <member name="M:Sybase.DataWindow.Web.GraphConfigurations.#ctor">
            <summary>Initializes a new instance of the <b>GraphConfigurations</b> class.</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.GraphConfigurations.ToString">
            <summary>
            This member overrides ToString of Object.
            </summary>		
        </member>
        <member name="M:Sybase.DataWindow.Web.GraphConfigurations.CopyFrom(Sybase.DataWindow.Web.GraphConfigurations)">
            <summary>Duplicates the graph configurations of the specified GraphConfigurations into the instance of the GraphConfigurations class that this method is called from.
		</summary><param name="source">A GraphConfigurations instance that represents the graph configurations to copy.</param><remarks>Use the CopyFrom method to duplicate the properties of the specified GraphConfigurations object into the instance of the GraphConfigurations class that this method is called from.  All properties in the current instance of the GraphConfigurations class will be replaced by the associated property in the GraphConfigurations specified by the <i>source</i> parameter.
</remarks>	
        </member>
        <member name="P:Sybase.DataWindow.Web.GraphConfigurations.RenderOption">
            <summary>An enumeration that specifies whether a graph object in a DataWindow is rendered as an image file or an image stream.
	    </summary><value>The default value is ImageStream.</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.GraphConfigurations.StreamImageContainerPage">
            <summary>The URL of the page containing a StreamImageContainer server object that contains the rendering of a graph object saved in an image stream. The URL can be root relative or
		document relative. This property is only useful when the <see cref="P:Sybase.DataWindow.Web.GraphConfigurations.RenderOption"></see> property is set to ImageStream.
	    </summary><value>The default value is "StreamImageContainerPage.aspx".</value><remarks>The StreamImageContainerPage property is a page URL that points to a page in your Web application that contains a StreamImageContainer server control. The URL generated for the source of the image is based on the value of this property. For example, if
StreamImageContainerPage is set to “<i>/MyWebDemo/StreamImageContainerPage.aspx</i>”, then the image element in the generated page might look like this:
<code>&lt;image src = “/MyWebDemo/StreamImageContainerPage.aspx?ImageObjectName=GraphDemo_dwGraphColstacked3d_gr_1&amp;SerialNo=7360” &gt;</code>
<para>Here ImageObjectName and SerialNo are the parameters for the StreamImageContainerPage.aspx page.
The StreamImageContainer will get the image stream from the session cache using the values of these two parameters. </para>
<para>The StreamImageContainer page should contain only one server control, which must be a  StreamImageContainer control.  The StreamImageContainer control is a standard ASP.NET server control that inherits from System.Web.UI.WebControls.WebControl. It is placed in an ASP.NET page whose content type is "image/jpeg", so that it is displayed in the browser as an image.</para>
<para>DataWindow .NET provides C# and Visual Basic .NET templates for StreamImageContainerPage.aspx. You can include the template page into your Web application directly or use it as a template for your own StreamImageContainer page with a different page name.</para>
</remarks><example>The following Visual Basic example gets the user's choice of file or image display from a radio button then sets GraphConfigurations properties as requested and retrieves the DataWindow:<code>
	Private Sub ddlb_1_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ddlb_1.SelectedIndexChanged
        Dim ls_sqlca As Sybase.DataWindow.Transaction
        ls_sqlca = Session("sqlca")
        dw_1.DataWindowObject = ddlb_1.SelectedValue
        dw_1.SetTransaction(ls_sqlca)
        If rb_format.SelectedIndex = 0 Then
            dw_1.GraphConfigurations.RenderOption = Sybase.DataWindow.Web.GraphRenderOption.ImageStream
            dw_1.GraphConfigurations.StreamImageContainerPage = "StreamImageContainerPage.aspx"
        Else
            dw_1.GraphConfigurations.RenderOption = Sybase.DataWindow.Web.GraphRenderOption.ImageFile
            dw_1.GraphConfigurations.GraphDynamicImageFileUrlPath = "image/"
        End If
        dw_1.Retrieve()
    End Sub
</code></example><seealso cref="T:GraphConfigurations"></seealso><seealso cref="T:Sybase.DataWindow.Web.StreamImageContainer"></seealso>		
        </member>
        <member name="P:Sybase.DataWindow.Web.GraphConfigurations.GraphDynamicImageFileUrlPath">
            <summary>The URL path used for the generated image file reference and temporary image when a graph object in a DataWindow is rendered and saved in an image file.
	    </summary><value>The default value is an ImageStream.</value><remarks>If you set the RenderOption property to ImageFile, the rendering of the graph object is saved into a temporary file on the Web server and an image URL is generated to reference the temporary image file. The physical directory in which the temporary image file and URL path is specified in the  GraphDynamicImageFileUrlPath property. This property must specify a URL path in your Web application virtual directory, and it must be a path that can be  mapped to a writable physical directory in your Web application's physical directory.</remarks><example>The following Visual Basic example gets the user's choice of file or image display from a radio button then sets GraphConfigurations properties as requested and retrieves the DataWindow:<code>
	Private Sub ddlb_1_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ddlb_1.SelectedIndexChanged
        Dim ls_sqlca As Sybase.DataWindow.Transaction
        ls_sqlca = Session("sqlca")
        dw_1.DataWindowObject = ddlb_1.SelectedValue
        dw_1.SetTransaction(ls_sqlca)
        If rb_format.SelectedIndex = 0 Then
            dw_1.GraphConfigurations.RenderOption = Sybase.DataWindow.Web.GraphRenderOption.ImageStream
            dw_1.GraphConfigurations.StreamImageContainerPage = "StreamImageContainerPage.aspx"
        Else
            dw_1.GraphConfigurations.RenderOption = Sybase.DataWindow.Web.GraphRenderOption.ImageFile
            dw_1.GraphConfigurations.GraphDynamicImageFileUrlPath = "image/"
        End If
        dw_1.Retrieve()
    End Sub
</code></example>	
        </member>
        <member name="P:Sybase.DataWindow.Web.GraphConfigurations.ImageFormat">
            <summary>An enumeration that specifies the image format used to render the graph object in a DataWindow.
	    </summary><value>The default value is Png image format.</value>	
        </member>
        <member name="T:Sybase.DataWindow.Web.PageStatusInfo">
            <summary>
				Encapsulates the information used for displaying current page status in page navigation bar.
			</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.PageStatusInfo.#ctor">
            <summary>
				Initializes a new instance of the <b>PageStatusInfo</b> class.
			</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.PageStatusInfo.ToString">
            <summary>
            This member overrides ToString of Object.
            </summary>
        </member>
        <member name="P:Sybase.DataWindow.Web.PageStatusInfo.TextFormat">
            <summary>
				Gets or sets the text format used to generate page status text information displayed in the page navigation bar.
			</summary><value>
				A String containing zero or more format items. The default value is "Page {C} of {T}".
			</value><remarks>
				In the text format, {C} is the keyword for generating current page no; {T} is the keyword for generating page count;
				{R} is the keyword for generating row count; {F} is the keyword for generating the first row of current page; {L} is the
				keyword for generating the last row of current page; {S} is the keyword for generating starting page of current numeric group;
				{E} is the  keyword for generating ending page of current numeric group.
				For example, if the TextFormat is "Page {C} of {T}" and WebDataWindowControl has 10 pages and current page no is 3, the
				page status information text will be generated as Page 3 of 10 and shown on page navigation bar.
			</remarks>
        </member>
        <member name="P:Sybase.DataWindow.Web.PageStatusInfo.Position">
            <summary>
				Gets or sets postion of page status information displayed in the page navigation bar.
			</summary><value>
				One of the  <see cref="T:Sybase.DataWindow.Web.PageStatusInfoPosition"/> enumeration values. The default is <c>Right</c>.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.PageStatusInfo.Visible">
            <summary>
				Gets or sets a value indicating whether page status information is displayed in the page navigation bar.
			</summary><value>
				<c>true</c> to display the page status information; otherwise, <c>false</c>. The default value is <c>false</c>.
			</value>
        </member>
        <member name="T:Sybase.DataWindow.Web.LinkArgument">
            <summary>Represents an argument for a hyperlink in a WebDataWindowControl.
		</summary><remarks>You can add a link argument to a column, computed field, bitmap, or text control in a WebDataWindowControl in the control's Properties window:
	<list type="number"><item>In the Properties window for a WebDataWindowControl, click the ellipsis button in the ObjectLinks field. </item>
	<item>In the ObjectLink Collection Editor, click Add to add a new object link. </item>
	<item>With the new object link selected, click the ellipsis button in the LinkArguments field to open the LinkArgument Collection editor. </item>
	<item>Click Add to add a new link argument and specify a name, type, and value. If you select DataWindowColumn as the type, clicking the ellipsis button in the Value field displays a list of columns in the DataWindow. If you select DataWindowExpression, the Edit DataWindow Expression dialog box displays.</item>
	<item>Click OK to return to the ObjectLink Collection Editor where you can specify the other properties of the object link.</item></list>
	<para>The LinkArgument class encapsulates the HTML.LinkArgs property for a column, computed field, bitmap, or text control in a DataWindow object. You can specify values for the LinkArgs property on the HTML page in the properties view for the control in the DataWindow painter. Values you specify in the LinkArgument Collection Editor override values set in the painter.</para>
	</remarks><example>The following code is added to the .<i>aspx</i> file for a page when you add a link argument of type DataWindowColumn to the stock_code column and give it the name "code": <code>
	&lt;LinkArguments&gt;
		&lt;dw:LinkArgument Type="DataWindowColumn" Name="code" Value="stock_code"&gt;&lt;/dw:LinkArgument&gt;
	&lt;/LinkArguments&gt;
	</code>
	</example><seealso cref="T:Sybase.DataWindow.Web.ObjectLink"></seealso>
        </member>
        <member name="M:Sybase.DataWindow.Web.LinkArgument.#ctor">
            <overloads>Initializes a new instance of the LinkArgument class.</overloads><summary>Initializes a new instance of the LinkArgument class with the link's name, value, and type set to empty strings.</summary><seealso cref="T:Sybase.DataWindow.Web.LinkArgument"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.LinkArgument.#ctor(System.String,System.String,Sybase.DataWindow.Web.LinkArgumentType)">
            <!-- No matching elements were found for the following include tag --><include file="WebDataWindowComments.xml" path="doc/members/member[@name=&quot;M:LinkArgument(System.string, System.string, LinkArugmentType)&quot;]/*"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.LinkArgument.ToString">
            <summary>
            This member overrides ToString of Object.
            </summary>		
        </member>
        <member name="P:Sybase.DataWindow.Web.LinkArgument.Name">
            <summary>The name of an instance of a <see cref="T:Sybase.DataWindow.Web.LinkArgument"></see> object. The name is an arbitrary string that you specify when you create the LinkArgument object.
	    </summary><value>The default value is an empty string.</value><seealso cref="T:Sybase.DataWindow.Web.LinkArgument"/>
        </member>
        <member name="P:Sybase.DataWindow.Web.LinkArgument.Value">
            <summary>The value of a <see cref="T:Sybase.DataWindow.Web.LinkArgument"></see> instance.
	    </summary><value>The value is a column name if the LinkArgument.Type is DataWindowColumn, and an expression if the LinkArgument.Type is  DataWindowExpression.The default value is an empty string.</value><seealso cref="T:Sybase.DataWindow.Web.LinkArgument"/>
        </member>
        <member name="P:Sybase.DataWindow.Web.LinkArgument.Type">
            <summary>The type of a <see cref="T:Sybase.DataWindow.Web.LinkArgument"></see> instance. The type can be a string, a DataWindow column, or a DataWindow expression.
	    </summary><value>A value of the <see cref="T:Sybase.DataWindow.Web.LinkArgumentType"></see> enumeration. The default value is an empty string.</value><seealso cref="T:Sybase.DataWindow.Web.LinkArgument"/>
        </member>
        <member name="T:Sybase.DataWindow.Web.LinkArgumentConverter">
            <summary>Represents the LinkArgumentConverter class.
		</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.LinkArgumentConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Returns whether this converter can convert an object of the given type to an object of this converter's type.</summary><returns><c>true</c> if the type can be converted; otherwise <c>false</c>.</returns><param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context. </param><param name="sourceType">A <see cref="T:System.Type"></see> that represents the type you want to convert from. </param>
        </member>
        <member name="M:Sybase.DataWindow.Web.LinkArgumentConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Returns whether this converter can convert an object of this converter's type to an object of the given type.</summary><returns><c>true</c> if the type can be converted; otherwise <c>false</c>.</returns><param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context. </param><param name="destinationType">A <see cref="T:System.Type"></see> that represents the type you want to convert to. </param>
        </member>
        <member name="M:Sybase.DataWindow.Web.LinkArgumentConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <!-- No matching elements were found for the following include tag --><include file="WebDataWindowComments.xml" path="doc/members/member[@name=&quot;M:CanConvertFrom(ITypeDescriptorContext, CultureInfo, object)&quot;]/*"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.LinkArgumentConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <!-- No matching elements were found for the following include tag --><include file="WebDataWindowComments.xml" path="doc/members/member[@name=&quot;M:CanConvertFrom(ITypeDescriptorContext, CultureInfo, object, Type)&quot;]/*"/>
        </member>
        <member name="T:Sybase.DataWindow.Web.Design.LinkArgumentEditor">
            <summary>
            Summary description for LinkArgumentEditor.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.Design.DTEHelper">
            <summary>
            Summary description for DTEHelper.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.Design.DataWindowObjectEditor">
            <summary>
            Summary description for DataWindowObjectEditor.
            This UITypeEditor can be associated with datawindow object string properties
            of datawindow control or datastore to provide a design-mode datawindow object 
            selection interface.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.JavaScriptConfigurations">
            <summary>A class that wraps deployment behavior for management JavaScript used in the DataWindow client object model.
		</summary><remarks>In Visual Studio .NET or in DataWindow Designer, you can generate JavaScript files that contain the JavaScript required to manage common DataWindow operations and operations with DateTime, number, and string datatypes. You can then improve performance by distributing these files once as external files instead of embedding the  JavaScript in each Web page when it is rendered. If you choose this option, you also need to specify the URL where the external files are located.
				<para>To generate the JavaScript files in Visual Studio .NET, select Generate Client Management JavaScript from the pop-up menu for the WebDataWindowControl or from its Properties window and complete the dialog box. To generate the JavaScript files in DataWindow Designer, click the generate JavaScript button on the JavaScript Generation page in the DataWindow object's properties view. The wizard creates a single JavaScript file. You can select all the check boxes (Common, DateTime, Number, and String) to generate a file that contains all the management JavaScript, or run the wizard several times, selecting one check box at a time, to generate separate files. You must supply a name for each file. The default file name is Untitled.js.</para></remarks><seealso cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.JavaScriptOption"></seealso><seealso cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.ClientManagementJavaScriptUrlPath"></seealso>
        </member>
        <member name="M:Sybase.DataWindow.Web.JavaScriptConfigurations.#ctor">
            <summary>Initializes a new instance of the <b>JavaScriptConfigurations</b> class.</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.JavaScriptConfigurations.ToString">
            <summary>
            This member overrides ToString of Object.
            </summary>	
        </member>
        <member name="M:Sybase.DataWindow.Web.JavaScriptConfigurations.CopyFrom(Sybase.DataWindow.Web.JavaScriptConfigurations)">
            <summary>Duplicates the JavaScript configuration of the specified JavaScriptConfigurations instance into the instance of the JavaScriptConfigurations class that this method is called from.
		</summary><param name="source">A JavaScriptConfigurations instance that represents the JavaScript configuration to copy.</param><remarks>Use the CopyFrom method to duplicate the properties of the specified JavaScriptConfigurations object into the instance of the JavaScriptConfigurations class that this method is called from.  All properties in the current instance of the JavaScriptConfigurations class will be replaced by the associated property in the JavaScriptConfigurations specified by the <i>source</i> parameter.
</remarks>	
        </member>
        <member name="P:Sybase.DataWindow.Web.JavaScriptConfigurations.JavaScriptOption">
            <summary>Specifies whether JavaScript used to perform common functions is embedded in the page when it is rendered or deployed in an external file.
	    </summary><value>A value of the JavaScriptOption enumeration that specifies whether JavaScript is embedded in the page returned to the browser or an associated internal JavaScript file, or deployed in an external file. The default value is EmbeddedInPageAtRendering.</value><remarks>In Visual Studio .NET or in DataWindow Designer, you can generate files containing JavaScript functions required by the DataWindow at runtime, including common functions and functions used with DataTime, number, and string datatypes. The JavaScript files are used by all the WebDataWindowControl's rendering formats. If you set the JavaScriptOption property to ExternalFile, the files are downloaded to the browser client once per session for use by all DataWindows. After generating the files, add them to your Web application as resource content and set the <see cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.ClientManagementJavaScriptUrlPath"></see>, <see cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.CommonManagementJavaScriptFile"></see>, <see cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.DateTimeManagementJavaScriptFile"></see>, <see cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.NumberManagementJavaScriptFile"></see>, and <see cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.StringManagementJavaScriptFile"></see> properties. Using external files improves performance and saves network bandwidth.
	<para>If you use the default setting, EmbeddedInPageAtRendering, the JavaScript is dynamically generated together with the DataWindow data and transferred to the client browser. The JavaScriptUrlPath and JavaScriptFile properties are ignored. For Web DataWindows that use the HTML rendering format, the JavaScript is embedded in the page itself. For XML and XHTML Web DataWindows, the JavaScript is in internal JavaScript files.</para></remarks><seealso cref="T:Sybase.DataWindow.Web.JavaScriptConfigurations"></seealso><seealso cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.ClientManagementJavaScriptUrlPath"></seealso>		
        </member>
        <member name="P:Sybase.DataWindow.Web.JavaScriptConfigurations.ClientManagementJavaScriptUrlPath">
            <summary>Specifies the URL path for referencing all categories of JavaScript files used to support the WebDataWindowControl client runtime model.
	    </summary><remarks>If you set this property, you do not need to include a URL in the values for <see cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.CommonManagementJavaScriptFile"></see>, <see cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.DateTimeManagementJavaScriptFile"></see>, <see cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.NumberManagementJavaScriptFile"></see>, and <see cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.StringManagementJavaScriptFile"></see>.
	<para>This property corresponds to the ResourceBase value specified for the HTMLGen DataWindow object property in the DataWindow painter.</para>
	</remarks><seealso cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.JavaScriptOption"></seealso>			
        </member>
        <member name="P:Sybase.DataWindow.Web.JavaScriptConfigurations.CommonManagementJavaScriptFile">
            <summary>The name of the file that contains common management JavaScript functions used by the DataWindow client object model at runtime.
	    </summary><value>A string that specifies the cache file name for common JavaScript functions. The default value is "dwcommon.js".</value><remarks>If you set this property, the file is downloaded to the browser client once per session for use by all DataWindows. You can prefix the file name to a URL, for example <i>/mywebapp/javascript/dwcommon.js</i>, or you can use the URL that you set with the <see cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.ClientManagementJavaScriptUrlPath"></see>.</remarks><seealso cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.JavaScriptOption"></seealso>					
        </member>
        <member name="P:Sybase.DataWindow.Web.JavaScriptConfigurations.DateTimeManagementJavaScriptFile">
            <summary>The name of the file that contains common JavaScript functions for the DateTime format. The JavaScript is used by the DataWindow client object model at runtime.
	    </summary><value>A string that specifies the cache file name for functions that use a DateTime format. The default value is "dwdatetime.js".</value><remarks>If you set this property, the file is downloaded to the browser client once per session for use by all DataWindows. You can prefix the file name to a URL, for example <i>/mywebapp/javascript/dwdatetime.js</i>, or you can use the URL that you set with the <see cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.ClientManagementJavaScriptUrlPath"></see>.</remarks><seealso cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.JavaScriptOption"></seealso>
        </member>
        <member name="P:Sybase.DataWindow.Web.JavaScriptConfigurations.NumberManagementJavaScriptFile">
            <summary>The name of the file that contains common JavaScript functions for number formats. The JavaScript is used by the DataWindow client object model at runtime.
	    </summary><value>A string that specifies the cache file name for functions that use a number format. The default value is  "dwnumber.js".</value><remarks>If you set this property, the file is downloaded to the browser client once per session for use by all DataWindows. You can prefix the file name to a URL, for example <i>/mywebapp/javascript/dwnumber.js</i>, or you can use the URL that you set with the <see cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.ClientManagementJavaScriptUrlPath"></see>.</remarks><seealso cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.JavaScriptOption"></seealso>			
        </member>
        <member name="P:Sybase.DataWindow.Web.JavaScriptConfigurations.StringManagementJavaScriptFile">
            <summary>The name of the file that contains common JavaScript functions for string formats. The JavaScript is used by the DataWindow client object model at runtime.
	    </summary><value>A string that specifies the cache file name for functions that use a string format. The default value is "dwstring.js".</value><remarks>If you set this property, the file is downloaded to the browser client once per session for use by all DataWindows. You can prefix the file name to a URL, for example <i>/mywebapp/javascript/dwstring.js</i>,or you can use the URL that you set with the <see cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.ClientManagementJavaScriptUrlPath"></see>.</remarks><seealso cref="P:Sybase.DataWindow.Web.JavaScriptConfigurations.JavaScriptOption"></seealso>			
        </member>
        <member name="T:Sybase.DataWindow.Web.Design.LinkObjectNameEditor">
            <summary>
            Summary description for LinkObjectNameEditor.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.Design.DropDownEditStyleEditor">
            <summary>
            Summary description for DropDownEditStyleEditor.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.Design.ClientEventNameForm">
            <summary>
            Summary description for ClientEventNameForm.
            </summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.Design.ClientEventNameForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.Design.ClientEventNameForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.Design.ClientEventNameForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.ObjectLinkCollection">
            <summary>Represents a collection of LinkArgument objects.
		</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.ObjectLinkCollection.#ctor">
            <overloads>Initializes a new instance of the LinkArgumentCollection class.</overloads><summary>Initializes a new instance of the LinkArgumentCollection class.</summary><remarks>The LinkArgumentCollection class provides a simple collection
			object that can be used to store a set of LinkArgument objects.
		</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.ObjectLinkCollection.Add(Sybase.DataWindow.Web.ObjectLink)">
            <summary>Adds an ObjectLink to the end of the ObjectLinkCollection.
		</summary><returns>The index at which the new element was inserted.</returns><param name="item">	The ObjectLink object to be added to the end of the ObjectLinkCollection. </param>
        </member>
        <member name="M:Sybase.DataWindow.Web.ObjectLinkCollection.Insert(System.Int32,Sybase.DataWindow.Web.ObjectLink)">
            <summary>Inserts the specified ObjectLink into the collection at the specified index.
		</summary><param name="index">The zero-based index where the specified object should be inserted. </param><param name="item">The ObjectLink to insert.</param>
        </member>
        <member name="M:Sybase.DataWindow.Web.ObjectLinkCollection.Contains(Sybase.DataWindow.Web.ObjectLink)">
            <summary>Indicates whether the specified category is contained in the collection.
		</summary><returns><c>true</c> if the specified ObjectLink is contained in the collection;
		otherwise <c>false</c>.</returns><param name="item"> The ObjectLink to check for in the collection.  </param>
        </member>
        <member name="M:Sybase.DataWindow.Web.ObjectLinkCollection.IndexOf(Sybase.DataWindow.Web.ObjectLink)">
            <summary>Gets the index of the specified ObjectLink.
		</summary><returns>The index in the collection, or a null reference (Nothing in Visual
		Basic) if the string does not exist in the collection.</returns><param name="item">The ObjectLink to retrieve the index of in the collection.  </param>
        </member>
        <member name="M:Sybase.DataWindow.Web.ObjectLinkCollection.Remove(Sybase.DataWindow.Web.ObjectLink)">
            <summary>Removes the specified ObjectLink from the collection.
		</summary><param name="item">	The ObjectLink to remove from the collection.</param>
        </member>
        <member name="M:Sybase.DataWindow.Web.ObjectLinkCollection.CopyTo(Sybase.DataWindow.Web.ObjectLink[],System.Int32)">
            <summary>Copies the collection elements to the specified array at the specified index.
		</summary><param name="objectLinkArray"> The objectLinkArray to copy to.</param><param name="index">The index of the destination array at which to begin copying.</param>
        </member>
        <member name="P:Sybase.DataWindow.Web.ObjectLinkCollection.Item(System.Int32)">
            <summary>Get/Set one specified item from linkArgumentArray.
	    </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.BeforePerformActionEventArgs">
            <summary>Provides data for the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.BeforePerformAction"/> event.</summary>
        </member>
        <member name="P:Sybase.DataWindow.Web.BeforePerformActionEventArgs.Action">
            <summary>The client DataWindow postback action.</summary><value>A value of the <see cref="T:Sybase.DataWindow.Web.PostBackAction"/> enumeration indicating the action to be performed.</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.BeforePerformActionEventArgs.CancelAction">
            <summary>Gets or sets a value indicating whether the action can be canceled.</summary><value><c>true</c> to cancel the action,  <c>false</c> otherwise.</value>
        </member>
        <member name="T:Sybase.DataWindow.Web.BeforePerformActionEventHandler">
            <summary>Represents the method that will handle the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.BeforePerformAction"/> event of the WebDataWindowControl.  </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.AfterPerformActionEventArgs">
            <summary>Provides data for the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.AfterPerformAction"/> event.</summary>
        </member>
        <member name="P:Sybase.DataWindow.Web.AfterPerformActionEventArgs.Action">
            <summary>The client DataWindow postback action.</summary><value>A value of the <see cref="T:Sybase.DataWindow.Web.PostBackAction"/> enumeration indicating the action that was performed.</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.AfterPerformActionEventArgs.ActionResult">
            <summary>Gets a value that indicates whether the action succeeded.</summary><value>An integer value. Possible values are 1 for success and  -1 for failure.</value>
        </member>
        <member name="T:Sybase.DataWindow.Web.AfterPerformActionEventHandler">
            <summary>Represents the method that will handle the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.AfterPerformAction"/> event of the WebDataWindowControl.</summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.AutoDataCacheErrorEventArgs">
            <summary>Provides data for the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.AutoDataCacheError"/> event.</summary>
        </member>
        <member name="P:Sybase.DataWindow.Web.AutoDataCacheErrorEventArgs.ErrorCode">
            <summary>Gets the value of the  error code for an automatic data cache error.</summary><remarks>ErrorCode can have one of the following values:<list type="bullet">
									<item><b>-1</b> A DataWindow object has not been assigned or has not completed initialization. This corresponds to the DataWindowNotCreatedException.</item>
									<item><b>-2</b> The Page property of the WebDataWindowControl is <c>null</c>.</item>
								<item><b>-3</b> The Page.Session property is <c>null</c>.</item>
								<item><b>-4</b> The data cache does not exist (applies to restore only).</item>
								<item><b>-5</b> The DataWindowObject and LibraryList properties of the data cache do not match those of the WebDataWindowControl (applies to restore only).</item>
								<item><b>-6</b> The method failed in the DataWindow server.</item>
								</list></remarks>
        </member>
        <member name="P:Sybase.DataWindow.Web.AutoDataCacheErrorEventArgs.Action">
            <summary>The action (save or restore) that caused the automatic data cache error.</summary><value>A value of the <see cref="T:Sybase.DataWindow.Web.AutoDataCacheAction"/> enumeration indicating the action that caused the error.</value>
        </member>
        <member name="T:Sybase.DataWindow.Web.AutoDataCacheErrorEventHandler">
            <summary>Represents the method that will handle the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.AutoDataCacheError"/> event of the WebDataWindowControl.</summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.AutoContextRestoreErrorEventArgs">
            <summary>Provides data for the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.AutoContextRestoreError"/> event.</summary>
        </member>
        <member name="P:Sybase.DataWindow.Web.AutoContextRestoreErrorEventArgs.ErrorCode">
            <summary>Gets the value of the error code for an error during the restoration of context.</summary><remarks>ErrorCode is the ReturnCode of a MethodFailureException thrown when the SetHtmlAction method of the DataStore fails. </remarks><seealso cref="M:Sybase.DataWindow.DataStore.SetHtmlAction(System.String,System.String)"></seealso>
        </member>
        <member name="T:Sybase.DataWindow.Web.AutoContextRestoreErrorEventHandler">
            <summary>Represents the method that will handle the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.AutoContextRestoreError"/> event of the WebDataWindowControl.</summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.Design.LibraryListEditor">
            <summary>
            Summary description for LibraryListEditor.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.PageNavigationBarStyle">
            <summary>
				Represents the properties of page navigation bar in WebDataWindowControl for page navigation.
			</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.PageNavigationBarStyle.CopyFrom(System.Web.UI.WebControls.Style)">
            <summary>
            Copies the style of the specified Style object into this instance of the <b>PageNavigationBarStyle</b> class. This member overrides CopyFrom of Style.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.PageNavigationBarStyle.Reset">
            <summary>
            Restores the <b>PageNavigationBarStyle</b> object to its default values. . This member overrides Reset of Style.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.PageNavigationBarStyle.MergeWith(System.Web.UI.WebControls.Style)">
            <summary>
            Merges the style of the specified Style object with this instance of the <b>PageNavigationBarStyle</b> class. This member overrides MergeWith of Style.
            </summary>
        </member>
        <member name="P:Sybase.DataWindow.Web.PageNavigationBarStyle.HorizontalAlign">
            <summary>
				Gets or sets the horizontal alignment of the contents in the page navigation bar.
			</summary><value>
				One of the  <see cref="T:System.Web.UI.WebControls.HorizontalAlign"/> enumeration values. The default is <c>NotSet</c>.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.PageNavigationBarStyle.VerticalAlign">
            <summary>
				Gets or sets the vertical alignment of the contents in the page navigation bar.
			</summary><value>
				One of the  <see cref="T:System.Web.UI.WebControls.VerticalAlign"/> enumeration values. The default is <c>NotSet</c>.
			</value>
        </member>
        <member name="T:Sybase.DataWindow.Web.ScrollBarStyle">
            <summary>Specifies the style of the scrollbar.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.ScrollBarStyle.Auto">
            <summary>Default. Content is clipped and scrolling is added only when necessary. 
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.ScrollBarStyle.Fixed">
            <summary>Content is clipped and scrollbar is added, even if the content does not 
		exceed the dimensions of the object. 
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.ScrollBarStyle.None">
            <summary>Content is not clipped and scrollbar is not added. 
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.ScrollBarStyle.NoneAndClip">
            <summary>Content that exceeds the dimensions of the object is not shown. Scrollbar is not added. 
		</summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.PostBackAction">
            <summary>Indicates the type of postback action.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PostBackAction.Retrieve">
            <summary>Retrieve rows from the database. 
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PostBackAction.InsertRow">
            <summary>If triggered from a button in the Detail band, insert a row using the row number associated with the button; otherwise, insert a row using the current row. 
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PostBackAction.AppendRow">
            <summary>Insert a row at the end. 
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PostBackAction.DeleteRow">
            <summary>If triggered from a button in the Detail band, delete the row associated with the button; otherwise, delete the current row.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PostBackAction.Update">
            <summary>Save changes to the database. If the update is successful, a COMMIT is issued; otherwise, a ROLLBACK is issued. 
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PostBackAction.Sort">
            <summary>Sort the rows in DataWindow.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PostBackAction.PageNext">
            <summary>Scroll to the next page. 
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PostBackAction.PagePrior">
            <summary>Scroll to the previous page. 
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PostBackAction.PageFirst">
            <summary>Scroll to the first page. 
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PostBackAction.PageLast">
            <summary>Scroll to the last page. 
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PostBackAction.QueryModeOn">
            <summary>
            This enum value is designed for DataWindow .NET internal usage only and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PostBackAction.QuerySortOn">
            <summary>
            This enum value is designed for DataWindow .NET internal usage only and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PostBackAction.QueryClear">
            <summary>
            This enum value is designed for DataWindow .NET internal usage only and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.RenderFormat">
            <summary>Specifies the markup language format in which the DataWindow is to be rendered.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.RenderFormat.Html">
            <summary>HTML format. 
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.RenderFormat.XHtml">
            <summary>XHTML format. 
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.RenderFormat.Xml">
            <summary>XML format. 
		</summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.GraphRenderOption">
            <summary>Specifies how a graph object in a DataWindow is rendered.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.GraphRenderOption.ImageStream">
            <summary>Render the graph object as an image stream saved in the session cache and output to a page of context type "image/jpeg". 
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.GraphRenderOption.ImageFile">
            <summary>Render the graph object as a standalone image file. 
		</summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.GraphImageFormat">
            <summary>Specifies the image format used to render the graph object in a DataWindow.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.GraphImageFormat.Gif">
            <summary>GIF image format. 
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.GraphImageFormat.Jpeg">
            <summary>JPEG image format.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.GraphImageFormat.Png">
            <summary>PNG image format. 
		</summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.JavaScriptOption">
            <summary>Specifies how JavaScript functions required by the client runtime object model are deployed.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.JavaScriptOption.EmbeddedInPageAtRendering">
            <summary>JavaScript functions are embedded in the page when it is rendered. 
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.JavaScriptOption.ExternalFile">
            <summary>JavaScript functions are deployed to the browser once per session in standalone files of the web site. 
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.JavaScriptOption.WebResourceFile">
            <summary>JavaScript functions are deployed to the browser once per session in files, which are embeded in WebDataWindow.dll assembly as WebResource.
		With this option, the deployment can be simplified but the browser file cache will still be there like that in ExternalFile option.
		</summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.LinkArgumentType">
            <summary>Specifies the type of a link argument.
		</summary><seealso cref="T:LinkArguments"/>
        </member>
        <member name="F:Sybase.DataWindow.Web.LinkArgumentType.NormalString">
            <summary>The link argument is a string. 
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.LinkArgumentType.DataWindowColumn">
            <summary>The link argument is a DataWindow column. 
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.LinkArgumentType.DataWindowExpression">
            <summary>The link argument is a DataWindow expression. 
		</summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.AutoDataCacheAction">
            <summary>Indicates whether the action performed with AutoDataCache set to true was a Save or Restore.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.AutoDataCacheAction.Save">
            <summary>Automatic save of data cache. 
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.AutoDataCacheAction.Restore">
            <summary>Automatic restore of data cache. 
		</summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.NavigationBarPosition">
            <summary>
			Specifies the position of the page navigation bar within a WebDataWindowControl.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.NavigationBarPosition.Bottom">
            <summary>
			The page navigation bar is positioned at the bottom of a WebDataWindowControl.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.NavigationBarPosition.Top">
            <summary>
			The page navigation bar is positioned at the top of a WebDataWindowControl.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.NavigationBarPosition.TopAndBottom">
            <summary>
			The page navigation bar is positioned at both the top and the bottom of a WebDataWindowControl.
		</summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.QuickGoPageNavigatorType">
            <summary>
			Specifies the style of Quick Go Navigator in page navigation bar.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.QuickGoPageNavigatorType.Edit">
            <summary>
			The Edit style Quick Go Navigator. An edit box is shown for page number input.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.QuickGoPageNavigatorType.DropDownList">
            <summary>
			The DropDownList style Quick Go Navigator. An dropdowlist box is shown for page number selection.
		</summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.PageStatusInfoPosition">
            <summary>
			Specifies position of page status information to be shown.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PageStatusInfoPosition.Left">
            <summary>
			The page status information is shown on the left of navigation within the page navigation bar.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PageStatusInfoPosition.Right">
            <summary>
			The page status information is shown on the right of navigation within the page navigation bar.
		</summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.PageNavigatorType">
            <summary>
			Specifies navigator type of page navigation bar.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PageNavigatorType.NextPrev">
            <summary>
			A navigator consisting of previous, next, first, and last page buttons for page navigation.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PageNavigatorType.Numeric">
            <summary>
			A navigator consisting of consisting of numbered and first and last page link buttons for page navigation.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PageNavigatorType.QuickGo">
            <summary>
			A navigator consisting of a page number input edit box or page number selection drowdownlist box for direct page navigation.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PageNavigatorType.NextPrevWithQuickGo">
            <summary>
			A navigator combined with NextPrev and QuickGo navigators.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PageNavigatorType.NumericWithQuickGo">
            <summary>
			A navigator combined with Numberic and QuickGo navigators.
		</summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.PagingMethod">
            <summary>Specifies the mechanism used to execute paging actions for the respective RenderFormat.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PagingMethod.PostBack">
            <summary>PostBack method (default). The paging action results in a postback to the server.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PagingMethod.Callback">
            <summary>Script Callback method. The Script Callback mechanism is used to retrieve the next page from the server. For the Xml RenderFormat, only the next page of XML records are retrieved.
		</summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.PagingMethod.XmlClientSide">
            <summary>Client-Side method using the Xml RenderFormat. All records are downloaded to the client on first request in XML, and all subsequent paging actions are performed purely on the client.
		</summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.Design.LinkArgumentCollectionEditor">
            <summary>
            Summary description for LinkArgumentCollectionEditor.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.Design.LibraryListControl">
            <summary>
            Summary description for LibraryListControl.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.Design.LibraryListControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.Design.LibraryListControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.Design.ClientEventScriptEditor">
            <summary>
            Summary description for ClientEventScriptEditor.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.Design.MSHTMLHelper">
            <summary>
            Summary description for MSHTMLHelper.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.Design.JSGenerationForm">
            <summary>
            Summary description for JSGenerationForm.
            </summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.Design.JSGenerationForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.Design.JSGenerationForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.Design.JSGenerationForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.Design.AspxPageUrlEditor">
            <summary>
            Summary description for AspxPageUrlEditor.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.WebDataWindowControl">
            <summary>A visual control that contains a WebDataWindow object.
	    </summary>
            
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.#ctor">
            <overloads>Initializes a new instance of the <b>WebDataWindowControl</b> class.</overloads><summary>Initializes a new instance of the <b>WebDataWindowControl</b> class.</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.CalculateGroups">
            <summary>Recalculates the breaks in the grouping levels in a DataWindow. 
      </summary><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>Use <b>CalculateGroups</b> to force the DataWindow object to recalculate the breaks in the 
         grouping levels after you have added or modified rows in a DataWindow. <b>CalculateGroups</b> does not 
         sort the data before it recalculates the breaks; therefore, unless you populated the DataWindow 
         in a sorted order, call the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Sort"/> method to sort the data before you call <b>CalculateGroups</b>. 
      </remarks><example>This code imports new rows from a file into the DataWindow <c>dwEmp</c> and recalculates 
         the group breaks after applying the default sort ordering stored as part of the DataWindow object:
         <code>
         dwEmp.ImportFile("d:\employee.txt", Sybase.DataWindow.FileSaveAsType.Text)
         dwEmp.Sort()
         dwEmp.CalculateGroups()
         dwEmp.Refresh()
         </code>
			</example>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.Create(System.String)">
            <summary>Dynamically creates and assigns a DataWindow object to a DataWindowControl or DataStore. 
      </summary><param name="Syntax">A string containing the DataWindow source code for the DataWindow object.</param><exception cref="T:System.ArgumentNullException">
				<i>Syntax</i> is null. </exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>Use the <see cref="M:Sybase.DataWindow.DataWindowSyntaxGenerator.DataWindowSyntaxFromSql(Sybase.DataWindow.Transaction,System.String)"/> to create the
         DataWindow syntax based on a SQL statement. You can also use the 
         syntax of an existing DataWindow object as a template. To obtain the syntax, use the Export item on the BindAdoDataTable is not supported for crosstab DataWindows.</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.DbCancel">
            <summary>Cancels the retrieval in process. 
      </summary><exception cref="T:System.InvalidOperationException">The object is not connected to a database. </exception><exception cref="T:System.NotSupportedException">The object is a DataWindowChild that is a DropDownDataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<!-- You can let users cancel a retrieval in progress by setting the Async database parameter to 1 before beginning a retrieve.-->
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Retrieve(System.Data.DataTable)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.DeleteRow(System.Int32)">
            <summary>Deletes a row from the DataWindow. 
      </summary><param name="RowNumber">The number of the row to be deleted. If 0, the current row will be deleted.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is not valid.</exception><exception cref="T:System.NotSupportedException">The assigned DataWindow object is a Crosstab.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>The designated row is removed from the DataWindow's Primary buffer. If the DataWindow is not updatable, 
         all storage associated with the row is cleared. If the DataWindow is updatable, <b>DeleteRow</b> moves the row to 
         the DataWindow's Delete buffer. The row is not deleted from the database table until the application calls the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData"/> method. After 
         the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData"/> method has updated the database and the status flags are reset, the storage associated 
         with the row is cleared.</para>
			</remarks><example>This example shows the code for a button that deletes the last row from <c>dwItems</c>:
         <code>      
         [Visual Basic]
         Private Sub cb_delitem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cb_delitem.Click
            dwItems.DeleteRow(dwItems.RowCount)
         End Sub
         
         [C#]
         private void cb_delitem_Click(object sender, System.EventArgs e)
         {
            dwItems.DeleteRow(dwItems.RowCount);
         }
         </code>
			</example>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.Describe(System.String)">
            <summary>Reports the values of properties of a DataWindow object and the controls within it. 
      </summary><returns>A string that includes a value for each property.</returns><param name="Syntax">A string whose value is a blank-separated list of properties.</param><exception cref="T:System.ArgumentNullException">
				<i>Syntax</i> is null.</exception><exception cref="T:System.ArgumentException">
				<i>Syntax</i> contains an invalid property.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><remarks>
				<para>Use <b>Describe</b> to understand the structure of a DataWindow object. For example, you can find which 
         bands the DataWindow uses and the datatypes of its columns.</para>
				<para>
					<b>Describe</b> differs from <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetProperty(System.String)"/> in that it allows you go retrieve multiple properties in one invocation.</para>
			</remarks><example>This Visual Basic example changes a crosstab DataWindow to have a more formatted appearance: 
         <code>
         Private Sub ChangeCrossTab()
         
            'This function will dynamically change a crosstab to have a
            'more formatted appearance.
         
            Dim ColumnCount As Integer
            Dim Counter As Integer
            Dim CurrentIndex, NextIndex As Integer
         
            Dim Split, DWBand, ObjectType As String
            Dim DWObjects, DWObject, ModString As String
            Dim Temp As String
            Dim ColName As String
         
            Try
               ' returns a list of all of the DWObjects on the datawindow
               DWObjects = dwCust.Describe("datawindow.objects")
         
               CurrentIndex = 0
               NextIndex = DWObjects.IndexOf("\t")
         
               Do Until NextIndex = -1
                  DWObject = Mid(DWObjects, CurrentIndex, NextIndex - CurrentIndex)
         
                  'center text in the heading
                  DWBand = dwCust.Describe(DWObject + ".Band")
                  If DWBand.ToLower().Substring(0, 5).Equals("header") Then
                     ModString = ModString + DWObject + ".Alignment=2 " + DWObject + ".Font.Weight=700 "
                  End If
         
                  'format detail and total columns differently
                  ObjectType = dwCust.Describe(DWObject + ".Type")
                  If ObjectType.ToLower().Equals("compute") Then
                     Temp = dwCust.Describe(DWObject + ".Expression")
                     If Temp.IndexOf("sum") &gt; 0 Then
                        ModString = ModString + DWObject + ".Format='$#,##0' "
                     ElseIf Temp.IndexOf("count") &gt; 0 Then
                        ModString = ModString + DWObject + ".Format='#,##0' "
                     End If
                  ElseIf ObjectType.ToLower().Equals("column") Then
                     Temp = dwCust.Describe(DWObject + ".Coltype")
                     If Temp.IndexOf("dec") &gt; 0 Then
                        ModString = ModString + DWObject + ".Format='$#,##0.00' "
                     ElseIf Temp.IndexOf("num") &gt; 0 Then
                        ModString = ModString + DWObject + ".Format='#,##0.00' "
                     End If
                  End If
         
                  'loop through all the DWObjects on the datawindow
                  CurrentIndex = NextIndex + 1
                  NextIndex = DWObjects.IndexOf("\t", CurrentIndex)
               Loop
         
               dwCust.Modify(ModString)
         
            Catch ex As Exception
               ErrorHandler.HandleException(ex)
            End Try
         End Sub
         </code>
			</example><example>This line of code returns a string that lists all the controls in the DataWindow object contained in DW1:
         <code>str = DW1.Describe("datawindow.objects")</code>
			</example><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetProperty(System.String)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Modify(System.String)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.Filter">
            <summary>Moves rows that do not match the current filter expression from the Primary buffer to the Filter buffer. 
      </summary><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>When the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Retrieve(System.Data.DataTable)"/> method retrieves rows
         into the DataWindow, it automatically uses the current filter (which may be part of the definition of the DataWindow object). You only need to call this method after changing 
         the filter expression with <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetFilter(System.String)"/> or <see cref="M:Sybase.DataWindow.DataWindowControl.FilterDialog"/> or if the data has changed because of processing or user input.</para>
				<para>When you filter a DataWindow with groups, you should call <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.CalculateGroups"/> after calling <b>Filter</b>.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetFilter(System.String)"/><seealso cref="M:Sybase.DataWindow.DataWindowControl.FilterDialog"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.FindRow(System.String,System.Int32,System.Int32)">
            <summary>Finds the next row in a DataWindow which meets the specified condition. 
      </summary><returns>The number of the first row between <i>BeginRow</i> and <i>EndRow</i> that meets the search criteria, or 0 if there are no such rows.
         </returns><param name="Expression">A string whose value is a boolean expression to be used as the 
         search criteria.</param><param name="BeginRow">The row number at which to begin the search.</param><param name="EndRow">The row number at which to end the search.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>BeginRow</i> or <i>EndRow</i> is less than zero.</exception><exception cref="T:Sybase.DataWindow.InvalidExpressionException">
				<i>Expression</i> is not valid DataWindow expression syntax.</exception><exception cref="T:System.ArgumentNullException">
				<i>Expression</i> is null.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>The search is case sensitive.</para>
				<para>To search backwards, make <i>EndRow</i> less than <i>BeginRow</i>. Beware of creating an endless loop, which can occur if you are searching for all occurrences within a DataWindow and the last 
         row satisfies the search criteria. To solve this problem, you can make <i>EndRow</i> 1 greater than the number of rows, or exit the search loop when the current 
         row (<i>BeginRow</i> for that iteration of the loop) is greater than the row count.</para>
				<para>If the 
         text you want to find includes quotes, you must treat the nested quote as doubly nested; therefore, you cannot simply alternate double and 
         single quotes, as you can in most strings. For example, to find the name O'Neil, <i>Expression</i> can be:
         <c>"O~~~'Neil"</c> (3 tildes and single quote) or <c>"O~~~~~"Neil"</c> (5 tildes and double quote) but not <c>"O'Neil"</c> or 
         <c>"O~"Neil"</c>.</para>
			</remarks><example>This example finds the first row where the employee salary is greater than 50,000:
         <code>RowNumber = dwStatus.FindRow("emp_salary &gt; 50000", 1, dwStatus.RowCount)</code>
			</example>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.FindGroupChange(System.Int32,System.Int16)">
            <summary>Searches for the next break (change in value) within the specified group. 
      </summary><returns>The row number beginning the next grouping within the level specified by <i>GroupLevel</i>, or 0 if no such row.
         </returns><param name="RowNumber">The row number at which you want to begin searching for the next group break.</param><param name="GroupLevel">The level of the group in which you are searching for the next break. </param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:System.ArgumentOutOfRangeException">
				<i>GroupLevel</i> is less than 0.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>If <i>RowNumber</i> begins a new grouping at <i>GroupLevel</i>, then that row is the one returned. 
         To continue searching for subsequent breaks, increment the starting row so that the search resumes with 
         the next row in the group. 
      </remarks><example>This statement searches for the first break in group 2 within <c>dwRegions</c> that occurs at or after row 5:
         <code>RowNumOfNextBreak = dwRegions.FindGroupChange(5, 2)</code>
			</example>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.FindNextModifiedRow(System.Int32,Sybase.DataWindow.DataBuffer)">
            <summary>Reports the next row that has been modified in the specified buffer. 
      </summary><returns>The number of the first modified row in <i>Buffer</i> after <i>RowNumber</i>, or 0 if there is no such row.</returns><param name="RowNumber">The number of the row after which to begin the search. Use a value of 0 to search from the beginning.</param><param name="Buffer">The DataWindow buffer in which to search.</param><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>
					<b>FindNextModifiedRow</b> reports rows with a <see cref="T:Sybase.DataWindow.RowStatus"/> of 
         NewAndModified and Modified.</para>
				<para>The search begins in the row after the value you specify in <i>RowNumber</i>. 
         This is different from the behavior of <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.FindRow(System.String,System.Int32,System.Int32)"/>, <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.FindGroupChange(System.Int32,System.Int16)"/>, and <see cref="M:Sybase.DataWindow.DataWindowControl.FindNextRequiredColumn(System.Int32@,System.Int16@,Sybase.DataWindow.DataBuffer,System.Boolean)"/>, which begin searching in the row you specify.</para>
			</remarks><example>These C# statements count the number or rows that were modified in the Primary buffer of <c>dwStatus</c>
         and then display a message reporting the number modified (thus reporting the same value as the <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ModifiedCount"/> property):
         <code>
         int NbrRows, rowNum, count;
         
         dwStatus.AcceptText();
         NbrRows = dwStatus.RowCount;
         count = 0;
         rowNum = 0;
         do 
         {
            rowNum = dwStatus.FindNextModifiedRow(rowNum, Sybase.DataWindow.DataBuffer.Primary);
         
            if (rowNum &gt; 0) 
              count = count + 1;
            else
              rowNum = NbrRows;
         }
         while (rowNum &lt; NbrRows);
         
         MessageBox.Show(count.ToString() + " rows were modified.", "Modified Count");	
         </code>
			</example><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetRowStatus(System.Int32,Sybase.DataWindow.DataBuffer)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.FindRow(System.String,System.Int32,System.Int32)"/><seealso cref="M:Sybase.DataWindow.DataWindowControl.FindNextRequiredColumn(System.Int32@,System.Int16@,Sybase.DataWindow.DataBuffer,System.Boolean)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.FindNextRequiredColumn(System.Int32@,System.Int16@,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <summary>Reports the next row and column that is both required and currently contains a null value. 
      </summary><param name="RowNumber">The first row to be searched. Upon return <i>RowNumber</i> also 
         stores the number of the found row.</param><param name="ColumnNumber">The number of the first column to be searched. Upon return <i>ColumnNumber</i>
         also stores the number of the found column.</param><param name="Buffer">The DataWindow buffer you want to search 
         for required columns. Valid buffers are Primary and Filter.</param><param name="UpdateOnly">A boolean value specifying whether all rows and columns should be searched or only
         rows that have been modified.</param><exception cref="T:System.ArgumentOutOfRangeException">
				<i>Buffer</i> specified the Delete buffer.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>For <b>FindNextRequiredColumn</b> to report an empty required column, the column's value must actually be null, 
         not an empty string. To make a column required, set the <c>Edit.Required</c> property for the DataWindow object to <c>true</c> in 
         code or check the Required check box for the column in the Edit page in the Properties view in DataWindow Designer.</para>
				<para>Additionally, when the user modifies a row and leaves a column empty, the new value is an empty string, unless the 
         column's edit style has the Empty String Is Null check box checked; therefore, <b>FindNextRequiredColumn</b> does not report empty required 
         columns in modified rows unless this property is set.</para>
				<para>New rows have null values in their columns, unless the columns have default values. If <i>UpdateOnly</i> is <c>false</c>, 
         <b>FindNextRequiredColumn</b> reports null required columns in new rows. If <i>UpdateOnly</i> is <c>true</c>, null columns in new rows are 
         reported only if one or more of the columns within that row contains data.</para>
			</remarks>        		
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetChanges">
            <summary>Retrieves changes made to a DataWindowControl or DataStore in a format suitable for serialization in .NET remoting applications. 
      </summary><returns>A serializable object containing the changes.</returns><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>
					<b>GetChanges</b> is used in conjunction with <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetChanges(Sybase.DataWindow.DataWindowChanges)"/> to synchronize multiple DataWindowControls or 
         DataStores. <b>GetChanges</b> retrieves the data buffers and status flags for modified rows, and <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetChanges(Sybase.DataWindow.DataWindowChanges)"/>
         applies the changes to another DataWindowControl or DataStore.</para>
				<!-- Need good remoting example here -->
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetChanges(Sybase.DataWindow.DataWindowChanges)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetFullState"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl._GetChanges(Sybase.DataWindow.DataWindowChanges@,System.Int32@)">
            <summary>
            This method is designed for DataWindow .NET internal usage only and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetColumnNumber">
            <summary>Obtains the number of the current column.</summary><returns>Returns the number of the current column, or 0 if no column is current.</returns><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><remarks>A column becomes the current column after the user tabs to it or clicks it or if 
         the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetColumn(System.Int16)"/> method is called on the column. A column cannot be current if it cannot be edited (if it 
         has a <see cref="P:Sybase.DataWindow.GraphicObjectEditableColumn.TabOrder"/> value of 0). A DataWindowControl always has a current column, 
         even when the control is not active, as long as there is at least one editable column. 
      </remarks><example>This statement returns the number of the current column in <c>dwEmp</c>:
         <code>currentColNum = dwEmp.GetColumn()</code>
			</example><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetColumnName"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetColumnName">
            <summary>Obtains the name of the current column.</summary><returns>Returns the name of the current column, or the empty string ("") if no 
         column is current.</returns><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><remarks>A column becomes the current column after the user tabs to it or clicks it or if 
         the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetColumn(System.Int16)"/> method is called on the column. A column cannot be current if it cannot be edited (if it 
         has a <see cref="P:Sybase.DataWindow.GraphicObjectEditableColumn.TabOrder"/> value of 0). A DataWindowControl always has a current column, 
         even when the control is not active, as long as there is at least one editable column. 
      </remarks><example>This statement returns the name of the current column in <c>dwEmp</c>:
         <code>currentColName = dwEmp.GetColumnName()</code>
			</example><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetColumnNumber"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetColumnObjectByNumber(System.Int16)">
            <summary>Returns a column within the DataWindow.</summary><returns>An instance of the <see cref="T:Sybase.DataWindow.GraphicObjectColumn"/> class representing the column.</returns><param name="ColumnNumber">The number of the column to be returned.</param><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is not valid.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>
					<see cref="T:Sybase.DataWindow.GraphicObjectColumn"/> is an abstract class, and the actual value returned will be:</para>
				<list type="bullet">
					<item>
						<see cref="T:Sybase.DataWindow.GraphicObjectBlobColumn"/> for an OLE-Blob column,</item>
					<item>
						<see cref="T:Sybase.DataWindow.GraphicObjectComputedColumn"/> for a computed column, or</item>
					<item>
						<see cref="T:Sybase.DataWindow.GraphicObjectEditableColumn"/> for a database column.</item>
				</list>
				<para>After narrowing the returned object to one of these classes, you can access some of the more common properties of the object such as format, border style, X and Y coordinates, and colors.
				Additionally, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Modify(System.String)"/> or <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetProperty(System.String,System.String)"/> methods to modify properties that are not exposed by the <see cref="T:Sybase.DataWindow.GraphicObject"/> classes.</para>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetObjectByName(System.String)"/> method to get any control on a DataWindow, including a column,
				 when you know the name of that control.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetObjectByName(System.String)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetColumnValidation(System.String)">
            <summary>Obtains the validation rule for a DataWindow column given the column name.
      </summary><returns>The validation rule for the column, or an empty string ("")
         if no validation rule is defined for the column.</returns><param name="ColumnName">The name of the column for which you want the validation rule.</param><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>You can use <b>GetColumnValidation</b> to save the current validation rule before calling <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetColumnValidation(System.Int16,System.String)"/> to change 
         the rule temporarily.
      </remarks><example>These statements save the validation rule for the <c>salary</c> column in the DataWindowControl <c>dwEmp</c> in 
         the string <c>Rule1</c> and set the new validation rule to the string <c>Rule2</c>:
         <code>
         Dim Rule1 as String
         Dim Rule2 as String
         ' ...
         Rule1 = dwEmp.GetColumnValidation("salary")
         dwEmp.SetColumnValidation("salary", Rule2)
         </code>
			</example><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetColumnValidation(System.Int16,System.String)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetColumnValidation(System.Int16)">
            <overloads>Obtains the validation rule for a DataWindow column.</overloads><summary>Obtains the validation rule for a DataWindow column given the column number.
      </summary><returns>The validation rule for the column, or an empty string ("")
         if no validation rule is defined for the column.</returns><param name="ColumnNumber">The column number for which you want the validation rule.</param><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>You can use <b>GetColumnValidation</b> to save the current validation rule before calling <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetColumnValidation(System.Int16,System.String)"/> to change 
         the rule temporarily.
      </remarks><example>These statements save the validation rule for column 7 in the DataWindowControl <c>dwEmp</c> in 
         the string <c>Rule1</c> and set the new validation rule to the string <c>Rule2</c>:
         <code>
         Dim Rule1 as String
         Dim Rule2 as String
         ' ...
         Rule1 = dwEmp.GetColumnValidation(7)
         dwEmp.SetColumnValidation(7, Rule2)
         </code>
			</example><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetColumnValidation(System.Int16,System.String)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetChild(System.String)">
            <summary>Provides a reference to a DropDownDataWindow or to a report in a composite DataWindow. 
      </summary><returns>A DataWindowChild object.</returns><param name="ChildName">The name of a column with a DropDownDataWindow edit style or of a report in a composite DataWindow.</param><exception cref="T:Sybase.DataWindow.ChildNotFoundException">
				<i>ChildName</i> is not a DropDownDataWindow column or a report.</exception><exception cref="T:System.ArgumentNullException">
				<i>ChildName</i> is null.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>A report is a read-only DataWindow 
         that is part of a composite DataWindow object. When you define a composite 
         DataWindow in DataWindow Designer, each report is given a name. You can see the name in the Name 
         option of the Properties view. You must use the report name (not the name of the DataWindow object 
         in which the report has been placed) when calling <b>GetChild</b>.</para>
				<para>Use <b>GetChild</b> when you need to explicitly retrieve data for a DropDownDataWindow or a report. Although 
         the DataWindow server automatically retrieves data for the DropDownDataWindow or report when the main DataWindow 
         is displayed, you need to explicitly retrieve data when there are retrieval arguments or when 
         conditions change and you want to retrieve new rows.</para>
				<para>You cannot use <b>GetChild</b> to get a reference to a report in a composite DataWindow when the report 
         itself is a composite or nested DataWindow.</para>
				<para>Changing certain property values using the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Modify(System.String)"/> or <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetProperty(System.String,System.String)"/> methods can cause the 
				reference returned by <b>GetChild</b> to 
         become invalid. Best practices dictate calling <b>GetChild</b> again after such changes.</para>
			</remarks><example>In a composite DataWindow there are two reports: orders and current inventory. The orders report 
         has a retrieval argument for selecting the order status. This report will display open orders. The composite 
         DataWindow is displayed in a DataWindow control called <c>dwNews</c>, and the reports are named <c>orders</c> and 
         <c>current_inv</c>. The following code in the Load event of the form that contains <c>dwNews</c> provides a retrieval 
         argument for <c>orders</c>.<code>
         Dim dwcOrders as Sybase.DataWindow.DataWindowChild
         Try
            dwcOrders = dwNews.GetChild("orders")
            dwcOrders.SetTransaction(myTrans)
            dwcOrders.Retrieve("open")
         Catch NoSuchChild As Sybase.DataWindow.ChildNotFoundException
            ' handle condition where order is not a valid child DataWindow
         Catch DbException As Sybase.DataWindow.DbErrorException
            ' handle database retrieval error
         End Try
         </code>
			</example>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetFullState">
            <summary>Retrieves the contents of a DataWindowControl or DataStore in a format suitable for serialization in .NET remoting applications. 
       
      </summary><returns>A serializable object representing the contents and format of the DataWindow.</returns><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>
					<b>GetFullState</b> retrieves the entire state of a DataWindowControl or DataStore, including the DataWindow 
         object specification, the data buffers, and the status flags. When you call <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetFullState(Sybase.DataWindow.DataWindowFullState)"/> to apply the 
         DataWindowFullState object created by <b>GetFullState</b> to another DataWindowControl (or DataStore), the target DataWindowControl
         (or DataStore) has enough information to 
         recreate the source DataWindow.  If the target already has a DataWindow object assigned, it will be overwritten.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetFullState(Sybase.DataWindow.DataWindowFullState)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetChanges"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl._GetFullState(Sybase.DataWindow.DataWindowFullState@,System.Int32@)">
            <summary>
            This method is designed for DataWindow .NET internal usage only and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDate(System.Int32,System.Int16)">
            <overloads>Gets a Date value from a DataWindow column.</overloads><summary>Gets the current Date value from a DataWindow column within a row of the Primary buffer given the column number.</summary><returns>The Date value located at <i>RowNumber</i> and <i>ColumnNumber</i> as a System.DateTime.</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnNumber">The column number containing the value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The Date value is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not contain a Date value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>This version of the method returns the current data in the Primary buffer.  It is equivalent to:</para>
				<code>GetItemDate(RowNumber, ColumnNumber, Sybase.DataWindow.DataBuffer.Primary, false)</code>
				<para>
					<i>ColumnNumber</i> reflects the ordering of the DataWindow source columns as seen in the Column Specification pane in DataWindow Designer. 
				If the ordering of the source data
				of the DataWindow changes, the column numbers will also change.  Additionally, computed columns have
				no associated column number, so use the overloaded version of this method that accepts a column name instead.</para>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemDate</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the Date value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDate(System.Int32,System.Int16,System.DateTime)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDate(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <summary>Gets a Date value from a DataWindow column given the column number.</summary><returns>The original or current Date value located at <i>RowNumber</i> and <i>ColumnNumber</i> in <i>Buffer</i> as a System.DateTime.</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnNumber">The column number containing the value.</param><param name="Buffer">The DataWindow buffer from which you want to get the value.</param><param name="OriginalData">
				<c>false</c> to obtain the current value at <i>RowNumber</i> and <i>ColumnNumber</i>, <c>true</c> to obtain the value before any user modification.
			</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The Date value is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not contain a Date value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>
					<i>ColumnNumber</i> reflects the ordering of the DataWindow source columns as seen in the Column Specification pane in DataWindow Designer. 
				If the ordering of the source data
				of the DataWindow changes, the column numbers will also change.  Additionally, computed columns have
				no associated column number, so use the overloaded version of this method that accepts a column name instead.</para>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemDate</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the Date value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDate(System.Int32,System.Int16,System.DateTime)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDate(System.Int32,System.String)">
            <summary>Gets the current Date value from a DataWindow column within a row of the Primary buffer given the column name.</summary><returns>The Date value located at <i>RowNumber</i> and <i>ColumnName</i> as a System.DateTime.</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnName">The name of the column containing the value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The Date value is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not contain a Date value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>This version of the method returns the current data in the Primary buffer.  It is equivalent to:</para>
				<code>GetItemDate(RowNumber, ColumnName, Sybase.DataWindow.DataBuffer.Primary, false)</code>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemDate</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the Date value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDate(System.Int32,System.Int16,System.DateTime)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDate(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <summary>Gets a Date value from a DataWindow column given the column name.</summary><returns>The original or current Date value located at <i>RowNumber</i> and <i>ColumnName</i> in <i>Buffer</i> as a System.DateTime.</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnName">The name of the column containing the value.</param><param name="Buffer">The DataWindow buffer from which you want to get the value.</param><param name="OriginalData">
				<c>false</c> to obtain the current value at <i>RowNumber</i> and <i>ColumnName</i>, <c>true</c> to obtain the value before any user modification.
			</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The Date value is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not contain a Date value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemDate</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the Date value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDate(System.Int32,System.Int16,System.DateTime)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.Int16)">
            <overloads>Gets a DateTime value from a DataWindow column.</overloads><summary>Gets the current DateTime value from a DataWindow column within a row of the Primary buffer given the column number. 
      </summary><returns>The DateTime located at <i>RowNumber</i> and <i>ColumnNumber</i> as a System.DateTime.
				<note>The DataWindow DateTime datatype stores fractional seconds to microsecond precision; the .NET System.DateTime datatype stores only to millisecond precision. As a result, <b>GetItemDateTime</b> may result in a loss of data precision.</note>
			</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnNumber">The column number containing the value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The DateTime value is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not contain a DateTime value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>This version of the method returns the current data in the Primary buffer.  It is equivalent to:</para>
				<code>GetItemDateTime(RowNumber, ColumnNumber, Sybase.DataWindow.DataBuffer.Primary, false)</code>
				<para>
					<i>ColumnNumber</i> reflects the ordering of the DataWindow source columns as seen in the Column Specification pane in DataWindow Designer. 
				If the ordering of the source data
				of the DataWindow changes, the column numbers will also change.  Additionally, computed columns have
				no associated column number, so use the overloaded version of this method that accepts a column name instead.</para>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemDateTime</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the DateTime value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDate(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemTime(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDateTime(System.Int32,System.Int16,System.DateTime)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <summary>Gets a DateTime value from a DataWindow column given the column number.
      </summary><returns>The DateTime located at <i>RowNumber</i> and <i>ColumnNumber</i> as a System.DateTime.
				<note>The DataWindow DateTime datatype stores fractional seconds to microsecond precision; the .NET System.DateTime datatype stores only to millisecond precision. As a result, <b>GetItemDateTime</b> may result in a loss of data precision.</note>
			</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnNumber">The column number containing the value.</param><param name="Buffer">The DataWindow buffer from which you want to get the value.</param><param name="OriginalData">
				<c>false</c> to obtain the current value at <i>RowNumber</i> and <i>ColumnNumber</i>, <c>true</c> to obtain the value before any user modification.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The DateTime value is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not contain a DateTime value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>
					<i>ColumnNumber</i> reflects the ordering of the DataWindow source columns as seen in the Column Specification pane in DataWindow Designer. 
				If the ordering of the source data
				of the DataWindow changes, the column numbers will also change.  Additionally, computed columns have
				no associated column number, so use the overloaded version of this method that accepts a column name instead.</para>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemDateTime</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the DateTime value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDate(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemTime(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDateTime(System.Int32,System.Int16,System.DateTime)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.String)">
            <summary>Gets the current DateTime value from a DataWindow column within a row of the Primary buffer given the column name.
      </summary><returns>The DateTime located at <i>RowNumber</i> and <i>ColumnName</i> as a System.DateTime.
				<note>The DataWindow DateTime datatype stores fractional seconds to microsecond precision; the .NET System.DateTime datatype stores only to millisecond precision. As a result, <b>GetItemDateTime</b> may result in a loss of data precision.</note>
			</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnName">The name of the column containing the value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The DateTime value is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not contain a DateTime value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>This version of the method returns the current data in the Primary buffer.  It is equivalent to:</para>
				<code>GetItemDateTime(RowNumber, ColumnName, Sybase.DataWindow.DataBuffer.Primary, false)</code>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemDateTime</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the DateTeime value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDate(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemTime(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDateTime(System.Int32,System.Int16,System.DateTime)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <summary>Gets a DateTime value from a DataWindow column given the column name.</summary><returns>The DateTime located at <i>RowNumber</i> and <i>ColumnName</i> as a System.DateTime.
				<note>The DataWindow DateTime datatype stores fractional seconds to microsecond precision; the .NET System.DateTime datatype stores only to millisecond precision. As a result, <b>GetItemDateTime</b> may result in a loss of data precision.</note>
			</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnName">The name of the column containing the value.</param><param name="Buffer">The DataWindow buffer from which you want to get the value.</param><param name="OriginalData">
				<c>false</c> to obtain the current value at <i>RowNumber</i> and <i>ColumnName</i>, <c>true</c> to obtain the value before any user modification.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The DateTime value is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not contain a DateTime value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemDateTime</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the DateTime value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDate(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemTime(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDateTime(System.Int32,System.Int16,System.DateTime)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <overloads>Gets a Date, Time, or DateTime value from a DataWindow column.</overloads><summary>Gets a Date, Time, or DateTime value from a DataWindow column given the column number.</summary><returns>The Date, Time, or DateTime value located at <i>RowNumber</i> and <i>ColumnNumber</i> in <i>Buffer</i> as a System.Data.SqlTypes.SqlDateTime. 				<note>The DataWindow DateTime datatype stores fractional seconds to microsecond precision; the .NET System.Data.SqlTypes.DateTime datatype stores only to millisecond precision. As a result, <b>GetItemSqlDateTime</b> may result in a loss of data precision.</note>
			</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnNumber">The column number containing the value.</param><param name="Buffer">The DataWindow buffer from which you want to get the value.</param><param name="OriginalData">
				<c>false</c>	to obtain the current value at <i>RowNumber</i> and <i>ColumnNumber</i>, <c>true</c> to obtain the value before any user modification.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not contain a Date, Time, or DateTime value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>When the DataWindow column has a Date type, the resulting SqlDateTime variable will contain 00:00:00 as its time element.  When the DataWindow column has a Time type, the resulting SqlDateTime variable will contain the current date as its date element.</para>
				<para>In contrast to <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.Int16)"/>, <b>GetItemSqlDateTime</b> supports the return of null values from DataWindow columns. Whether the returned value is null can be determined by examining the <see cref="P:System.Data.SqlTypes.SqlDateTime.IsNull"/> property of the returned SqlDateTime structure.</para>
				<para>
					<i>ColumnNumber</i> reflects the ordering of the DataWindow source columns as seen in the Column Specification pane in DataWindow Designer. 
				If the ordering of the source data
				of the DataWindow changes, the column numbers will also change.  Additionally, computed columns have
				no associated column number, so use the overloaded version of this method that accepts a column name instead.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDate(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemTime(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDateTime(System.Int32,System.Int16,System.Data.SqlTypes.SqlDateTime)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <overloads/><summary>Gets a Date, Time, or DateTime value from a DataWindow column given the column name.</summary><returns>The Date, Time, or DateTime value located at <i>RowNumber</i> and <i>ColumnName</i> in <i>Buffer</i> as a System.Data.SqlTypes.SqlDateTime. 				<note>The DataWindow DateTime datatype stores fractional seconds to microsecond precision; the .NET System.Data.SqlTypes.SqlDateTime datatype stores only to millisecond precision. As a result, <b>GetItemSqlDateTime</b> may result in a loss of data precision.</note>
			</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnName">The name of the column containing the value.</param><param name="Buffer">The DataWindow buffer from which you want to get the value.</param><param name="OriginalData">
				<c>false</c>	to obtain the current value at <i>RowNumber</i> and <i>ColumnName</i>, <c>true</c> to obtain the value before any user modification.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not contain a Date, Time, or DateTime value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>When the DataWindow column has a Date type, the resulting SqlDateTime variable will contain 00:00:00 as its time element.  When the DataWindow column has a Time type, the resulting SqlDateTime variable will contain the current date as its date element.</para>
				<para>In contrast to <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.Int16)"/>, <b>GetItemSqlDateTime</b> supports the return of null values from DataWindow columns. Whether the returned value is null can be determined by examining the <see cref="P:System.Data.SqlTypes.SqlDateTime.IsNull"/> property of the returned SqlDateTime structure.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDate(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemTime(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDateTime(System.Int32,System.Int16,System.Data.SqlTypes.SqlDateTime)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDecimal(System.Int32,System.Int16)">
            <overloads>Gets a Decimal value from a DataWindow column.</overloads><summary>Gets the current Decimal value from a DataWindow column within a row of the Primary buffer given the column number.       </summary><returns>The Decimal value located at <i>RowNumber</i> and <i>ColumnNumber</i> as a System.Decimal.</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnNumber">The column number containing the value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The Decimal value is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not contain a Decimal value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>This version of the method returns the current data in the Primary buffer.  It is equivalent to:</para>
				<code>GetItemDecimal(RowNumber, ColumnNumber, Sybase.DataWindow.DataBuffer.Primary, false)</code>
				<para>
					<i>ColumnNumber</i> reflects the ordering of the DataWindow source columns as seen in the Column Specification pane in DataWindow Designer. 
				If the ordering of the source data
				of the DataWindow changes, the column numbers will also change.  Additionally, computed columns have
				no associated column number, so use the overloaded version of this method that accepts a column name instead.</para>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemDecimal</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDecimal(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the Decimal value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDecimal(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDecimal(System.Int32,System.Int16,System.Decimal)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDecimal(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <summary>Gets a Decimal value from a DataWindow column given the column number.      </summary><returns>The original or current Decimal value located at <i>RowNumber</i> and <i>ColumnNumber</i> in <i>Buffer</i> as a System.Decimal.</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnNumber">The column number containing the value.</param><param name="Buffer">The DataWindow buffer from which you want to get the value.</param><param name="OriginalData">
				<c>false</c> to obtain the current value at <i>RowNumber</i> and <i>ColumnNumber</i>, <c>true</c> to obtain the value before any user modification.
			</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The Decimal value is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not contain a Decimal value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>
					<i>ColumnNumber</i> reflects the ordering of the DataWindow source columns as seen in the Column Specification pane in DataWindow Designer. 
				If the ordering of the source data
				of the DataWindow changes, the column numbers will also change.  Additionally, computed columns have
				no associated column number, so use the overloaded version of this method that accepts a column name instead.</para>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemDecimal</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDecimal(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the Decimal value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDecimal(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDecimal(System.Int32,System.Int16,System.Decimal)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDecimal(System.Int32,System.String)">
            <summary>Gets the current Decimal value from a DataWindow column within a row of the Primary buffer given the column name.      </summary><returns>The Decimal value located at <i>RowNumber</i> and <i>ColumnName</i> as a System.Decimal.</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnName">The name of the column containing the value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The Decimal value is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not contain a Decimal value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>This version of the method returns the current data in the Primary buffer.  It is equivalent to:</para>
				<code>GetItemDecimal(RowNumber, ColumnName, Sybase.DataWindow.DataBuffer.Primary, false)</code>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemDecimal</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDecimal(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the Decimal value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDecimal(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDecimal(System.Int32,System.Int16,System.Decimal)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDecimal(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <summary>Gets a Decimal value from a DataWindow column given the column name.      </summary><returns>The original or current Decimal value located at <i>RowNumber</i> and <i>ColumnName</i> in <i>Buffer</i> as a System.Decimal.</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnName">The name of the column containing the value.</param><param name="Buffer">The DataWindow buffer from which you want to get the value.</param><param name="OriginalData">
				<c>false</c> to obtain the current value at <i>RowNumber</i> and <i>ColumnName</i>, <c>true</c> to obtain the value before any user modification.
			</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The Decimal value is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not contain a Decimal value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemDecimal</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDecimal(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the Decimal value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDecimal(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDecimal(System.Int32,System.Int16,System.Decimal)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDecimal(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <overloads/><summary>Gets a Decimal value from a DataWindow column given the column name.</summary><returns>The Decimal value located at <i>RowNumber</i> and <i>ColumnName</i> in <i>Buffer</i> as a System.Data.SqlTypes.SqlDecimal.		</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnName">The name of the column containing the value.</param><param name="Buffer">The DataWindow buffer from which you want to get the value.</param><param name="OriginalData">
				<c>false</c>	to obtain the current value at <i>RowNumber</i> and <i>ColumnName</i>, <c>true</c> to obtain the value before any user modification.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not contain a Decimal value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>In contrast to <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDecimal(System.Int32,System.Int16)"/>, <b>GetItemSqlDecimal</b> supports the return of null values from DataWindow columns. Whether the returned value is null can be determined by examining the <see cref="P:System.Data.SqlTypes.SqlDecimal.IsNull"/> property of the returned SqlDecimal structure.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDecimal(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDecimal(System.Int32,System.Int16,System.Data.SqlTypes.SqlDecimal)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDecimal(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <overloads>Gets a Decimal value from a DataWindow column.</overloads><summary>Gets a Decimal value from a DataWindow column given the column number.</summary><returns>The Decimal value located at <i>RowNumber</i> and <i>ColumnNumber</i> in <i>Buffer</i> as a System.Data.SqlTypes.SqlDecimal.			</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnNumber">The column number containing the value.</param><param name="Buffer">The DataWindow buffer from which you want to get the value.</param><param name="OriginalData">
				<c>false</c>	to obtain the current value at <i>RowNumber</i> and <i>ColumnNumber</i>, <c>true</c> to obtain the value before any user modification.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not contain a Decimal value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>In contrast to <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDecimal(System.Int32,System.Int16)"/>, <b>GetItemSqlDecimal</b> supports the return of null values from DataWindow columns. Whether the returned value is null can be determined by examining the <see cref="P:System.Data.SqlTypes.SqlDecimal.IsNull"/> property of the returned SqlDecimal structure.</para>
				<para>
					<i>ColumnNumber</i> reflects the ordering of the DataWindow source columns as seen in the Column Specification pane in DataWindow Designer. 
				If the ordering of the source data
				of the DataWindow changes, the column numbers will also change.  Additionally, computed columns have
				no associated column number, so use the overloaded version of this method that accepts a column name instead.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDecimal(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDecimal(System.Int32,System.Int16,System.Data.SqlTypes.SqlDecimal)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDouble(System.Int32,System.Int16)">
            <overloads>Gets an integer or floating point value from a DataWindow column.</overloads><summary>Gets the current integer or floating point value from a DataWindow column within a row of the Primary buffer given the column number. </summary><returns>The value located at <i>RowNumber</i> and <i>ColumnNumber</i> as a System.Double.</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnNumber">The column number containing the value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The value is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not contain an integer or floating point value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>This version of the method returns the current data in the Primary buffer.  It is equivalent to:</para>
				<code>GetItemDouble(RowNumber, ColumnNumber, Sybase.DataWindow.DataBuffer.Primary, false)</code>
				<para>
					<i>ColumnNumber</i> reflects the ordering of the DataWindow source columns as seen in the Column Specification pane in DataWindow Designer. 
				If the ordering of the source data
				of the DataWindow changes, the column numbers will also change.  Additionally, computed columns have
				no associated column number, so use the overloaded version of this method that accepts a column name instead.</para>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemDouble</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDouble(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDouble(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDouble(System.Int32,System.Int16,System.Double)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDouble(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <summary>Gets an integer or floating point value from a DataWindow column given the column number.      </summary><returns>The original or current value located at <i>RowNumber</i> and <i>ColumnNumber</i> in <i>Buffer</i> as a System.Double.</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnNumber">The column number containing the value.</param><param name="Buffer">The DataWindow buffer from which you want to get the value.</param><param name="OriginalData">
				<c>false</c> to obtain the current value at <i>RowNumber</i> and <i>ColumnNumber</i>, <c>true</c> to obtain the value before any user modification.
			</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The value is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not contain an integer or floating point value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>
					<i>ColumnNumber</i> reflects the ordering of the DataWindow source columns as seen in the Column Specification pane in DataWindow Designer. 
				If the ordering of the source data
				of the DataWindow changes, the column numbers will also change.  Additionally, computed columns have
				no associated column number, so use the overloaded version of this method that accepts a column name instead.</para>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemDouble</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDouble(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDouble(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDouble(System.Int32,System.Int16,System.Double)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDouble(System.Int32,System.String)">
            <summary>Gets the current integer or floating point value from a DataWindow column within a row of the Primary buffer given the column name.      </summary><returns>The value located at <i>RowNumber</i> and <i>ColumnName</i> as a System.Double.</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnName">The name of the column containing the value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The value is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not contain an integer or floating point value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>This version of the method returns the current data in the Primary buffer.  It is equivalent to:</para>
				<code>GetItemDouble(RowNumber, ColumnName, Sybase.DataWindow.DataBuffer.Primary, false)</code>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemDouble</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDouble(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDouble(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDouble(System.Int32,System.Int16,System.Double)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDouble(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <summary>Gets an integer or floating point value from a DataWindow column given the column name.      </summary><returns>The original or current value located at <i>RowNumber</i> and <i>ColumnName</i> in <i>Buffer</i> as a System.Double.</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnName">The name of the column containing the value.</param><param name="Buffer">The DataWindow buffer from which you want to get the value.</param><param name="OriginalData">
				<c>false</c> to obtain the current value at <i>RowNumber</i> and <i>ColumnName</i>, <c>true</c> to obtain the value before any user modification.
			</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The value is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not contain an integer or floating point value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemDouble</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDouble(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDouble(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDouble(System.Int32,System.Int16,System.Double)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDouble(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <summary>Gets an integer or floating point value from a DataWindow column given the column name.</summary><returns>The value located at <i>RowNumber</i> and <i>ColumnName</i> in <i>Buffer</i> as a System.Data.SqlTypes.SqlDouble.		</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnName">The name of the column containing the value.</param><param name="Buffer">The DataWindow buffer from which you want to get the value.</param><param name="OriginalData">
				<c>false</c>	to obtain the current value at <i>RowNumber</i> and <i>ColumnName</i>, <c>true</c> to obtain the value before any user modification.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not contain an integer or floating point value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>In contrast to <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDouble(System.Int32,System.Int16)"/>, <b>GetItemSqlDouble</b> supports the return of null values from DataWindow columns. Whether the returned value is null can be determined by examining the <see cref="P:System.Data.SqlTypes.SqlDouble.IsNull"/> property of the returned SqlDouble structure.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDouble(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDouble(System.Int32,System.String,System.Data.SqlTypes.SqlDouble)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDouble(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <overloads>Gets an integer or floating point value from a DataWindow column.</overloads><summary>Gets an integer or floating point value from a DataWindow column given the column number.
      </summary><returns>The value located at <i>RowNumber</i> and <i>ColumnNumber</i> in <i>Buffer</i> as a System.Data.SqlTypes.SqlDouble.			</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnNumber">The column number containing the value.</param><param name="Buffer">The DataWindow buffer from which you want to get the value.</param><param name="OriginalData">
				<c>false</c>	to obtain the current value at <i>RowNumber</i> and <i>ColumnNumber</i>, <c>true</c> to obtain the value before any user modification.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not contain an integer or floating point value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>In contrast to <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDouble(System.Int32,System.Int16)"/>, <b>GetItemSqlDouble</b> supports the return of null values from DataWindow columns. Whether the returned value is null can be determined by examining the <see cref="P:System.Data.SqlTypes.SqlDouble.IsNull"/> property of the returned SqlDouble structure.</para>
				<para>
					<i>ColumnNumber</i> reflects the ordering of the DataWindow source columns as seen in the Column Specification pane in DataWindow Designer. 
				If the ordering of the source data
				of the DataWindow changes, the column numbers will also change.  Additionally, computed columns have
				no associated column number, so use the overloaded version of this method that accepts a column name instead.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDouble(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDouble(System.Int32,System.String,System.Data.SqlTypes.SqlDouble)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemStatus(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer)">
            <overloads>Reports the modification status of a DataWindow column in a specific row.</overloads><summary>Reports the modification status of a DataWindow column in a specific row, given the column number.</summary><returns>The <see cref="T:Sybase.DataWindow.ItemStatus"/>.</returns><param name="RowNumber">The row number containing the column of interest.</param><param name="ColumnNumber">The column number for which you want the modification status.</param><param name="Buffer">The DataWindow buffer containing the row and column for which you want to get the status.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>Use <b>GetItemStatus</b> to understand what SQL statements will be generated for new and changed information when you update 
         the database. <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData"/> generates a SQL UPDATE statement for rows that have columns with an ItemStatus of Modified. The columns themselves
         are included in the SET clause of the UPDATE statement.
 </remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetRowStatus(System.Int32,Sybase.DataWindow.DataBuffer)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemStatus(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,Sybase.DataWindow.ItemStatus)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemStatus(System.Int32,System.String,Sybase.DataWindow.DataBuffer)">
            <summary>Reports the modification status of a DataWindow column in a specific row, given the column name.</summary><returns>The <see cref="T:Sybase.DataWindow.ItemStatus"/>.</returns><param name="RowNumber">The row number containing the column of interest.</param><param name="ColumnName">The name of the column for which you want the modification status.</param><param name="Buffer">The DataWindow buffer containing the row and column for which you want to get the status.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>Use <b>GetItemStatus</b> to understand what SQL statements will be generated for new and changed information when you update 
         the database. <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData"/> generates a SQL UPDATE statement for rows that have columns with an ItemStatus of Modified. The columns themselves
         are included in the SET clause of the UPDATE statement.
         </remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetRowStatus(System.Int32,Sybase.DataWindow.DataBuffer)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemStatus(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,Sybase.DataWindow.ItemStatus)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemString(System.Int32,System.Int16)">
            <overloads>Gets a String value from a DataWindow column.</overloads><summary>Gets the current String value from a DataWindow column within a row of the Primary buffer given the column number. </summary><returns>The value located at <i>RowNumber</i> and <i>ColumnNumber</i> as a System.String.</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnNumber">The column number containing the value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The String value is null.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>This version of the method returns the current data in the Primary buffer.  It is equivalent to:</para>
				<code>GetItemString(RowNumber, ColumnNumber, Sybase.DataWindow.DataBuffer.Primary, false)</code>
				<para>You can use <b>GetItemString</b> for columns of any datatype. If the column type is not a string, the return value is a string representation of the data with the column format applied.  If <i>ColumnNumber</i>'s datatype is string, any assigned format string is not applied and the raw data is returned.</para>
				<para>
					<i>ColumnNumber</i> reflects the ordering of the DataWindow source columns as seen in the Column Specification pane in DataWindow Designer. 
				If the ordering of the source data
				of the DataWindow changes, the column numbers will also change.  Additionally, computed columns have
				no associated column number, so use the overloaded version of this method that accepts a column name instead.</para>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemString</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlString(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlString(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemString(System.Int32,System.Int16,System.String)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemString(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <summary>Gets a String value from a DataWindow column given the column number.      </summary><returns>The original or current value located at <i>RowNumber</i> and <i>ColumnNumber</i> in <i>Buffer</i> as a System.String.</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnNumber">The column number containing the value.</param><param name="Buffer">The DataWindow buffer from which you want to get the value.</param><param name="OriginalData">
				<c>false</c> to obtain the current value at <i>RowNumber</i> and <i>ColumnNumber</i>, <c>true</c> to obtain the value before any user modification.
			</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The String value is null.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>You can use <b>GetItemString</b> for columns of any datatype. If the column type is not a string, the return value is a string representation of the data with the column format applied.  If <i>ColumnNumber</i>'s datatype is string, any assigned format string is not applied and the raw data is returned.</para>
				<para>
					<i>ColumnNumber</i> reflects the ordering of the DataWindow source columns as seen in the Column Specification pane in DataWindow Designer. 
				If the ordering of the source data
				of the DataWindow changes, the column numbers will also change.  Additionally, computed columns have
				no associated column number, so use the overloaded version of this method that accepts a column name instead.</para>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemString</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlString(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the Double value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlString(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemString(System.Int32,System.Int16,System.String)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemString(System.Int32,System.String)">
            <summary>Gets the current String value from a DataWindow column within a row of the Primary buffer given the column name.     
      </summary><returns>The value located at <i>RowNumber</i> and <i>ColumnName</i> as a System.String.</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnName">The name of the column containing the value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The String value is null.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>This version of the method returns the current data in the Primary buffer.  It is equivalent to:</para>
				<code>GetItemString(RowNumber, ColumnName, Sybase.DataWindow.DataBuffer.Primary, false)</code>
				<para>You can use <b>GetItemString</b> for columns of any datatype. If the column type is not a string, the return value is a string representation of the data with the column format applied.  If <i>ColumnName</i>'s type is a string, any assigned format string is not applied and the raw data is returned, unless <i>ColumnName</i> is a computed column, in which case the format is applied.</para>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemString</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlString(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlString(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemString(System.Int32,System.Int16,System.String)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemString(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <summary>Gets a String value from a DataWindow column given the column name.      </summary><returns>The original or current value located at <i>RowNumber</i> and <i>ColumnName</i> in <i>Buffer</i> as a System.String.</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnName">The name of the column containing the value.</param><param name="Buffer">The DataWindow buffer from which you want to get the value.</param><param name="OriginalData">
				<c>false</c> to obtain the current value at <i>RowNumber</i> and <i>ColumnName</i>, <c>true</c> to obtain the value before any user modification.
			</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The String value is null.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>You can use <b>GetItemString</b> for columns of any datatype. If the column type is not a string, the return value is a string representation of the data with the column format applied.  If <i>ColumnName</i>'s type is a string, any assigned format string is not applied and the raw data is returned, unless <i>ColumnName</i> is a computed column, in which case the format is applied.</para>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemString</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlString(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlString(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemString(System.Int32,System.Int16,System.String)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlString(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <summary>Gets a String value from a DataWindow column given the column name.</summary><returns>The String value located at <i>RowNumber</i> and <i>ColumnName</i> in <i>Buffer</i> as a System.Data.SqlTypes.SqlString.		</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnName">The name of the column containing the value.</param><param name="Buffer">The DataWindow buffer from which you want to get the value.</param><param name="OriginalData">
				<c>false</c>	to obtain the current value at <i>RowNumber</i> and <i>ColumnName</i>, <c>true</c> to obtain the value before any user modification.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>In contrast to <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemString(System.Int32,System.Int16)"/>, <b>GetItemSqlString</b> supports the return of null values from DataWindow columns. Whether the returned value is null can be determined by examining the <see cref="P:System.Data.SqlTypes.SqlString.IsNull"/> property of the returned SqlString structure.</para>
				<para>You can use <b>GetItemSqlString</b> for columns of any datatype. If the column type is not a string, the return value is a string representation of the data with the column format applied.  If <i>ColumnName</i>'s datatype is a string, any assigned format string is not applied and the raw data is returned, unless <i>ColumnName</i> is a computed column, in which case the format is applied.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemString(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlString(System.Int32,System.String,System.Data.SqlTypes.SqlString)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlString(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <overloads>Gets a String value from a DataWindow column.</overloads><summary>Gets a String value from a DataWindow column given the column number.
      </summary><returns>The String value located at <i>RowNumber</i> and <i>ColumnNumber</i> in <i>Buffer</i> as a System.Data.SqlTypes.SqlString.			</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnNumber">The column number containing the value.</param><param name="Buffer">The DataWindow buffer from which you want to get the value.</param><param name="OriginalData">
				<c>false</c>	to obtain the current value at <i>RowNumber</i> and <i>ColumnNumber</i>, <c>true</c> to obtain the value before any user modification.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>In contrast to <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemString(System.Int32,System.Int16)"/>, <b>GetItemSqlString</b> supports the return of null values from DataWindow columns. Whether the returned value is null can be determined by examining the <see cref="P:System.Data.SqlTypes.SqlString.IsNull"/> property of the returned SqlString structure.</para>
				<para>You can use <b>GetItemSqlString</b> for columns of any datatype. If the column type is not a string, the return value is a string representation of the data with the column format applied.  If <i>ColumnNumber</i>'s datatype is a string, any assigned format string is not applied and the raw data is returned.</para>
				<para>
					<i>ColumnNumber</i> reflects the ordering of the DataWindow source columns as seen in the Column Specification pane in DataWindow Designer. 
				If the ordering of the source data
				of the DataWindow changes, the column numbers will also change.  Additionally, computed columns have
				no associated column number, so use the overloaded version of this method that accepts a column name instead.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemString(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlString(System.Int32,System.String,System.Data.SqlTypes.SqlString)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemTime(System.Int32,System.Int16)">
            <overloads>Gets a Time value from a DataWindow column. </overloads><summary>Gets the current Time value from a DataWindow column within a row of the Primary buffer given the column number.
      </summary><returns>The Time value located at <i>RowNumber</i> and <i>ColumnNumber</i> as a System.DateTime.<note>The DataWindow Time datatype stores fractional seconds to microsecond precision; the .NET System.DateTime datatype stores only to millisecond precision. As a result, <b>GetItemTime</b> may result in a loss of data precision.</note>
			</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnNumber">The column number containing the value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The Time value is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not contain a Time value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>This version of the method returns the current data in the Primary buffer.  It is equivalent to:</para>
				<code>GetItemTime(RowNumber, ColumnNumber, Sybase.DataWindow.DataBuffer.Primary, false)</code>
				<para>
					<i>ColumnNumber</i> reflects the ordering of the DataWindow source columns as seen in the Column Specification pane in DataWindow Designer. 
				If the ordering of the source data
				of the DataWindow changes, the column numbers will also change.  Additionally, computed columns have
				no associated column number, so use the overloaded version of this method that accepts a column name instead.</para>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemTime</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the Time value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemTime(System.Int32,System.Int16,System.DateTime)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <summary>Gets a Time value from a DataWindow column given the column number.      </summary><returns>The original or current Time value located at <i>RowNumber</i> and <i>ColumnNumber</i> in <i>Buffer</i> as a System.DateTime.<note>The DataWindow Time datatype stores fractional seconds to microsecond precision; the .NET System.DateTime datatype stores only to millisecond precision. As a result, <b>GetItemTime</b> may result in a loss of data precision.</note>
			</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnNumber">The column number containing the value.</param><param name="Buffer">The DataWindow buffer from which you want to get the value.</param><param name="OriginalData">
				<c>false</c> to obtain the current value at <i>RowNumber</i> and <i>ColumnNumber</i>, <c>true</c> to obtain the value before any user modification.
			</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The Time value is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not contain a Time value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>
					<i>ColumnNumber</i> reflects the ordering of the DataWindow source columns as seen in the Column Specification pane in DataWindow Designer. 
				If the ordering of the source data
				of the DataWindow changes, the column numbers will also change.  Additionally, computed columns have
				no associated column number, so use the overloaded version of this method that accepts a column name instead.</para>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemTime</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the Time value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemTime(System.Int32,System.Int16,System.DateTime)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemTime(System.Int32,System.String)">
            <summary>Gets the current Time value from a DataWindow column within a row of the Primary buffer given the column name.   
      </summary><returns>The Time value located at <i>RowNumber</i> and <i>ColumnName</i> as a System.DateTime.<note>The DataWindow Time datatype stores fractional seconds to microsecond precision; the .NET System.DateTime datatype stores only to millisecond precision. As a result, <b>GetItemTime</b> may result in a loss of data precision.</note>
			</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnName">The name of the column containing the value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The Time value is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not contain a Time value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>This version of the method returns the current data in the Primary buffer.  It is equivalent to:</para>
				<code>GetItemTime(RowNumber, ColumnName, Sybase.DataWindow.DataBuffer.Primary, false)</code>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemTime</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the Time value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemTime(System.Int32,System.Int16,System.DateTime)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemTime(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <summary>Gets a Time value from a DataWindow column given the column name.  
      </summary><returns>The original or current Time value located at <i>RowNumber</i> and <i>ColumnName</i> in <i>Buffer</i> as a System.DateTime.<note>The DataWindow Time datatype stores fractional seconds to microsecond precision; the .NET System.DateTime datatype stores only to millisecond precision. As a result, <b>GetItemTime</b> may result in a loss of data precision.</note>
			</returns><param name="RowNumber">The row number containing the value.</param><param name="ColumnName">The name of the column containing the value.</param><param name="Buffer">The DataWindow buffer from which you want to get the value.</param><param name="OriginalData">
				<c>false</c> to obtain the current value at <i>RowNumber</i> and <i>ColumnName</i>, <c>true</c> to obtain the value before any user modification.
			</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.Data.SqlTypes.SqlNullValueException">The Time value is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not contain a Time value.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/> method to test for null values before executing <b>GetItemTime</b>; otherwise, you may 
				encounter a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>. Alternatively, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/> method, which
				can accommodate null values.</para>
				<para>In a DataWindowControl, to find out what the user entered in the current column 
				before that data is accepted into the Primary buffer, use <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>. 
				In the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> events, 
				use the Data property of the associated event argument class to determine the Time value of interest.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.Int16)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemTime(System.Int32,System.Int16,System.DateTime)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetObjectByName(System.String)">
            <summary>Returns a named control within the DataWindow object.</summary><returns>An instance of <see cref="T:Sybase.DataWindow.GraphicObject"/> representing the named control.</returns><param name="Name">The name of the control (e.g., column, button, text) within the DataWindow object.</param><exception cref="T:System.ArgumentNullException">
				<i>Name</i> is null.</exception><exception cref="T:System.ArgumentException">
				<i>Name</i> is not a valid control within the DataWindow object.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>In most cases, you will need to cast the return value to the specific <see cref="T:Sybase.DataWindow.GraphicObject"/> descendant, namely: </para>
				<list type="bullet">
					<item>
						<see cref="T:Sybase.DataWindow.GraphicObjectButton"/>
					</item>
					<item>
						<see cref="T:Sybase.DataWindow.GraphicObjectText"/>
					</item>
					<item>
						<see cref="T:Sybase.DataWindow.GraphicObjectPicture"/>
					</item>
					<item>
						<see cref="T:Sybase.DataWindow.GraphicObjectReport"/>
					</item>
					<item>
						<see cref="T:Sybase.DataWindow.GraphicObjectBlobColumn"/>
					</item>
					<item>
						<see cref="T:Sybase.DataWindow.GraphicObjectComputedColumn"/>
					</item>
					<item>
						<see cref="T:Sybase.DataWindow.GraphicObjectEditableColumn"/>
					</item>
				</list>
				<para>After narrowing the reference, you can directly modify some of the more common properties of the object
         such as format, border style, X and Y coordinates, and colors.  You can modify other properties not exposed in a <see cref="T:Sybase.DataWindow.GraphicObject"/> class using the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Modify(System.String)"/> or <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetProperty(System.String,System.String)"/> methods.</para>
				<para>To obtain a column object by the number of
         the column, use <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetColumnObjectByNumber(System.Int16)"/>.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetColumnObjectByNumber(System.Int16)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetProperty(System.String)">
            <summary>Returns a property value for a control within a DataWindow object.</summary><returns>The property value as a string.</returns><param name="Syntax">The DataWindow object property.</param><exception cref="T:System.ArgumentNullException">
				<i>Syntax</i> is null.</exception><exception cref="T:System.ArgumentException">
				<i>Syntax</i> is not a valid property.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><remarks>
				<para>This method can be used in lieu of <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Describe(System.String)"/> whenever a single property value is desired. It can also be used to obtain property values not exposed by the <see cref="T:Sybase.DataWindow.GraphicObject"/> classes.</para>
				<para>See the <i>DataWindow .NET Programmer's Guide</i> for a complete list of DataWindow object properties that can be used with <b>GetProperty</b>
				</para>
			</remarks><example>This C# code gets the value of a property in a DataWindow object when the user selects 
         an object type (such as a label or a column) and an attribute (such as <c>color</c> or <c>font.face</c>) from 
         two list boxes:
         <code>
         string strObject, strAttr, strValue;
         
         strObject = (string)lbObjects.SelectedItem;
         strAttr = (string)lbAttributes.SelectedItem;
         
         strValue = DW1.GetProperty(strObject + "." + strAttr);
         
         </code>
			</example><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetProperty(System.String,System.String)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Describe(System.String)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetRowFromRowId(System.Int32)">
            <overloads>Gets a row number given the unique row identifier associated with that row. </overloads><summary>Gets the number of a row in the Primary buffer given the unique row identifier associated with that row. 
      </summary><returns>The row number.</returns><param name="RowId">The row identifier for which you want the associated row number.</param><exception cref="T:System.ArgumentException">
				<i>RowId</i> is not a valid row identifier, or the row is no longer in the Primary buffer.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>This method allows you to use a unique row identifier to obtain the current row number position within the Primary buffer. 
			The row identifier is not affected by operations such as 
         Insert, Delete, Filter, or Sort that may change the original order - and consequently the row numbers.
      </remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetRowIdFromRow(System.Int32)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetRowFromRowId(System.Int32,Sybase.DataWindow.DataBuffer)">
            <summary>Gets the number of a row in the specified buffer given the unique row identifier associated with that row. 
      </summary><returns>The row number.</returns><param name="RowId">The row identifier for which you want the associated row number.</param><param name="Buffer">The DataWindow buffer containing the row.</param><exception cref="T:System.ArgumentException">
				<i>RowId</i> is not a valid row identifier, or the row is no longer in the <i>Buffer</i>.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>This method allows you to use a unique row identifier to obtain the current row number position within the Primary buffer. 
			The row identifier is not affected by operations such as 
         Insert, Delete, Filter, or Sort that may change the original order - and consequently the row numbers.
      </remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetRowIdFromRow(System.Int32)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetRowIdFromRow(System.Int32)">
            <overloads>Gets a unique row identifier for a given row. </overloads><summary>Gets a unique row identifier for the given row in the Primary buffer.</summary><returns>The unique row identifier.</returns><param name="RowNumber">The number of the row for which you want a unique row identifier.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is not a valid row in the Primary buffer.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>The row identifier value is not the same as the row number value used by many DataWindow .NET
         methods. First 
         convert the unique row identifier into a row number by calling <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetRowFromRowId(System.Int32)"/>.
      </remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetRowFromRowId(System.Int32)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetRowIdFromRow(System.Int32,Sybase.DataWindow.DataBuffer)">
            <summary>Gets a unique row identifier for the given row in the specified buffer.</summary><returns>The unique row identifier.</returns><param name="RowNumber">The number of the row for which you want a unique row identifier.</param><param name="Buffer">The DataWindow buffer containing the row for which you want the unique identifier.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is not a valid row in <i>Buffer</i>.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>The row identifier value is not the same as the row number value used by many DataWindow .NET
         methods. First 
         convert the unique row identifier into a row number by calling <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetRowFromRowId(System.Int32)"/>.
      </remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetRowFromRowId(System.Int32)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetRowStatus(System.Int32,Sybase.DataWindow.DataBuffer)">
            <summary>Reports the modification status of a row in a DataWindow.
      </summary><returns>The <see cref="T:Sybase.DataWindow.RowStatus"/>.</returns><param name="RowNumber">The row number for which you want the status.</param><param name="Buffer">The DataWindow buffer containing the row.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>Use <b>GetRowStatus</b> to understand what SQL statements will be generated when you update the database. 
			For rows in the Primary and Filter buffers, <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData"/>
         generates:
         <list type="bullet">
					<item>an INSERT statement for rows in the Primary and Filter buffers with the NewAndModified status;</item>
					<item>an UPDATE statement for rows in the Primary and Filter buffers with Modified status.  The generated
					SQL statement includes the columns that have an
					<see cref="T:Sybase.DataWindow.ItemStatus"/> of Modified within the SET clause; and</item>
					<item> a DELETE statement for rows in the Delete buffer that have a status of Modified or NotModified. 
					New and NewAndModified rows do not exist yet in the database;
         therefore, there is nothing to actually delete.</item>
				</list>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemStatus(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetRowStatus(System.Int32,Sybase.DataWindow.DataBuffer,Sybase.DataWindow.RowStatus)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.FindNextSelectedRow(System.Int32)">
            <summary>Reports the number of the next highlighted row in a WebDataWindowControl.
		</summary><returns>The number of the selected row, or 0 if no row is selected. </returns><param name="RowNumber">The number of the row after which to begin the search. Use a value of 0 to search from the beginning.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException"><i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><remarks>
			<para><b>FindNextSelectedRow</b> begins searching after <i>RowNumber</i>, and so does not return <i>RowNumber</i> if that row is selected. Use a value of 0 to search from the beginning.</para>
			<para>Rows are not automatically selected (highlighted) when they become current. You can select a row by calling the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SelectRow(System.Int32,System.Boolean)"/> method.</para>
		</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SelectRow(System.Int32,System.Boolean)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetSqlSelect">
            <summary>Returns the SQL SELECT statement that is the data source of a DataWindow.</summary><returns>A string containing the SQL SELECT statement that is the source of the DataWindow, 
			or an empty string ("") if the data source is not a SELECT statement.</returns><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><remarks>
				<para>When you want to change the SQL SELECT statement for a DataWindow or DataStore at runtime
         you can use <b>GetSqlSelect</b> to save the current SELECT statement before making the change.</para>
				<para>When you 
         define a DataWindow object graphically in DataWindow Designer, a special SELECT statement (called a 
         PBSELECT statement) is stored with the DataWindow object.  This database-vendor independent syntax is
         translated to native SQL when a connected <see cref="T:Sybase.DataWindow.Transaction"/> or 
         <see cref="T:Sybase.DataWindow.AdoTransaction"/>
         has been associated with the DataWindowControl or DataStore via the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetTransaction(Sybase.DataWindow.AdoTransaction)"/> method.  If there is no
         associated connection when <b>GetSqlSelect</b> is invoked, the PBSELECT syntax is returned.
         </para>
				<para>
					<b>GetSqlSelect</b> is equivalent to the following:
				<list type="bullet">
						<item>GetProperty("datawindow.table.select")</item>
						<item>Describe("datawindow.table.select")</item>
					</list>
				</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetSqlSelect(System.String)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.ImportFile(System.String,Sybase.DataWindow.FileSaveAsType)">
            <overloads>Inserts data from a text file into a DataWIndow.</overloads><summary>Inserts comma-separated, tab-separated, or XML data from a file into a DataWindow.</summary><returns>The number of rows that were imported.</returns><param name="FileName">The name of the file from which to import the rows.</param><param name="ImportType">The file format, either Csv, Text, or Xml.</param><exception cref="T:System.ArgumentException">
				<i>ImportType</i> is not Csv, Text or Xml.</exception><exception cref="T:System.InvalidOperationException">Data in one of the columns has an incompatible datatype.</exception><exception cref="T:System.NotSupportedException"><b>ImportFile</b> is not supported for crosstab and composite DataWindows.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>The file should consist of rows of data. If the file includes column headings or row 
         labels, use the overloaded version of this method which allows you to skip the first row(s).</para>
				<para>The datatypes and order of the DataWindow object's columns must match the columns of data in the file.</para>
				<para>The location and number of double quote marks in a field in a tab-separated file affect how 
         they are handled when the file is imported:</para>
				<list type="bullet">
					<item>If the string is enclosed in one pair of double quotes, the quotes are discarded.</item>
					<item>If the string is enclosed in two pairs of double quotes, the first 
         pair is considered to enclose a null string, and the rest of the string is discarded. </item>
					<item>If the string is enclosed in three pairs of double quotes, one pair is retained 
         when the string is imported. </item>
					<item>If there 
         is a double quote at the beginning of a string, any characters after the second double quote are 
         discarded. If there is no second double quote, the tab or comma character delimiting the fields 
         is not recognized as a field separator and all characters up to the next occurrence of a double 
         quote, including a carriage return, are considered to be part of the string.</item>
					<item>Double quotes after the first character in the string are rendered literally.</item>
				</list>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ImportClipboard(Sybase.DataWindow.FileSaveAsType)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ImportString(System.String,Sybase.DataWindow.FileSaveAsType)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveAs(System.String,Sybase.DataWindow.FileSaveAsType)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.ImportFile(System.String,Sybase.DataWindow.FileSaveAsType,System.Int32,System.Int32,System.Int16,System.Int16,System.Int16)">
            <summary>Inserts comma-separated, tab-separated, or XML data from a file into a DataWindow.</summary><returns>The number of rows that were imported.</returns><param name="FileName">The name of the file from which to import the rows.</param><param name="ImportType">The file format, either Csv, Text, or Xml.</param><param name="StartRow">The number of the first row in the file that you want to copy.</param><param name="EndRow">The number of the last row in the file that you want to copy. </param><param name="StartCol">The number of the first column in the file that you want to copy. </param><param name="EndCol">The number of the last column in the file that you want to copy.</param><param name="dwStartCol">The number of the first column in the DataWindow that you want to receive data. </param><exception cref="T:System.ArgumentException">
				<i>ImportType</i> is not Csv, Text or Xml.</exception><exception cref="T:System.InvalidOperationException">Data in one of the columns has an incompatible datatype.</exception><exception cref="T:System.NotSupportedException"><b>ImportFile</b> is not supported for crosstab and composite DataWindows.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>The file should consist of rows of data. If the file includes column headings or row 
         labels, use the overloaded version of this method which allows you to skip the first row(s).</para>
				<para>The datatypes and order of the DataWindow object's columns must match the columns of data in the file.</para>
				<para>
					<b>StartCol</b> and <b>EndCol</b> control the number of imported columns and the number of 
         columns in the DataWindow that are affected. <b>dwStartCol</b> specifies the first 
         DataWindow column to be affected. The last column to be affected can be calculated as:
         <c>dwStartCol + (EndCol - StartCol)</c>
				</para>
				<para>The location and number of double quote marks in a field in a tab-separated file affect how 
         they are handled when the file is imported:</para>
				<list type="bullet">
					<item>If the string is enclosed in one pair of double quotes, the quotes are discarded.</item>
					<item>If the string is enclosed in two pairs of double quotes, the first 
         pair is considered to enclose a null string, and the rest of the string is discarded. </item>
					<item>If the string is enclosed in three pairs of double quotes, one pair is retained 
         when the string is imported. </item>
					<item>
         If there 
         is a double quote at the beginning of a string, any characters after the second double quote are 
         discarded. If there is no second double quote, the tab or comma character delimiting the fields 
         is not recognized as a field separator and all characters up to the next occurrence of a double 
         quote, including a carriage return, are considered to be part of the string.</item>
					<item>Double quotes after the first character in the string are rendered literally.</item>
				</list>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ImportClipboard(Sybase.DataWindow.FileSaveAsType)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ImportString(System.String,Sybase.DataWindow.FileSaveAsType)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveAs(System.String,Sybase.DataWindow.FileSaveAsType)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.ImportClipboard(Sybase.DataWindow.FileSaveAsType)">
            <summary>
            This IDataStore.ImportClipboard method is not supported in WebDataWindowControl.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.ImportClipboard(Sybase.DataWindow.FileSaveAsType,System.Int32,System.Int32,System.Int16,System.Int16,System.Int16)">
            <summary>
            This IDataStore.ImportClipboard method is not supported in WebDataWindowControl.		
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.ImportString(System.String,Sybase.DataWindow.FileSaveAsType)">
            <overloads>Insert data from a string into a DataWIndow.</overloads><summary>Inserts data from comma-separated, tab-separated, or XML  string into a DataWindow.</summary><returns>The number of rows that were imported.</returns><param name="ImportString">The string containing the data.</param><param name="ImportType">The text format, either Csv, Text, or Xml.</param><exception cref="T:System.ArgumentException">
				<i>ImportType</i> is not Csv, Text or Xml.</exception><exception cref="T:System.InvalidOperationException">Data in one of the columns has an incompatible datatype.</exception><exception cref="T:System.NotSupportedException"><b>ImportString</b> is not supported for crosstab and composite DataWindows.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>The string should consist of rows of data. If the string includes column headings or row 
         labels, use the overloaded version of this method which allows you to skip the first row(s).</para>
				<para>The datatypes and order of the DataWindow object's columns must match the columns of data in the string.</para>
				<para>If an XML or comma-separated column contains a leading double quote it is assumed to be 
         part of the column value. A leading double quote has to be closed to mark the end of an item.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ImportClipboard(Sybase.DataWindow.FileSaveAsType)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ImportFile(System.String,Sybase.DataWindow.FileSaveAsType)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveAs(System.String,Sybase.DataWindow.FileSaveAsType)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.ImportString(System.String,Sybase.DataWindow.FileSaveAsType,System.Int32,System.Int32,System.Int16,System.Int16,System.Int16)">
            <summary>Inserts data from comma-separated, tab-separated, or XML  string into a DataWindow.</summary><returns>The number of rows that were imported.</returns><param name="ImportString">The string containing the data.</param><param name="ImportType">The text format, either Csv, Text, or Xml.</param><param name="StartRow">The number of the first row in the string that you want to copy.</param><param name="EndRow">The number of the last row in the string that you want to copy. </param><param name="StartCol">The number of the first column in the string that you want to copy. </param><param name="EndCol">The number of the last column in the string that you want to copy.</param><param name="dwStartCol">The number of the first column in the DataWindow that you want to receive data. </param><exception cref="T:System.ArgumentException">
				<i>ImportType</i> is not Csv, Text or Xml.</exception><exception cref="T:System.InvalidOperationException">Data in one of the columns has an incompatible datatype.</exception><exception cref="T:System.NotSupportedException"><b>ImportString</b> is not supported for crosstab and composite DataWindows.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>The string should consist of rows of data. If the string includes column headings or row 
         labels, use the overloaded version of this method which allows you to skip the first row(s).</para>
				<para>The datatypes and order of the DataWindow object's columns must match the columns of data in the string.</para>
				<para>
					<b>StartCol</b> and <b>EndCol</b> control the number of imported columns and the number of 
         columns in the DataWindow that are affected. <b>dwStartCol</b> specifies the first 
         DataWindow column to be affected. The last column to be affected can be calculated as:
         <c>dwStartCol + (EndCol - StartCol)</c>
				</para>
				<para>If an XML or comma-separated column contains a leading double quote it is assumed to be 
         part of the column value. A leading double quote has to be closed to mark the end of an item.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ImportClipboard(Sybase.DataWindow.FileSaveAsType)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ImportFile(System.String,Sybase.DataWindow.FileSaveAsType)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveAs(System.String,Sybase.DataWindow.FileSaveAsType)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)">
            <overloads>Tests whether the value of a DataWindow column is null.</overloads><summary>Tests whether the current value of a DataWindow column, specified by number, is null. 
      </summary><returns>
				<c>true</c> if the value at <i>RowNumber</i> and <i>ColumnNumber</i> is null, and <c>false</c> otherwise.</returns><param name="RowNumber">The row number for which you want to test the value.</param><param name="ColumnNumber">The column number for which you want to test the value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
			<para>To avoid generating a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>, use <b>IsItemNull</b> to test whether a user-entered value or a value retrieved from the 
         database is null before calling any of the following methods:</para>
				<list type="bullet">
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDate(System.Int32,System.Int16)"/>
					</item>
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.Int16)"/>
					</item>
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDecimal(System.Int32,System.Int16)"/>
					</item>
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDouble(System.Int32,System.Int16)"/>
					</item>
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemString(System.Int32,System.Int16)"/>
					</item>
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemTime(System.Int32,System.Int16)"/>
					</item>
				</list>
				<para>If one or more columns in a DataWindow are marked as required, that is, they must
         contain data, updating the database will fail if those columns have null values. Before calling <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData"/>, use         <see cref="M:Sybase.DataWindow.DataWindowControl.FindNextRequiredColumn(System.Int32@,System.Int16@,Sybase.DataWindow.DataBuffer,System.Boolean)"/> to find any remaining columns with null values, and either prompt the user for input or provide values programmatically.  This is more efficient than using <b>IsItemNull</b> to evaluate each row and column.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <summary>Tests whether the value of a DataWindow column, specified by number, is null. 
      </summary><returns>
				<c>true</c> if the value at <i>RowNumber</i> and <i>ColumnNumber</i> is null, and <c>false</c> otherwise.</returns><param name="RowNumber">The row number for which you want to test the value.</param><param name="ColumnNumber">The column number for which you want to test the value.</param><param name="Buffer">The DataWindow buffer for which you want to test the value.</param><param name="OriginalData">
				<c>false</c> to test the current value at <i>RowNumber</i> and <i>ColumnNumber</i>, <c>true</c> to test the value prior to any user modification.
			</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>To avoid generating a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>, use <b>IsItemNull</b> to test whether a user-entered value or a value retrieved from the 
         database is null before calling any of the following methods:</para>
				<list type="bullet">
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDate(System.Int32,System.Int16)"/>
					</item>
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.Int16)"/>
					</item>
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDecimal(System.Int32,System.Int16)"/>
					</item>
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDouble(System.Int32,System.Int16)"/>
					</item>
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemString(System.Int32,System.Int16)"/>
					</item>
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemTime(System.Int32,System.Int16)"/>
					</item>
				</list>
				<para>If one or more columns in a DataWindow are marked as required, that is, they must
         contain data, updating the database will fail if those columns have null values. Before calling <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData"/>, use         <see cref="M:Sybase.DataWindow.DataWindowControl.FindNextRequiredColumn(System.Int32@,System.Int16@,Sybase.DataWindow.DataBuffer,System.Boolean)"/> to find any remaining columns with null values, and either prompt the user for input or provide values programmatically.  This is more efficient than using <b>IsItemNull</b> to evaluate each row and column.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.String)">
            <summary>Tests whether the current value of a DataWindow column, specified by name, is null. 
      </summary><returns>
				<c>true</c> if the value at <i>RowNumber</i> and <i>ColumnName</i> is null, and <c>false</c> otherwise.</returns><param name="RowNumber">The row number for which you want to test the value.</param><param name="ColumnName">The name of the column for which you want to test the value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>To avoid generating a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>, use <b>IsItemNull</b> to test whether a user-entered value or a value retrieved from the 
         database is null before calling any of the following methods:</para>
				<list type="bullet">
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDate(System.Int32,System.Int16)"/>
					</item>
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.Int16)"/>
					</item>
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDecimal(System.Int32,System.Int16)"/>
					</item>
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDouble(System.Int32,System.Int16)"/>
					</item>
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemString(System.Int32,System.Int16)"/>
					</item>
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemTime(System.Int32,System.Int16)"/>
					</item>
				</list>
				<para>If one or more columns in a DataWindow are marked as required, that is, they must
         contain data, updating the database will fail if those columns have null values. Before calling <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData"/>, use         <see cref="M:Sybase.DataWindow.DataWindowControl.FindNextRequiredColumn(System.Int32@,System.Int16@,Sybase.DataWindow.DataBuffer,System.Boolean)"/> to find any remaining columns with null values, and either prompt the user for input or provide values programmatically.  This is more efficient than using <b>IsItemNull</b> to evaluate each row and column.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)">
            <summary>Tests whether the value of a DataWindow column, specified by name, is null. 
      </summary><returns>
				<c>true</c> if the value at <i>RowNumber</i> and <i>ColumnName</i> is null, and <c>false</c> otherwise.</returns><param name="RowNumber">The row number for which you want to test the value.</param><param name="ColumnName">The name of the column for which you want to test the value.</param><param name="Buffer">The DataWindow buffer for which you want to test the value.</param><param name="OriginalData">
				<c>false</c> to test the current value at <i>RowNumber</i> and <i>ColumnName</i>, <c>true</c> to test the value prior to any user modification.
			</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>To avoid generating a <see cref="T:System.Data.SqlTypes.SqlNullValueException"/>, use <b>IsItemNull</b> to test whether a user-entered value or a value retrieved from the 
         database is null before calling any of the following methods:</para>
				<list type="bullet">
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDate(System.Int32,System.Int16)"/>
					</item>
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.Int16)"/>
					</item>
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDecimal(System.Int32,System.Int16)"/>
					</item>
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDouble(System.Int32,System.Int16)"/>
					</item>
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemString(System.Int32,System.Int16)"/>
					</item>
					<item>
						<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemTime(System.Int32,System.Int16)"/>
					</item>
				</list>
				<para>If one or more columns in a DataWindow are marked as required, that is, they must
         contain data, updating the database will fail if those columns have null values. Before calling <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData"/>, use         <see cref="M:Sybase.DataWindow.DataWindowControl.FindNextRequiredColumn(System.Int32@,System.Int16@,Sybase.DataWindow.DataBuffer,System.Boolean)"/> to find any remaining columns with null values, and either prompt the user for input or provide values programmatically.  This is more efficient than using <b>IsItemNull</b> to evaluate each row and column.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.IsSelected(System.Int32)">
            <summary>Tests whether a row is selected (highlighted) in a WebDataWindowControl.
		</summary><returns><c>true</c> if <i>RowNumber</i>in the DataWindowControl is selected and <c>false</c> otherwise.</returns><param name="RowNumber">The number of the row you want to test to see if it is selected.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException"> <i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SelectRow(System.Int32,System.Boolean)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.InsertRow(System.Int32)">
            <summary>Inserts a row into a DataWindow. 
      </summary><returns>The number of the row that was added. </returns><param name="RowNumber">The row number before which to insert the new row. Specify 0 to insert a row at the end.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:System.NotSupportedException">Crosstab and composite DataWindow styles do not support <i>InsertRow</i>.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>
					<b>InsertRow</b> simply inserts a row without changing the display or the current row. If any of the DataWindow columns have 
			default values, these values are added to the Primary buffer before the row is displayed.</para>
				<para>To make the new row the current row, call the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetRow(System.Int32)"/> method. For a DataWindowControl, you can
			invoke <see cref="M:Sybase.DataWindow.DataWindowControl.ScrollToRow(System.Int32)"/> instead if you also want the new row to be visible in the 
			DataWindowControl.</para>
				<para>A newly inserted row (with a <see cref="T:Sybase.DataWindow.RowStatus"/> value of New) is not 
         included in <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ModifiedCount"/> until data is entered in the row (and its <see cref="T:Sybase.DataWindow.RowStatus"/> changes
         to NewAndModified). </para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.DeleteRow(System.Int32)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.Modify(System.String)">
            <summary>Modifies a DataWindow object by applying specifications that
         change the object's definition. 
      </summary><param name="Syntax">A string whose value is the specification for the modification.  See the Remarks section for appropriate formats.</param><exception cref="T:System.ArgumentNullException">
				<i>Syntax</i> is null.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">
				<i>Syntax</i> is invalid, or an unexpected error has occurred.</exception><remarks>
				<para>
					<b>Modify</b> lets you make many of the same settings in code that you can make when designing the 
         DataWindow. DataWindow Designer automatically gives names to all controls so that you can refer to them in <i>Syntax</i>. 
         See the <i>DataWindow .NET Programmer's Guide</i> for the exhaustive list of control properties that can be used.</para>
				<para>You can use three types of statements in <i>Syntax</i> to create, remove, and modify controls within a DataWindow object.
         <list type="bullet">
						<item>
							<b>CREATE </b>
							<i>control (settings)	</i>
							<para>
         Adds a control to the DataWindow object (such as text, computed fields, and bitmaps). 
         <i>Settings</i> is a list of properties and values using the format you see in exported DataWindow 
         syntax. To create a control, you must supply enough information to define it.</para>
						</item>
						<item>
							<b>DESTROY [COLUMN] </b>
							<i> control</i>
							<para>
         Removes <i>control</i> from the DataWindow object. When <i>control</i> is a column, specify the keyword COLUMN 
         to remove both the column and the column's data from the buffer.</para>
						</item>
						<item>
							<i>controlname.property=value</i>
							<para>Changes the value of <i>property</i> to <i>value</i>. Properties control the location, color, 
         size, font, and other settings for <i>controlname</i>. When <i>controlname</i> is <c>DataWindow</c>, you
         can also set properties for database access. Depending on the specific property, <i>value</i> can
         be a constant, a quoted constant, an expression that consists of a default value followed by a 
         valid DataWindow expression that returns the appropriate datatype for the property. </para>
							<para>If you are changing a single property, you can also use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetProperty(System.String,System.String)"/> method, or use a property of one of the 
         <see cref="T:Sybase.DataWindow.GraphicObject"/> classes, if the desired property is exposed.</para>
						</item>
					</list>
				</para>
				<para>When you specify an expression for a DataWindow property, the expression has the format:<c> 
         defaultvalue~tDataWindowexpression</c> where:
				</para>
				<list type="bullet">
					<item>
						<c>Defaultvalue</c> is a value that can be converted to the appropriate datatype for the property. It must be followed by a tab character.</item>
					<item>
						<c>DataWindowexpression</c> is an expression that can use any 
         DataWindow expression function. The expression must also evaluate to the appropriate datatype 
         for the property. When you are setting a column's property, the expression is evaluated for each 
         row in the DataWindow, allowing the display to vary based on the data.
         </item>
				</list>
				<para>A typical expression uses the <c>If</c> function: <c>0~tIf(emp_status='T', 255, 0)</c>.  The following Visual Basic .NET statements would equivalently
         change the text color of the <c>emp_id</c> column to red for those employees with a status of 'T' (terminated) in <c>dwEmp</c>:
				</para>
				<list type="bullet">
					<item>
						<c>dwEmp.Modify("emp_id.color='0~tIf(emp_status=~'T~',255,0)'")</c>
					</item>
					<item>
						<c>dwEmp.SetProperty("emp_id.color", "0~tIf(emp_status=~'T~',255,0)")</c>
					</item>
					<item>
						<c>Dim gobEditColumn as Sybase.DataWindow.GraphicObjectEditableColumn</c>
        				<c>gobEditColumn = CObj(dwEmp.GetObjectByName("emp_id"))</c>
        				<c>gobEditColumn.TextColorExpression = "If(emp_status='T',255,0)"</c>
					</item>
				</list>
				<note>DataWindow expressions expect the tilde (~) as an escape character, as can be seen by the examples above.  ~t is a tab character and ~' indicates a nested single quote.</note>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetProperty(System.String,System.String)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Describe(System.String)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.Print">
            <overloads>Prints the DataWindow to the current printer. </overloads><summary>Prints the DataWindow to the current printer.</summary><exception cref="T:System.NotSupportedException">
				<b>Print</b> is not supported for a DataWindowChild that is nested in a composite DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>For a DataStore and DataWindowControl, <b>Print</b> triggers the <see cref="E:Sybase.DataWindow.IDataStore.BeginPrint"/>
			 event just before data is sent to the printer (or 
         spooler), a <see cref="E:Sybase.DataWindow.IDataStore.PagePrinting"/> for each page break, 
         and an <see cref="E:Sybase.DataWindow.IDataStore.EndPrint"/> event when printing is 
         complete.</para>
				<para>Use the overloaded version of <b>Print</b> to display a dialog box allowing the user to cancel the print job.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.PrintCancel"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.Print(System.Boolean)">
            <summary>
            This IDataStore.Print(bool ShowCancelDialog) method is not supported in WebDataWindowControl.
            </summary>	
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.Print(System.Boolean,System.Boolean)">
            <summary>
            This IDataStore.Print(bool ShowCancelDialog, bool ShowPrintDialog) method is not supported in WebDataWindowControl.
            </summary>	
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.PrintCancel">
            <summary>Cancels printing and deletes the spool file, if any. 
      </summary><returns>
				<c>true</c> if the print job was canceled, <c>false</c> otherwise (including when there is no pending print job).</returns><exception cref="T:System.NotSupportedException">
				<b>PrintCancel</b> is not supported for a DataWindowChild that is nested in a composite DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>PrintCancel cancels the printing of the specified DataWindowChild, DataStore, or DataWindowControl by deleting the spool file, if any, and closing the job. 
      </remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Print"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.ReselectRow(System.Int32)">
            <summary>Refreshes data for a specific row by reretrieving from the database.</summary><param name="RowNumber">The row to be refreshed.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:System.InvalidOperationException">
				<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetTransaction(Sybase.DataWindow.AdoTransaction)"/> was not called before <b>ReselectRow</b> for a DataWindowChild.</exception><exception cref="T:Sybase.DataWindow.DbErrorException">A database error has occurred.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<b>ReselectRow</b> is supported for SQL Select DataWindows and can be used to discard values 
         the user has changed and replace them with values from the database after an update fails (due to a 
         concurrent access error, for example).  
      </remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Retrieve(System.Data.DataTable)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.Reset">
            <summary>Clears all the data from a DataWindow. 
      </summary><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>
					<b>Reset</b> is not the same as deleting rows from the DataWindow since it does not move the rows to Delete buffer.  Use
			<b>Reset</b> only to completely discard any data and changes that have been made.</para>
				<para>Use <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.RowsDiscard(System.Int32,System.Int32,Sybase.DataWindow.DataBuffer)"/> to clear the data from a specific buffer.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.DeleteRow(System.Int32)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.RowsDiscard(System.Int32,System.Int32,Sybase.DataWindow.DataBuffer)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.ResetUpdateStatus">
            <summary>Clears the status flags in the Primary and Filter buffers and empties the Delete buffer of a
         DataWindow. 
      </summary><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>When a column is modified, its <see cref="T:Sybase.DataWindow.ItemStatus"/> flag is set, 
				marking it for update. Likewise, when a row is added or deleted, its <see cref="T:Sybase.DataWindow.RowStatus"/> flag is set.
				By default 
         the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData"/> method clears these flags; however, if you want to coordinate updates of more than one DataWindow, 
         you can defer clearing the status by setting the <i>ResetUpdateFlags</i> argument to 
         <c>false</c>. Then after you verify that all the updates succeeded, you can call <b>ResetUpdateStatus</b>
          for each DataWindow to clear
         the status flags. If one of the updates fails, you can retain the update statuses, prompt the user to fix the problem, and try the
         updates again.</para>
				<para>You can find out which rows are marked for update with the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetRowStatus(System.Int32,Sybase.DataWindow.DataBuffer)"/> method.</para>
			</remarks><example>This C# code updates the data without resetting flags and commits it before resetting status flags:
         <code>
         try
         {
            dwEmployee.UpdateData(true, false);
            myTrans.Commit();
            
            // If no exception has been caught, update succeeded
            dwEmployee.ResetUpdateStatus();
         }
         catch (Sybase.DataWindow.DbErrorException dbError)
         {
         	// update failed prompt user to fix the problem
         }
         
         </code>
			</example><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemStatus(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetRowStatus(System.Int32,Sybase.DataWindow.DataBuffer)"/>		
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.Retrieve(System.Object[])">
            <summary>Retrieves rows from the database into the DataWindow</summary><returns>The number of rows retrieved.</returns><param name="ArgsList">A list of retrieval arguments to be passed to the SQL statement that is the source of the DataWindow.
			<note>You must use .NET datatypes, 
         such as System.DateTime, in the argument list.</note>
			</param><exception cref="T:Sybase.DataWindow.DbErrorException">A database error has occurred.</exception><exception cref="T:System.InvalidOperationException">
				<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetTransaction(Sybase.DataWindow.AdoTransaction)"/> has not been called.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>After rows are retrieved, the DataWindow object's filter is applied. Any retrieved rows that do not 
         meet the filter criteria are immediately moved to the Filter buffer and are not included in the return count.</para>
				<para>Before you can retrieve rows, you must specify a transaction object with 
         <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetTransaction(Sybase.DataWindow.AdoTransaction)"/> and connect to the database. Normally, when you call <b>Retrieve</b>, any rows that are already in the 
         DataWindow are discarded and replaced with the newly retrieved rows. You can set the <i>Action</i> property of the 
         <see cref="T:Sybase.DataWindow.BeginRetrieveEventArgs"/> to <c>AppendRows</c> 
         in the <see cref="E:Sybase.DataWindow.DataWindowControl.BeginRetrieve"/> event to add any 
         retrieved rows to the ones that already exist in the buffers.</para>
				<para>If arguments are expected but not specified, the user is prompted for the retrieval arguments.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ReselectRow(System.Int32)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetTransaction(Sybase.DataWindow.AdoTransaction)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.RowsCopy(System.Int32,System.Int32,Sybase.DataWindow.DataBuffer,Sybase.DataWindow.IDataWindowBase,System.Int32,Sybase.DataWindow.DataBuffer)">
            <summary>Copies a range of rows from one DataWindow to another,
         or from one buffer to another within a single DataWindow. 
      </summary><param name="StartRow">The number of the first row you want to copy.</param><param name="EndRow">The number of the last row you want to copy.</param><param name="FromBuffer">The DataWindow buffer from which you want to copy rows.</param><param name="ToDW">The DataWindow to which you want to copy the rows.</param><param name="BeforeRow">The number of the row in <i>ToDW</i> before which you want to insert the copied rows. <note>To insert after the last row, use any value that is greater than the number of existing rows.</note>
			</param><param name="ToBuffer">The DataWindow buffer in <i>ToDW</i> to which the rows should be copied. </param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>StartRow</i> or <i>EndRow</i> is less than 1, or <i>BeforeRow</i> is less than 0.</exception><exception cref="T:System.ArgumentException">
				<list type="bullet">
					<item>
						<i>StartRow</i> &lt; <i>EndRow</i>, or</item>
					<item>Source DataWindow and <i>ToDW</i> are incompatible.</item>
				</list>
			</exception><exception cref="T:System.ArgumentNullException">
				<i>ToDW</i> is null.</exception><exception cref="T:System.NotSupportedException">Source DataWindow or <i>ToDW</i> is a crosstab.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>When you use the <b>RowsCopy</b> method, the status of the rows that are copied to the <i>ToBuffer</i> is set to
         NewAndModified. If you issue an update request, the DataWindow server sends SQL INSERT statements to the database for any 
         new rows in the Primary buffer.</para>
				<para>Data is not automatically retrieved for drop-down DataWindows in <i>ToDW</i>, as it 
         is when you call <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.InsertRow(System.Int32)"/>. You must explicitly call <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Retrieve(System.Data.DataTable)"/> for child DataWindows in <i>ToDW</i>.</para>
				<para>When you use <b>RowsCopy</b> to populate another DataWindow, the copied data is not automatically processed 
         by filters or sort criteria in effect on the target DataWindow. You may need to call the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Filter"/>, 
         <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.CalculateGroups"/>, or <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Sort"/> methods to properly process the data.</para>
				<para>A DataWindow cannot be in query mode when you call <b>RowsCopy</b>. </para>
			</remarks><example>This Visual Basic subroutine copies rows from the Delete buffer in a DataWindow into the Primary buffer 
			of a DataWindow called <c>dwDelete</c>:
         <code>
         Public Sub RefreshData()
            Dim primary As DataWindowControl
            Dim filterCount As Integer
         
            Try
               dwDelete.Reset()
               primary = buffersForm.GetPrimaryControl
               filterCount = primary.DeletedCount
               
               'Use the RowsCopy function to copy the rows from the
               'deleted buffer in the primary DataWindow into the DataWindow
               'on this window.
               If filterCount &gt; 0 Then
                  primary.RowsCopy(1, filterCount, DataBuffer.Delete, dwDelete, 1, DataBuffer.Primary)
               End If
            Catch ex As Exception
               ErrorHandler.HandleException(ex)
            End Try
         End Sub
         </code>
			</example><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.RowsDiscard(System.Int32,System.Int32,Sybase.DataWindow.DataBuffer)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.RowsMove(System.Int32,System.Int32,Sybase.DataWindow.DataBuffer,Sybase.DataWindow.IDataWindowBase,System.Int32,Sybase.DataWindow.DataBuffer)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.RowsDiscard(System.Int32,System.Int32,Sybase.DataWindow.DataBuffer)">
            <summary>Discards a range of rows in a DataWindow control.</summary><param name="StartRow">The number of the first row you want to discard.</param><param name="EndRow">The number of the last row you want to discard.</param><param name="Buffer">The DataWindow buffer from which you want to discard the rows.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>StartRow</i> or <i>EndRow</i> is less than 1.</exception><exception cref="T:System.ArgumentException">
				<i>StartRow</i> is less than <i>EndRow</i>.</exception><exception cref="T:System.NotSupportedException">
				<b>RowsDiscard</b> is not supported for crosstab DataWindows.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Once a row has been discarded using <b>RowsDiscard</b>, you cannot restore the row. 
			You have to retrieve it again from the database.</para>
				<para>Use <b>RowsDiscard</b> when your application has finished with rows in a DataWindow, and you do not
         want an update to affect the database. For example, you can discard rows in the Delete buffer to 
         prevent the associated rows from being removed from the database when you call <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData"/>. </para>
				<para>Use <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Reset"/> to clear all the rows 
         from all three buffers of a DataWindow.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.RowsCopy(System.Int32,System.Int32,Sybase.DataWindow.DataBuffer,Sybase.DataWindow.IDataWindowBase,System.Int32,Sybase.DataWindow.DataBuffer)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.RowsMove(System.Int32,System.Int32,Sybase.DataWindow.DataBuffer,Sybase.DataWindow.IDataWindowBase,System.Int32,Sybase.DataWindow.DataBuffer)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Reset"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.RowsMove(System.Int32,System.Int32,Sybase.DataWindow.DataBuffer,Sybase.DataWindow.IDataWindowBase,System.Int32,Sybase.DataWindow.DataBuffer)">
            <summary>Removes a range of rows from one DataWindow and inserts them into another, or moves them from one buffer to another within a single DataWindow. 
      </summary><param name="StartRow">The number of the first row you want to move.</param><param name="EndRow">The number of the last row you want to move.</param><param name="FromBuffer">The DataWindow buffer from which you want to move rows.</param><param name="ToDW">The DataWindow to which you want to move the rows.</param><param name="BeforeRow">The number of the row in <i>ToDW</i> before which you want to insert the relocated rows. <note>To insert after the last row, use any value that is greater than the number of existing rows.</note>
			</param><param name="ToBuffer">The DataWindow buffer in <i>ToDW</i> to which the rows should be moved.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>StartRow</i> or <i>EndRow</i> is less than 1, or <i>BeforeRow</i> is less than 0.</exception><exception cref="T:System.ArgumentException">
				<list type="bullet">
					<item>
						<i>StartRow</i> &lt; <i>EndRow</i>, or</item>
					<item>Source DataWindow and <i>ToDW</i> are incompatible.</item>
				</list>
			</exception><exception cref="T:System.ArgumentNullException">
				<i>ToDW</i> is null.</exception><exception cref="T:System.NotSupportedException">Source DataWindow or <i>ToDW</i> is a crosstab.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>When you use <b>RowsMove</b>, the rows have the status NewAndModified in <i>ToDW</i>. If you move rows 
         between buffers within a single DataWindow, knowledge of the rows' origin is taken into account to change their 
         status. For example, if you move unmodified rows from the Primary buffer to 
         the Delete buffer, they are marked for deletion. If you move the rows back to the Primary buffer, their status returns 
         to NotModified; however, if you move a row from one DataWindow control (or DataStore) to another and back 
         again, the <see cref="T:Sybase.DataWindow.RowStatus"/> changes to NewAndModified because it came from a different DataWindow.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.RowsCopy(System.Int32,System.Int32,Sybase.DataWindow.DataBuffer,Sybase.DataWindow.IDataWindowBase,System.Int32,Sybase.DataWindow.DataBuffer)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.RowsDiscard(System.Int32,System.Int32,Sybase.DataWindow.DataBuffer)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveAs(System.String,Sybase.DataWindow.FileSaveAsType)">
            <overloads>Saves the contents of a DataWindow in the specified format. </overloads><summary>Saves the contents, including column headers, of a DataWindow in the format specified.</summary><param name="FileName">The name of the file in which to save the DataWindow contents.</param><param name="SaveAsType">The format in which to save the DataWindow contents.</param><exception cref="T:System.ArgumentNullException">
				<i>FileName</i> is null or an empty string ("").</exception><exception cref="T:System.IO.PathTooLongException">
				<i>FileName</i> contains more than 248 characters. </exception><exception cref="T:System.NotSupportedException"><b>SaveAs</b> is not supported for composite DataWindows.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>The file is saved with UTF-16LE encoding. To specify a different encoding, use the overloaded version of <b>SaveAs</b> that
			accepts a parameter of type <see cref="T:Sybase.DataWindow.FileSaveAsEncoding"/>
				</para>
				<para>Report format (PSReport value of <see cref="T:Sybase.DataWindow.FileSaveAsType"/>) is the best choice if the DataWindow is a composite report.</para>
				<para>For Xml, the XML logical structure used is based on the current XML export template for the DataWindow object. You can 
         change the export template by setting the <c>Export.XML.UseTemplate</c> DataWindow object property. If no export 
         template is specified, the default template is used.</para>
				<para>When you save the contents of a DataWindow to a text file, double quotes are handled in a way that enables the 
         <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ImportFile(System.String,Sybase.DataWindow.FileSaveAsType)"/> function to produce the same DataWindow when the text file is imported back into the application. 
         Any field 
         that is enclosed in a pair of double quotes is wrapped with three pairs of double quotes in the saved text file. 
         Double quotes at the beginning of a text field that have no matching double quotes at the end of the field are also 
         replaced by three double quotes in the saved text file. A double quote elsewhere in the field is saved as 
         one double quote. </para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ImportFile(System.String,Sybase.DataWindow.FileSaveAsType)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveAsFormattedText(System.String)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveAs(System.String,Sybase.DataWindow.FileSaveAsType,System.Boolean)">
            <summary>Saves the contents, optionally including column headers, of a DataWindow in the format specified.
      </summary><param name="FileName">The name of the file in which to save the DataWindow contents.</param><param name="SaveAsType">The format in which to save the DataWindow contents.</param><param name="IncludeColumnHeaders">
				<c>true</c> if DataWindow column headings should be included, <c>false</c> otherwise.
			<note>This value is ignored (and treated as <c>true</c>) for formats other than Clipboard, CSV, Excel, and Text.</note>
			</param><exception cref="T:System.ArgumentNullException">
				<i>FileName</i> is null or an empty string ("").</exception><exception cref="T:System.IO.PathTooLongException">
				<i>FileName</i> contains more than 248 characters. </exception><exception cref="T:System.NotSupportedException"><b>SaveAs</b> is not supported for composite DataWindows.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>The file is saved with UTF-16LE encoding. To specify a different encoding, use the overloaded version of <b>SaveAs</b> that
			accepts a parameter of type <see cref="T:Sybase.DataWindow.FileSaveAsEncoding"/>
				</para>
				<para>Report format (PSReport value of <see cref="T:Sybase.DataWindow.FileSaveAsType"/>) is the best choice if the DataWindow is a composite report.</para>
				<para>For Xml, the XML logical structure used is based on the current XML export template for the DataWindow object. You can 
         change the export template by setting the <c>Export.XML.UseTemplate</c> DataWindow object property. If no export 
         template is specified, the default template is used.</para>
				<para>When you save the contents of a DataWindow to a text file, double quotes are handled in a way that enables the 
         <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ImportFile(System.String,Sybase.DataWindow.FileSaveAsType)"/> function to produce the same DataWindow when the text file is imported back into the application. 
         Any field 
         that is enclosed in a pair of double quotes is wrapped with three pairs of double quotes in the saved text file. 
         Double quotes at the beginning of a text field that have no matching double quotes at the end of the field are also 
         replaced by three double quotes in the saved text file. A double quote elsewhere in the field is saved as 
         one double quote. </para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ImportFile(System.String,Sybase.DataWindow.FileSaveAsType)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveAsFormattedText(System.String)"/>		
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveAs(System.String,Sybase.DataWindow.FileSaveAsType,System.Boolean,Sybase.DataWindow.FileSaveAsEncoding)">
            <summary>Saves the contents, optionally including column headers, of a DataWindow with the specified format and encoding.</summary><param name="FileName">The name of the file in which to save the DataWindow contents.</param><param name="SaveAsType">The format in which to save the DataWindow contents.</param><param name="IncludeColumnHeaders">
				<c>true</c> if DataWindow column headings should be included, <c>false</c> otherwise.
			<note>This value is ignored (and treated as <c>true</c>) for formats other than Clipboard, CSV, Excel, and Text.</note>
			</param><param name="Encoding">The character encoding used for the file.</param><exception cref="T:System.ArgumentNullException">
				<i>FileName</i> is null or an empty string ("").</exception><exception cref="T:System.IO.PathTooLongException">
				<i>FileName</i> contains more than 248 characters. </exception><exception cref="T:System.NotSupportedException"><b>SaveAs</b> is not supported for composite DataWindows.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Report format (PSReport value of <see cref="T:Sybase.DataWindow.FileSaveAsType"/>) is the best choice if the DataWindow is a composite report.</para>
				<para>For Xml, the XML logical structure used is based on the current XML export template for the DataWindow object. You can 
         change the export template by setting the <c>Export.XML.UseTemplate</c> DataWindow object property. If no export 
         template is specified, the default template is used.</para>
				<para>When you save the contents of a DataWindow to a text file, double quotes are handled in a way that enables the 
         <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ImportFile(System.String,Sybase.DataWindow.FileSaveAsType)"/> function to produce the same DataWindow when the text file is imported back into the application. 
         Any field 
         that is enclosed in a pair of double quotes is wrapped with three pairs of double quotes in the saved text file. 
         Double quotes at the beginning of a text field that have no matching double quotes at the end of the field are also 
         replaced by three double quotes in the saved text file. A double quote elsewhere in the field is saved as 
         one double quote. </para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ImportFile(System.String,Sybase.DataWindow.FileSaveAsType)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveAsFormattedText(System.String)"/>		
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveAsFormattedText(System.String)">
            <overloads>Saves the contents of a DataWindow as a Unicode text file.</overloads><summary>Saves the contents of a DataWindow as a Unicode text file using default formatting. 
      </summary><param name="FileName">The name of the file in which to save the DataWindow contents.</param><exception cref="T:System.ArgumentNullException">
				<i>FileName</i> is null or an empty string ("").</exception><exception cref="T:System.IO.PathTooLongException">
				<i>FileName</i> contains more than 248 characters. </exception><exception cref="T:System.NotSupportedException"><b>SaveAsFormattedText</b> is not supported for composite DataWindows.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>
					<b>SaveAsFormattedText</b> is similar to <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveAs(System.String,Sybase.DataWindow.FileSaveAsType)"/> with the Text <see cref="T:Sybase.DataWindow.FileSaveAsType"/>;
				however, <b>SaveAsFormattedText</b>
         formats the text and saves column headers as they are displayed in the DataWindow instead of as the 
         column name. For example, if the heading for the <c>cust_id</c> column is "Customer ID", <b>SaveAsFormattedText</b> saves 
         "Customer ID" to the text file, whereas <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveAs(System.String,Sybase.DataWindow.FileSaveAsType)"/> saves "cust_id". 
         <b>SaveAsFormattedText</b> also saves computed fields, and the overloaded 
         version of the method 
         allows you to customize formats in the file and specify the file encoding.</para>
				<para>In the default formatting implemented by this method, values are wrapped in double quotes and separated by tabs. 
         A newline character is placed at the end of each line. 
         Line feed and carriage return characters within each row are converted to white space. 
         The file is saved with UFT-16LE encoding.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveAs(System.String,Sybase.DataWindow.FileSaveAsType)"/>	
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveAsFormattedText(System.String,System.String,System.String,System.String,System.Boolean,Sybase.DataWindow.FileSaveAsEncoding)">
            <summary>Saves the contents of a DataWindow as a Unicode text file with user-specified formatting. 
      </summary><param name="FileName">The name of the file in which to save the DataWindow contents.</param><param name="Separator">The character to be used to delimit values. </param><param name="Quote">The character to be used to wrap values. </param><param name="LineEnd">The character to be use as an end-of-line marker.</param><param name="RetainDataNewLineChar">
				<c>true</c> if line feed and carriage return characters should be retained, <c>false</c> if
			they should be converted to white space</param><param name="Encoding">The character encoding used for the file.</param><exception cref="T:System.ArgumentNullException">
				<i>FileName</i> is null or an empty string ("").</exception><exception cref="T:System.IO.PathTooLongException">
				<i>FileName</i> contains more than 248 characters. </exception><exception cref="T:System.NotSupportedException"><b>SaveAsFormattedText</b> is not supported for composite DataWindows.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>
					<b>SaveAsFormattedText</b> is similar to <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveAs(System.String,Sybase.DataWindow.FileSaveAsType)"/> with the Text <see cref="T:Sybase.DataWindow.FileSaveAsType"/>;
				however, <b>SaveAsFormattedText</b>
         formats the text and saves column headers as they are displayed in the DataWindow instead of as the 
         column name. For example, if the heading for the <c>cust_id</c> column is "Customer ID", <b>SaveAsFormattedText</b> saves 
         "Customer ID" to the text file, whereas <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveAs(System.String,Sybase.DataWindow.FileSaveAsType)"/> saves "cust_id". 
         <b>SaveAsFormattedText</b> also saves computed fields, and the overloaded 
         version of the method 
         allows you to customize formats in the file and specify the file encoding.</para>
			</remarks><example>This statement saves the contents of <c>dwQuarter</c> to the file <c>H:\Q2\results.txt</c>. The saved file has 
         ANSI encoding with the hash mark (#) as the separator character, single quote (') as the value delimiter, 
         and the default line ending. Computed columns are included with the saved information, and line 
         feed and carriage return characters within column data are converted to white space.
         <code>dwQuarter.SaveAsFormattedText("H:\Q2\results.txt","#","'","\n", false, Sybase.FileSaveAsEncoding.Ansi)</code>
			</example><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveAs(System.String,Sybase.DataWindow.FileSaveAsType)"/>	
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SelectRow(System.Int32,System.Boolean)">
            <summary>Add or removes highlighting (reverse video) from a row within a WebDataWindowControl.
		</summary><param name="RowNumber">The row to be affected; specify 0 to target all rows.</param><param name="Select"><c>true</c> if the row(s) should be highlighted, <c>false</c> if highlighting should be removed.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException"><i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><example>The following code, selects the current row after clearing the highlighting from any previously selected row:
			<code>
			dwEmployee.SelectRow(0, false);
			dwEmployee.SelectRow(dwEmployee.CurrentRow, true);
			</code>
		</example>	
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetChanges(Sybase.DataWindow.DataWindowChanges)">
            <summary>Applies changes captured with <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetChanges"/> to a DataWindowControl or DataStore. 
      </summary><param name="Changes">A <see cref="T:Sybase.DataWindow.DataWindowChanges"/> object containing the modifications to be applied.</param><exception cref="T:System.ArgumentNullException">
				<i>Changes</i> is null.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>This method in conjunction with <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetChanges"/> to synchronize two or more DataWindowControls or DataStores and is
				designed specifically for use in
				.NET remoting applications.  <see cref="T:Sybase.DataWindow.DataWindowChanges"/> is a serializable object allowing DataWindow
				changes made in a client application space to be transferred to a server application where the changes can be applied to
				the backend database.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetChanges"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetFullState(Sybase.DataWindow.DataWindowFullState)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl._SetChanges(Sybase.DataWindow.DataWindowChanges,System.Int32@)">
            <summary>
            This method is designed for DataWindow .NET internal usage only and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetColumn(System.Int16)">
            <overloads>Sets the current column in a DataWindow. </overloads><summary>Sets the current column in a DataWindow given the column number. 
      </summary><param name="ColumnNumber">The column number to be made current.</param><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is not valid.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> cannot be made current, because it is not editable.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Only editable columns, that is columns with a <see cref="P:Sybase.DataWindow.GraphicObjectEditableColumn.TabOrder"/> greater than 0, can be current.
				A <see cref="T:System.InvalidOperationException"/> will occur if you attempt to make a noneditable column the current column.</para>
				<para>
					<b>SetColumn</b> can trigger the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/>, <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/>, 
				and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemFocusChanged"/> events. Calling <b>SetColumn</b> in any of these events could result in an infinite loop.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetColumnNumber"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetColumn(System.String)">
            <summary>Sets the current column in a DataWindow given the column name. 
      </summary><param name="ColumnName">The name of column to be made current.</param><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is not valid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> cannot be made current, because it is not editable.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Only editable columns, that is columns with a <see cref="P:Sybase.DataWindow.GraphicObjectEditableColumn.TabOrder"/> greater than 0, can be current.
				A <see cref="T:System.InvalidOperationException"/> will occur if you attempt to make a noneditable column the current column.</para>
				<para>
					<b>SetColumn</b> can trigger the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/>, <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/>, 
				and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemFocusChanged"/> events. Calling <b>SetColumn</b> in any of these events could result in an infinite loop.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetColumnName"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetColumnValidation(System.Int16,System.String)">
            <overloads>Changes the validation rule for a column in a DataWindow. </overloads><summary>Changes the validation rule for a DataWindow column identified by number. 
      </summary><param name="ColumnNumber">The column number for which you want to set the validation rule.</param><param name="ValidationRule">The new validation rule for the column.</param><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is not valid.</exception><exception cref="T:Sybase.DataWindow.InvalidExpressionException">
				<i>ValidationRule</i> is not a valid boolean DataWindow expression.</exception><exception cref="T:System.ArgumentNullException">
				<i>ValidationRule</i> is null.</exception><exception cref="T:System.NotSupportedException">
				<b>SetColumnValidation</b> is not supported for composite DataWindows.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Validation rules are boolean expressions that usually compare the value in the column's 
         edit control (obtained using <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>) to some other value. 
         When data the user enters fails to meet the criteria 
         established by the validation rule, an <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> event occurs. 
         You can specify validation rules at design time in DataWindow Designer, and you can change the rules in code using 
         <b>SetColumnValidation</b>. A validation rule can include any DataWindow expression function.</para>
				<para>For information about DataWindow expression functions and validation rules, see the 
         DataWindow Designer <i>User's Guide</i>.</para>
			</remarks><example>The following assigns a validation rule to the current column in <c>dwEmployee</c>. The rule ensures 
         that the data entered is greater than zero:
         <code>dwEmployee.SetColumnValidation(dwEmployee.GetColumnNumber(), "Number(GetText( )) &gt; 0")</code>
			</example><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetColumnValidation(System.String)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetColumnValidation(System.String,System.String)">
            <summary>Changes the validation rule for a DataWindow column identified by name. 
      </summary><param name="ColumnName">The column name for which you want to set the validation rule.</param><param name="ValidationRule">The new validation rule for the column.</param><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is not valid.</exception><exception cref="T:Sybase.DataWindow.InvalidExpressionException">
				<i>ValidationRule</i> is not a valid boolean DataWindow expression.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> or <i>ValidationRule</i> is null.</exception><exception cref="T:System.NotSupportedException">
				<b>SetColumnValidation</b> is not supported for composite DataWindows.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Validation rules are boolean expressions that usually compare the value in the column's 
         edit control (obtained using <see cref="M:Sybase.DataWindow.DataWindowControl.GetText"/>) to some other value. 
         When data the user enters fails to meet the criteria 
         established by the validation rule, an <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> event occurs. 
         You can specify validation rules at design time in DataWindow Designer, and you can change the rules in code using 
         <b>SetColumnValidation</b>. A validation rule can include any DataWindow expression function.</para>
				<para>For information about DataWindow expression functions and validation rules, see the 
         DataWindow Designer <i>User's Guide</i>.</para>
			</remarks><example>The following assigns a validation rule to the current column in <c>dwEmployee</c>. The rule ensures 
         that the data entered is greater than zero:
         <code>dwEmployee.SetColumnValidation(dwEmployee.GetColumnName(), "Number(GetText( )) &gt; 0")</code>
			</example><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetColumnValidation(System.String)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetDetailHeight(System.Int32,System.Int32,System.Int32)">
            <summary>Sets the height of each row in the specified range to the specified value. 
      </summary><param name="StartRow">The first row in the range of rows for which you want to set the height.</param><param name="EndRow">The last row in the range of rows for which you want to set the height.</param><param name="NewHeight">The height of the detail area for the specified rows in the <see cref="T:Sybase.DataWindow.Units"/> specified for the DataWindow object.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>StartRow</i> or <i>EndRow</i> is less than 1.</exception><exception cref="T:System.ArgumentException">
				<i>EndRow</i> &lt; <i>StartRow</i>.</exception><exception cref="T:System.ArgumentOutOfRangeException">
				<i>NewHeight</i> is less than 0.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Call <b>SetDetailHeight</b> in code to vary the amount of space assigned to rows in a DataWindow.
			 You cannot specifically set the height for different rows when you define a 
         DataWindow object in DataWindow Designer; however, you can turn on the Autosize Height property 
         for the detail band so that the height of each row is determined by the data.</para>
				<para>You can set the detail 
         height of one or more rows to zero, which hides them from view.</para>
			</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetFilter(System.String)">
            <summary>Sets the filter criteria for a DataWindow.</summary><param name="FilterExpression">A string whose value is a boolean expression.</param><exception cref="T:Sybase.DataWindow.InvalidExpressionException">
				<i>FilterExpression</i> is not a valid boolean DataWindow expression.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><remarks>
				<para>A DataWindow object can have a filter criteria specified as part of its definition. After data is 
         retrieved, rows that do not meet the criteria are immediately transferred from the Primary buffer to the 
         Filter buffer. The <b>SetFilter</b> method replaces any existing filter criteria.</para>
				<para>Rows for which <i>FilterExpression</i> evaluates to <c>false</c> will be moved to the Filter buffer when the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Filter"/>
			method is subsequently invoked.</para>
				<para>
					<i>FilterExpression</i> can consist of columns (identified by name or number), relational operators, 
				and values against which column values 
         are compared. Boolean expressions can be connected with logical operators AND and OR. You can also use NOT, 
         the negation operator. Use parentheses to control the order of evaluation.</para>
				<para>Sample expressions include:</para>
				<list type="bullet">
					<item>
						<c>item_id &gt; 5</c>
					</item>
					<item>
						<c>NOT item_id = 5</c>
					</item>
					<item>
						<c>(NOT item_id = 5) AND customer &gt; "Mabson"</c>
					</item>
					<item>
						<c>item_id &gt; 5 AND customer = "Smith"</c>
					</item>
					<item>
						<c>#1 &gt; 5 AND #2 = "Smith"</c>
					</item>
				</list>
				<para>If you build a <i>FilterExpression</i> in code, enclose string constants in quotation marks, and
				 format numbers using U.S. format (period as decimal separator). </para>
				<para>To remove a filter, call <b>SetFilter</b> with the empty string ("") for format and then call <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Filter"/>.
				 The rows 
         in the filter buffer will be restored to the Primary buffer and positioned after the rows that already exist 
         there.</para>
				<para>To allow users to specify their own filter expression for a DataWindowControl, 
				call <see cref="M:Sybase.DataWindow.DataWindowControl.FilterDialog"/> to display a dialog box allowing for the constructon of a filter expression. 
         Then you can call <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Filter"/> to apply the dynamically constructed expression to the DataWindowControl.
				</para>
			</remarks><example>The following code defines a filter so that rows within <c>dwEmployee</c> display only if the <c>emp_state</c> field
			matches the current value of <c>var1</c>, in this case "ME" for Maine.
         <code>
         [C#]
         string strState;
         strState = "ME";
         dwEmployee.SetFilter("emp_state = '"+ strState +" '");
         dwEmployee.Filter();
         </code>
			</example><seealso cref="M:Sybase.DataWindow.DataWindowControl.SetFilter(System.String)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Filter"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetFullState(Sybase.DataWindow.DataWindowFullState)">
            <summary>Applies the DataWindow state obtained by <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetFullState"/> to another DataWindowControl or DataStore. 
      </summary><param name="FullState">A <see cref="T:Sybase.DataWindow.DataWindowFullState"/> object containing the data and status information to be applied.</param><exception cref="T:System.ArgumentNullException">
				<i>FullState</i> is null.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>
					<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetFullState"/> retrieves the entire state of a DataWindowControl or DataStore including the DataWindow object 
				specification, the data buffers, and the status flags in a format that can be serialized over application boundaries in .NET remoting applications. 
				When you use <b>SetFullState</b> 
         to apply <i>FullState</i>, the target DataWindow has 
         enough information to recreate the source DataWindow. </para>
				<para>Because <i>FullState</i> contains the DataWindow object specification, 
         the call to <b>SetFullState</b> will overwrite the DataWindow object current stored in the targeted DataWindow. 
         If the target of <b>SetFullState</b> does not have a DataWindow object associated with it, the DataWindow object associated 
         with <i>FullState</i> is used. The value of the <see cref="P:Sybase.DataWindow.DataWindowControl.DataWindowObject"/> property remains an empty string (""), however.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetFullState"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetChanges(Sybase.DataWindow.DataWindowChanges)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl._SetFullState(Sybase.DataWindow.DataWindowFullState,System.Int32@)">
            <summary>
            This method is designed for DataWindow .NET internal usage only and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDate(System.Int32,System.Int16,System.DateTime)">
            <overloads>Sets the value of a DataWindow Date column. </overloads><summary>Sets the Date value of a column, identified by number, in the specified row of the Primary buffer. 
      </summary><param name="RowNumber">The row number containing the value to be changed.</param><param name="ColumnNumber">The number of the column whose value is to be changed.</param><param name="DateValue">The new value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not store Date values.</exception><exception cref="T:System.NotSupportedException">
				<b>SetItemDate</b> is not supported for a crosstab DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemDate</b> when you want to set the value of an item in a DataWindow programmatically rather than by user interaction.
			You might do this when the data the user entered fails validation due to datatype or some business rule. 
			Within the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> events, 
         you can call <b>SetItemDate</b> to override the user's erroneous entry with valid data.</para>
				<para>You cannot set a value to null using this method; use <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/> instead.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDateTime(System.Int32,System.Int16,System.DateTime)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDateTime(System.Int32,System.Int16,System.Data.SqlTypes.SqlDateTime)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDate(System.Int32,System.Int16)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDate(System.Int32,System.String,System.DateTime)">
            <summary>Sets the Date value of a column, identified by name, in the specified row of the Primary buffer. 
      </summary><param name="RowNumber">The row number containing the value to be changed.</param><param name="ColumnName">The name of the column whose value is to be changed.</param><param name="DateValue">The new value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not store Date values.</exception><exception cref="T:System.NotSupportedException">
				<b>SetItemDate</b> is not supported for a crosstab DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemDate</b> when you want to set the value of an item in a DataWindow programmatically rather than by user interaction.
			You might do this when the data the user entered fails validation due to datatype or some business rule. 
			Within the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> events, 
         you can call <b>SetItemDate</b> to override the user's erroneous entry with valid data.</para>
				<para>You cannot set a value to null using this method; use <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/> instead.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDateTime(System.Int32,System.Int16,System.DateTime)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDateTime(System.Int32,System.Int16,System.Data.SqlTypes.SqlDateTime)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDate(System.Int32,System.Int16)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDateTime(System.Int32,System.Int16,System.DateTime)">
            <overloads>Sets the value of a DataWindow DateTime column. </overloads><summary>Sets the DateTime value of a column, identified by number, in the specified row of the Primary buffer. 
      </summary><param name="RowNumber">The row number containing the value to be changed.</param><param name="ColumnNumber">The number of the column whose value is to be changed.</param><param name="DateTimeValue">The new value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not store DateTime values.</exception><exception cref="T:System.NotSupportedException">
				<b>SetItemDateTime</b> is not supported for a crosstab DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemDateTime</b> when you want to set the value of an item in a DataWindow programmatically rather than by user interaction.
			You might do this when the data the user entered fails validation due to datatype or some business rule. 
			Within the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> events, 
         you can call <b>SetItemDateTime</b> to override the user's erroneous entry with valid data.</para>
				<para>You cannot set a value to null using this method; use <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/> instead.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDate(System.Int32,System.Int16,System.DateTime)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemTime(System.Int32,System.Int16,System.DateTime)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDateTime(System.Int32,System.Int16,System.Data.SqlTypes.SqlDateTime)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.Int16)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDateTime(System.Int32,System.String,System.DateTime)">
            <summary>Sets the DateTime value of a column, identified by name, in the specified row of the Primary buffer. 
      </summary><param name="RowNumber">The row number containing the value to be changed.</param><param name="ColumnName">The name of the column whose value is to be changed.</param><param name="DateTimeValue">The new value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not store DateTime values.</exception><exception cref="T:System.NotSupportedException">
				<b>SetItemDateTime</b> is not supported for a crosstab DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemDateTime</b> when you want to set the value of an item in a DataWindow programmatically rather than by user interaction.
			You might do this when the data the user entered fails validation due to datatype or some business rule. 
			Within the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> events, 
         you can call <b>SetItemDateTime</b> to override the user's erroneous entry with valid data.</para>
				<para>You cannot set a value to null using this method; use <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/> instead.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDate(System.Int32,System.Int16,System.DateTime)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemTime(System.Int32,System.Int16,System.DateTime)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDateTime(System.Int32,System.Int16,System.Data.SqlTypes.SqlDateTime)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDateTime(System.Int32,System.Int16)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDateTime(System.Int32,System.Int16,System.Data.SqlTypes.SqlDateTime)">
            <overloads>Sets the value of a DataWindow DateTime column. </overloads><summary>Sets the DateTime value of a column, identified by number, in the specified row of the Primary buffer. 
      </summary><param name="RowNumber">The row number containing the value to be changed.</param><param name="ColumnNumber">The number of the column whose value is to be changed.</param><param name="DateTimeValue">The new value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not store DateTime values.</exception><exception cref="T:System.NotSupportedException">
				<b>SetItemSqlDateTime</b> is not supported for a crosstab DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemSqlDateTime</b> when you want to set the value of an item in a DataWindow programmatically rather than by user interaction.
			You might do this when the data the user entered fails validation due to datatype or some business rule. 
			Within the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> events, 
         you can call <b>SetItemSqlDateTime</b> to override the user's erroneous entry with valid data.</para>
				<para>Since SqlTypes support null values, you can set null values directly in lieu of the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/> instead.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDate(System.Int32,System.Int16,System.DateTime)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemTime(System.Int32,System.Int16,System.DateTime)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDateTime(System.Int32,System.Int16,System.DateTime)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDateTime(System.Int32,System.String,System.Data.SqlTypes.SqlDateTime)">
            <summary>Sets the Decimal value of a column, identified by name, in the specified row of the Primary buffer. 
      </summary><param name="RowNumber">The row number containing the value to be changed.</param><param name="ColumnName">The name of the column whose value is to be changed.</param><param name="DateTimeValue">The new value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not store DateTime values.</exception><exception cref="T:System.NotSupportedException">
				<b>SetItemSqlDateTime</b> is not supported for a crosstab DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemSqlDateTime</b> when you want to set the value of an item in a DataWindow programmatically rather than by user interaction.
			You might do this when the data the user entered fails validation due to datatype or some business rule. 
			Within the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> events, 
         you can call <b>SetItemSqlDateTime</b> to override the user's erroneous entry with valid data.</para>
				<para>Since SqlTypes support null values, you can set null values directly in lieu of the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/> instead.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDate(System.Int32,System.Int16,System.DateTime)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemTime(System.Int32,System.Int16,System.DateTime)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDateTime(System.Int32,System.Int16,System.DateTime)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDateTime(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,System.Boolean)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDecimal(System.Int32,System.Int16,System.Decimal)">
            <overloads>Sets the value of a DataWindow Decimal column. </overloads><summary>Sets the Decimal value of a column, identified by number, in the specified row of the Primary buffer. 
      </summary><param name="RowNumber">The row number containing the value to be changed.</param><param name="ColumnNumber">The number of the column whose value is to be changed.</param><param name="DecimalValue">The new value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not store Decimal values.</exception><exception cref="T:System.NotSupportedException">
				<b>SetItemDecimal</b> is not supported for a crosstab DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemDecimal</b> when you want to set the value of an item in a DataWindow programmatically rather than by user interaction.
			You might do this when the data the user entered fails validation due to datatype or some business rule. 
			Within the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> events, 
         you can call <b>SetItemDecimal</b> to override the user's erroneous entry with valid data.</para>
				<para>You cannot set a value to null using this method; use <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/> instead.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDecimal(System.Int32,System.Int16,System.Data.SqlTypes.SqlDecimal)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDecimal(System.Int32,System.Int16)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDecimal(System.Int32,System.String,System.Decimal)">
            <summary>Sets the Decimal value of a column, identified by name, in the specified row of the Primary buffer. 
      </summary><param name="RowNumber">The row number containing the value to be changed.</param><param name="ColumnName">The name of the column whose value is to be changed.</param><param name="DecimalValue">The new value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not store Decimal values.</exception><exception cref="T:System.NotSupportedException">
				<b>SetItemDecimal</b> is not supported for a crosstab DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemDecimal</b> when you want to set the value of an item in a DataWindow programmatically rather than by user interaction.
			You might do this when the data the user entered fails validation due to datatype or some business rule. 
			Within the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> events, 
         you can call <b>SetItemDecimal</b> to override the user's erroneous entry with valid data.</para>
				<para>You cannot set a value to null using this method; use <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/> instead.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDecimal(System.Int32,System.Int16,System.Data.SqlTypes.SqlDecimal)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDecimal(System.Int32,System.Int16)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDecimal(System.Int32,System.Int16,System.Data.SqlTypes.SqlDecimal)">
            <overloads>Sets the value of a DataWindow Decimal column. </overloads><summary>Sets the Decimal value of a column, identified by number, in the specified row of the Primary buffer. 
      </summary><param name="RowNumber">The row number containing the value to be changed.</param><param name="ColumnNumber">The number of the column whose value is to be changed.</param><param name="DecimalValue">The new value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not store Decimal values.</exception><exception cref="T:System.NotSupportedException">
				<b>SetItemSqlDecimal</b> is not supported for a crosstab DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemSqlDecimal</b> when you want to set the value of an item in a DataWindow programmatically rather than by user interaction.
			You might do this when the data the user entered fails validation due to datatype or some business rule. 
			Within the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> events, 
         you can call <b>SetItemSqlDecimal</b> to override the user's erroneous entry with valid data.</para>
				<para>Since SqlTypes support null values, you can set null values directly in lieu of the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/> instead.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDecimal(System.Int32,System.Int16,System.Decimal)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDecimal(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDecimal(System.Int32,System.String,System.Data.SqlTypes.SqlDecimal)">
            <summary>Sets the Decimal value of a column, identified by name, in the specified row of the Primary buffer. 
      </summary><param name="RowNumber">The row number containing the value to be changed.</param><param name="ColumnName">The name of the column whose value is to be changed.</param><param name="DecimalValue">The new value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not store Decimal values.</exception><exception cref="T:System.NotSupportedException">
				<b>SetItemSqlDecimal</b> is not supported for a crosstab DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemSqlDecimal</b> when you want to set the value of an item in a DataWindow programmatically rather than by user interaction.
			You might do this when the data the user entered fails validation due to datatype or some business rule. 
			Within the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> events, 
         you can call <b>SetItemSqlDecimal</b> to override the user's erroneous entry with valid data.</para>
				<para>Since SqlTypes support null values, you can set null values directly in lieu of the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/> instead.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDecimal(System.Int32,System.Int16,System.Decimal)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDecimal(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDouble(System.Int32,System.Int16,System.Double)">
            <overloads>Sets the value of a DataWindow integer or floating point column. </overloads><summary>Sets the value of an integer or floating point column, identified by number, in the specified row of the Primary buffer. 
      </summary><param name="RowNumber">The row number for which you want to set the value.</param><param name="ColumnNumber">The column number for which you want to set the value.</param><param name="DoubleValue">The value to which you want to set the data at the row and column location.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not store numeric values.</exception><exception cref="T:System.NotSupportedException">
				<b>SetItemDouble</b> is not supported for a crosstab DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemDouble</b> when you want to set the value of an item in a DataWindow programmatically rather than by user interaction.
			You might do this when the data the user entered fails validation due to datatype or some business rule. 
			Within the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> events, 
         you can call <b>SetItemDouble</b> to override the user's erroneous entry with valid data.</para>
				<para>If the underlying DataWindow column type is long or ulong, <i>DoubleValue</i> is truncated before being stored in the DataWindow.</para>
				<para>You cannot set a value to null using this method; use <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/> instead.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDouble(System.Int32,System.String,System.Data.SqlTypes.SqlDouble)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDouble(System.Int32,System.Int16)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDouble(System.Int32,System.String,System.Double)">
            <summary>Sets the value of an integer or floating point column, identified by name, in the specified row of the Primary buffer. 
      </summary><param name="RowNumber">The row number for which you want to set the value.</param><param name="ColumnName">The column name for which you want to set the value.</param><param name="DoubleValue">The value to which you want to set the data at the row and column location.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not store numeric values.</exception><exception cref="T:System.NotSupportedException">
				<b>SetItemDouble</b> is not supported for a crosstab DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemDouble</b> when you want to set the value of an item in a DataWindow programmatically rather than by user interaction.
			You might do this when the data the user entered fails validation due to datatype or some business rule. 
			Within the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> events, 
         you can call <b>SetItemDouble</b> to override the user's erroneous entry with valid data.</para>
				<para>If the underlying DataWindow column type is long or ulong, <i>DoubleValue</i> is truncated before being stored in the DataWindow.</para>
				<para>You cannot set a value to null using this method; use <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/> instead.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDouble(System.Int32,System.String,System.Data.SqlTypes.SqlDouble)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemDouble(System.Int32,System.Int16)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDouble(System.Int32,System.String,System.Data.SqlTypes.SqlDouble)">
            <summary>Sets the value of a column, identified by name, in the specified row of the Primary buffer. 
      </summary><param name="RowNumber">The row number containing the value to be changed.</param><param name="ColumnName">The name of the column whose value is to be changed.</param><param name="DoubleValue">The new value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not store numeric values.</exception><exception cref="T:System.NotSupportedException">
				<b>SetItemSqlDouble</b> is not supported for a crosstab DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemSqlDouble</b> when you want to set the value of an item in a DataWindow programmatically rather than by user interaction.
			You might do this when the data the user entered fails validation due to datatype or some business rule. 
			Within the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> events, 
         you can call <b>SetItemSqlDouble</b> to override the user's erroneous entry with valid data.</para>
				<para>If the underlying DataWindow column type is long or ulong, <i>DoubleValue</i> is truncated before being stored in the DataWindow.</para>
				<para>Since SqlTypes support null values, you can set null values directly in lieu of the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/> instead.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDouble(System.Int32,System.Int16,System.Double)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDouble(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDouble(System.Int32,System.Int16,System.Data.SqlTypes.SqlDouble)">
            <overloads>Sets the value of a DataWindow integer or floating point column. </overloads><summary>Sets the value of a column, identified by number, in the specified row of the Primary buffer. 
      </summary><param name="RowNumber">The row number containing the value to be changed.</param><param name="ColumnNumber">The number of the column whose value is to be changed.</param><param name="DoubleValue">The new value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not store numeric values.</exception><exception cref="T:System.NotSupportedException">
				<b>SetItemSqlDouble</b> is not supported for a crosstab DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemSqlDouble</b> when you want to set the value of an item in a DataWindow programmatically rather than by user interaction.
			You might do this when the data the user entered fails validation due to datatype or some business rule. 
			Within the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> events, 
         you can call <b>SetItemSqlDouble</b> to override the user's erroneous entry with valid data.</para>
				<para>If the underlying DataWindow column type is long or ulong, <i>DoubleValue</i> is truncated before being stored in the DataWindow.</para>
				<para>Since SqlTypes support null values, you can set null values directly in lieu of the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/> instead.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDouble(System.Int32,System.Int16,System.Double)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlDouble(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)">
            <overloads>Sets the value of a column to null. </overloads><summary>Sets to null  the value of the column, identified by number, in the specified row of the Primary buffer.
      </summary><param name="RowNumber">The row number containing the column.</param><param name="ColumnNumber">The number of the column to be set to null.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.NotSupportedException"><b>SetItemNull</b> is not supported for crosstab DataWindows.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemNull</b> to set a column value to null before writing it to the database. Alternatively, 
         you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDouble(System.Int32,System.String,System.Data.SqlTypes.SqlDouble)"/>, <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDecimal(System.Int32,System.Int16,System.Data.SqlTypes.SqlDecimal)"/>, <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDateTime(System.Int32,System.Int16,System.Data.SqlTypes.SqlDateTime)"/>, or
         <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlString(System.Int32,System.String,System.Data.SqlTypes.SqlString)"/> method, since they accept System.Data.SqlTypes datatypes, which support the direct assignment of a null
         value.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.String)">
            <summary>Sets to null  the value of the column, identified by number, in the specified row of the Primary buffer.
      </summary><param name="RowNumber">The row number containing the column.</param><param name="ColumnName">The name of the column to be set to null.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.NotSupportedException"><b>SetItemNull</b> is not supported for crosstab DataWindows.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemNull</b> to set a column value to null before writing it to the database. Alternatively, 
         you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDouble(System.Int32,System.String,System.Data.SqlTypes.SqlDouble)"/>, <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDecimal(System.Int32,System.Int16,System.Data.SqlTypes.SqlDecimal)"/>, <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDateTime(System.Int32,System.Int16,System.Data.SqlTypes.SqlDateTime)"/>, or
         <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlString(System.Int32,System.String,System.Data.SqlTypes.SqlString)"/> method, since they accept System.Data.SqlTypes datatypes, which support the direct assignment of a null
         value.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.IsItemNull(System.Int32,System.Int16)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemStatus(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,Sybase.DataWindow.ItemStatus)">
            <overloads>Changes the modification status of a column within a row. </overloads><summary>Changes the modification status of the column, specified by number, within a row. 
      </summary><param name="RowNumber">The row number containing the column.</param><param name="ColumnNumber">The number of the column for which you want to set the status.</param><param name="Buffer">The DataWindow buffer that contains the row.</param><param name="Status">The new <see cref="T:Sybase.DataWindow.ItemStatus"/>.
			</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is not a valid row in <i>Buffer</i>.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> in not valid.</exception><exception cref="T:System.NotSupportedException"><b>SetItemStatus</b> is not supported for crosstab DataWindows.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>
					<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetRowStatus(System.Int32,Sybase.DataWindow.DataBuffer,Sybase.DataWindow.RowStatus)"/> changes the modification status of a row; <b>SetItemStatus</b> changes 
         the modification status of an item within a row.</para>
				<para>When data is retrieved into a DataWindow, all rows and columns initially have a status of NotModified. After 
         data has changed in a column in a particular row, either because the user changed the data or the data was changed 
         programmatically, the item status for that column changes to Modified. Once the status for any column in a row changes to Modified,
          the row status also changes to Modified.</para>
				<para>When a row is inserted into a DataWindow, it initially has a row status of New, and all columns in that 
         row initially have an item status of NotModified. After data has changed in a column in the row, either because 
         the user changed the data or the data was changed programmatically, the item status changes to Modified. Once 
         the status for any column in the inserted row changes to Modified, the row status changes to NewAndModified.
         When a DataWindow column has a default value, the column's item status does not change to Modified until the 
         user makes at least one actual change to a column in that row.</para>
				<para>Use <b>SetItemStatus</b> to change the column's status from Modified to NotModified or vice versa. A column marked as NotModified
				will not be included in any UPDATE statements issued by <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData"/>.</para>
				<para>For more information about setting the status of rows and columns, see the section on updating the 
         database in the <i>DataWindow .NET Programmer's Guide</i>.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetRowStatus(System.Int32,Sybase.DataWindow.DataBuffer,Sybase.DataWindow.RowStatus)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemStatus(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemStatus(System.Int32,System.String,Sybase.DataWindow.DataBuffer,Sybase.DataWindow.ItemStatus)">
            <summary>Changes the modification status of the column, specified by name, within a row. 
      </summary><param name="RowNumber">The row number containing the column.</param><param name="ColumnName">The name of the column for which you want to set the status.</param><param name="Buffer">The DataWindow buffer that contains the row.</param><param name="Status">The new <see cref="T:Sybase.DataWindow.ItemStatus"/>.
			</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is not a valid row in <i>Buffer</i>.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> in not valid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.NotSupportedException"><b>SetItemStatus</b> is not supported for crosstab DataWindows.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>
					<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetRowStatus(System.Int32,Sybase.DataWindow.DataBuffer,Sybase.DataWindow.RowStatus)"/> changes the modification status of a row; <b>SetItemStatus</b> changes 
         the modification status of an item within a row.</para>
				<para>When data is retrieved into a DataWindow, all rows and columns initially have a status of NotModified. After 
         data has changed in a column in a particular row, either because the user changed the data or the data was changed 
         programmatically, the item status for that column changes to Modified. Once the status for any column in a row changes to Modified,
          the row status also changes to Modified.</para>
				<para>When a row is inserted into a DataWindow, it initially has a row status of New, and all columns in that 
         row initially have an item status of NotModified. After data has changed in a column in the row, either because 
         the user changed the data or the data was changed programmatically, the item status changes to Modified. Once 
         the status for any column in the inserted row changes to Modified, the row status changes to NewAndModified.
         When a DataWindow column has a default value, the column's item status does not change to Modified until the 
         user makes at least one actual change to a column in that row.</para>
				<para>Use <b>SetItemStatus</b> to change the column's status from Modified to NotModified or vice versa. A column marked as NotModified
				will not be included in any UPDATE statements issued by <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData"/>.</para>
				<para>For more information about setting the status of rows and columns, see the section on updating the 
         database in the <i>DataWindow .NET Programmer's Guide</i>.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetRowStatus(System.Int32,Sybase.DataWindow.DataBuffer,Sybase.DataWindow.RowStatus)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemStatus(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemString(System.Int32,System.Int16,System.String)">
            <overloads>Sets the value of a DataWindow String column. </overloads><summary>Sets the String value of a column, identified by number, in the specified row of the Primary buffer. 
      </summary><param name="RowNumber">The row number containing the value to be changed.</param><param name="ColumnNumber">The number of the column whose value is to be changed.</param><param name="StringValue">The new value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not store String values.</exception><exception cref="T:System.NotSupportedException">
				<b>SetItemString</b> is not supported for a crosstab DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemString</b> when you want to set the value of an item in a DataWindow programmatically rather than by user interaction.
			You might do this when the data the user entered fails validation due to datatype or some business rule. 
			Within the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> events, 
         you can call <b>SetItemString</b> to override the user's erroneous entry with valid data.</para>
				<para>You cannot set a value to null using this method; use <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/> instead.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlString(System.Int32,System.String,System.Data.SqlTypes.SqlString)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemString(System.Int32,System.Int16)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemString(System.Int32,System.String,System.String)">
            <summary>Sets the String value of a column, identified by name, in the specified row of the Primary buffer. 
      </summary><param name="RowNumber">The row number containing the value to be changed.</param><param name="ColumnName">The name of the column whose value is to be changed.</param><param name="StringValue">The new value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not store String values.</exception><exception cref="T:System.NotSupportedException">
				<b>SetItemString</b> is not supported for a crosstab DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemString</b> when you want to set the value of an item in a DataWindow programmatically rather than by user interaction.
			You might do this when the data the user entered fails validation due to datatype or some business rule. 
			Within the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> events, 
         you can call <b>SetItemString</b> to override the user's erroneous entry with valid data.</para>
				<para>You cannot set a value to null using this method; use <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/> instead.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlString(System.Int32,System.String,System.Data.SqlTypes.SqlString)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemString(System.Int32,System.Int16)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlString(System.Int32,System.String,System.Data.SqlTypes.SqlString)">
            <summary>Sets the String value of a column, identified by name, in the specified row of the Primary buffer. 
      </summary><param name="RowNumber">The row number containing the value to be changed.</param><param name="ColumnName">The name of the column whose value is to be changed.</param><param name="StringValue">The new value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not store String values.</exception><exception cref="T:System.NotSupportedException">
				<b>SetItemSqlString</b> is not supported for a crosstab DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemSqlString</b> when you want to set the value of an item in a DataWindow programmatically rather than by user interaction.
			You might do this when the data the user entered fails validation due to datatype or some business rule. 
			Within the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> events, 
         you can call <b>SetItemSqlString</b> to override the user's erroneous entry with valid data.</para>
				<para>Since SqlTypes support null values, you can set null values directly in lieu of the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/> instead.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemString(System.Int32,System.Int16,System.String)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlString(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlString(System.Int32,System.Int16,System.Data.SqlTypes.SqlString)">
            <overloads>Sets the value of a DataWindow String column. </overloads><summary>Sets the String value of a column, identified by number, in the specified row of the Primary buffer. 
      </summary><param name="RowNumber">The row number containing the value to be changed.</param><param name="ColumnNumber">The number of the column whose value is to be changed.</param><param name="StringValue">The new value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not store String values.</exception><exception cref="T:System.NotSupportedException">
				<b>SetItemSqlString</b> is not supported for a crosstab DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemSqlString</b> when you want to set the value of an item in a DataWindow programmatically rather than by user interaction.
			You might do this when the data the user entered fails validation due to datatype or some business rule. 
			Within the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> events, 
         you can call <b>SetItemSqlString</b> to override the user's erroneous entry with valid data.</para>
				<para>Since SqlTypes support null values, you can set null values directly in lieu of the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/> instead.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemString(System.Int32,System.Int16,System.String)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemSqlString(System.Int32,System.String,Sybase.DataWindow.DataBuffer,System.Boolean)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemTime(System.Int32,System.Int16,System.DateTime)">
            <overloads>Sets the value of a DataWindow Time column. </overloads><summary>Sets the Time value of a column, identified by number, in the specified row of the Primary buffer. 
      </summary><param name="RowNumber">The row number containing the value to be changed.</param><param name="ColumnNumber">The number of the column whose value is to be changed.</param><param name="TimeValue">The new value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnNumber</i> is invalid.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnNumber</i> does not store Time values.</exception><exception cref="T:System.NotSupportedException">
				<b>SetItemTime</b> is not supported for a crosstab DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemTime</b> when you want to set the value of an item in a DataWindow programmatically rather than by user interaction.
			You might do this when the data the user entered fails validation due to datatype or some business rule. 
			Within the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> events, 
         you can call <b>SetItemTime</b> to override the user's erroneous entry with valid data.</para>
				<para>You cannot set a value to null using this method; use <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/> instead.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDateTime(System.Int32,System.Int16,System.DateTime)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDateTime(System.Int32,System.Int16,System.Data.SqlTypes.SqlDateTime)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemTime(System.Int32,System.Int16)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemTime(System.Int32,System.String,System.DateTime)">
            <summary>Sets the Time value of a column, identified by name, in the specified row of the Primary buffer. 
      </summary><param name="RowNumber">The row number containing the value to be changed.</param><param name="ColumnName">The name of the column whose value is to be changed.</param><param name="TimeValue">The new value.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is invalid.</exception><exception cref="T:Sybase.DataWindow.InvalidColumnException">
				<i>ColumnName</i> is invalid.</exception><exception cref="T:System.ArgumentNullException">
				<i>ColumnName</i> is null.</exception><exception cref="T:System.InvalidOperationException">
				<i>ColumnName</i> does not store Time values.</exception><exception cref="T:System.NotSupportedException">
				<b>SetItemTime</b> is not supported for a crosstab DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Use <b>SetItemTime</b> when you want to set the value of an item in a DataWindow programmatically rather than by user interaction.
			You might do this when the data the user entered fails validation due to datatype or some business rule. 
			Within the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/> and <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> events, 
         you can call <b>SetItemTime</b> to override the user's erroneous entry with valid data.</para>
				<para>You cannot set a value to null using this method; use <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemNull(System.Int32,System.Int16)"/> instead.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemDateTime(System.Int32,System.Int16,System.DateTime)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemSqlDateTime(System.Int32,System.Int16,System.Data.SqlTypes.SqlDateTime)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetItemTime(System.Int32,System.Int16)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetProperty(System.String,System.String)">
            <summary>Sets the value of a DataWindow object property.</summary><param name="Property">The property you want to modify.</param><param name="Value">The value to which you want to set the property, converted to a string.</param><exception cref="T:System.ArgumentNullException">
				<i>Property</i> or <i>Value</i> is null.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">
				<i>Property</i> or <i>Value</i> is invalid, or an unexpected error has occurred.</exception><remarks>
				<para>You can only set one property at a time with the <b>SetProperty</b> method, while the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Modify(System.String)"/> method 
         lets you supply multiple properties in a single invocation. Some commonly used properties are also exposed on various descendants
         of the <see cref="T:Sybase.DataWindow.GraphicObject"/> classes and can be set directly.  For example, the following code fragments are 
         semantically equivalent:</para>
				<list type="bullet">
					<item>
						<c>dwReport.SetProperty("t_1.background.color", "0~tRGB(0,255,0)")</c>
					</item>
					<item>
						<c>dwReport.Modify("t_1.background.color='0~tRGB(0,255,0)'")</c>
					</item>
					<item>
						<c>Dim gobText as Sybase.DataWindow.GraphicObjectText</c>
        				<c>gobText = CObj(dwEmp.GetObjectByName("t_1"))</c>
        				<c>gobText.BackgroundColor = System.Drawing.Color.Lime</c>
					</item>
				</list>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Modify(System.String)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetProperty(System.String)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetRow(System.Int32)">
            <summary>Sets the current row in a DataWindow. 
      </summary><param name="RowNumber">The row you want to make current.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is not valid.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>
					<b>SetRow</b> sets the <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.CurrentRow"/> property. For a DataWindowControl, the cursor moves to the
			current column at <i>RowNumber</i>, but the DataWindow is not scrolled automatically.  Use <see cref="M:Sybase.DataWindow.DataWindowControl.ScrollToRow(System.Int32)"/> 
			passing <i>RowNumber</i> to ensure the row is visible to the user.</para>
				<para>
					<b>SetRow</b> can trigger the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/>, 
         <see cref="E:Sybase.DataWindow.DataWindowControl.ItemError"/>,
         <see cref="E:Sybase.DataWindow.DataWindowControl.ItemFocusChanged"/>,
         <see cref="E:Sybase.DataWindow.DataWindowControl.RowFocusChanging"/>, and
         <see cref="E:Sybase.DataWindow.DataWindowControl.RowFocusChanged"/> event. Do not call <b>SetRow</b> 
         in any of these events, because a recursive call can cause a stack fault.</para>
			</remarks><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.CurrentRow"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetRowFocusIndicator(Sybase.DataWindow.RowFocusIndicator)">
            <summary>Specifies a stock hand image (positioned at the upper-left corner of the row) or rectangle as focus indicator to identify the current row in a WebDataWindowControl, or removes the row focus indicator.</summary><param name="Indicator">The <see cref="T:Sybase.DataWindow.RowFocusIndicator"/>.</param><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
		You can specify a stock hand image(positioned at the upper-left corner of the row) as focus indicator by using RowFocusIndicator.Hand as the value of <i>Indicator</i>,
		or specify a dotted rectangle surrounding the row by using RowFocusIndicator.Rectangle as the value of <i>Indicator</i>, or that there be no focus indicator by using
		RowFocusIndicator.None as the value of <i>Indicator</i>.
		</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetRowFocusIndicator(Sybase.DataWindow.RowFocusIndicator,System.Drawing.Point)">
            <!-- No matching elements were found for the following include tag --><include file="WebDataWindowComments.xml" path="doc/members/member[@name=&quot;M:SetRowFocusIndicator(RowFocusIndicator,Point)&quot;]/*"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetRowFocusIndicator(System.String)">
            <summary>Specifies the url of the image used to identify the current row in a WebDataWindowControl. 
		</summary><param name="IndicatorImageUrl">The url of the image to be used as the visual indicator.</param><exception cref="T:System.ArgumentNullException">
			<i>IndicatorImageUrl</i> is null.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
			<i>IndicatorImageUrl</i> is positioned at the upper-left corner of the row.
		</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetRowFocusIndicator(System.String,System.Drawing.Point)">
            <summary>Specifies the url of the image and its position to identify the current row in a WebDataWindowControl. 
		</summary><param name="IndicatorImageUrl">The url of the image to be used as the visual indicator.</param><param name="Location">The location of <i>IndicatorImageUrl</i> relative to the upper-left corner of the row.</param><exception cref="T:System.ArgumentNullException">
			<i>IndicatorImageUrl</i> is null.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
			<para>
				<i>IndicatorImageUrl</i> is placed relative to the upper-left corner of the row and shited according to <i>Location</i>. The X and Y components of 
				<i>Location</i> must be expressed as pixel.
			</para>
			</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetRowStatus(System.Int32,Sybase.DataWindow.DataBuffer,Sybase.DataWindow.RowStatus)">
            <summary>Changes the modification status of a row. 
      </summary><param name="RowNumber">The row number for which you want to set the status.</param><param name="Buffer">The DataWindow buffer that contains the row.</param><param name="Status">The new <see cref="T:Sybase.DataWindow.RowStatus"/>.</param><exception cref="T:Sybase.DataWindow.InvalidRowNumberException">
				<i>RowNumber</i> is not a valid row in <i>Buffer</i>.</exception><exception cref="T:System.NotSupportedException"><b>SetRowStatus</b> is not supported for crosstab DataWindows.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>
					<b>SetRowStatus</b> changes the modification status of a row; <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemStatus(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,Sybase.DataWindow.ItemStatus)"/> changes 
         the modification status of an item within a row.</para>
				<para>When data is retrieved into a DataWindow, all rows and columns initially have a status of NotModified. After 
         data has changed in a column in a particular row, either because the user changed the data or the data was changed 
         programmatically, the item status for that column changes to Modified. Once the status for any column in a row changes to Modified,
          the row status also changes to Modified.</para>
				<para>When a row is inserted into a DataWindow, it initially has a row status of New, and all columns in that 
         row initially have an item status of NotModified. After data has changed in a column in the row, either because 
         the user changed the data or the data was changed programmatically 
         (not including the assignment of a default value), the item status changes to Modified. 
          Once 
         the status for any column in an inserted row changes to Modified, the row status changes to NewAndModified.
</para>
				<para>Changing the row status to NotModified will change the item status of all columns in that row to NotModified.</para>
				<para>Use <b>SetRowStatus</b> when you want to change the way a row will be updated. Typically, you do this to 
         prevent the default behavior from taking place. For example, you might copy a row from one DataWindow 
         to another. After the user modifies the row, you would want to issue an UPDATE statement instead of an 
         INSERT statement, since the row already exists in the database. To do so, you would change the row status of the copied row from NewAndModified to just Modified, signalling <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData"/>
         to generate an UPDATE rather than an INSERT statement.</para>
				<para>For more information about setting the status of rows and columns, see the section on updating the 
         database in the <i>DataWindow .NET Programmer's Guide</i>.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetItemStatus(System.Int32,System.Int16,Sybase.DataWindow.DataBuffer,Sybase.DataWindow.ItemStatus)"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetRowStatus(System.Int32,Sybase.DataWindow.DataBuffer)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetSort(System.String)">
            <summary>Specifies the sort criteria for a DataWindow control or DataStore. 
      </summary><param name="SortExpression">A string whose value is valid sort expression for the DataWindow.</param><exception cref="T:Sybase.DataWindow.InvalidExpressionException">
				<i>SortExpression</i> is not valid</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>A DataWindow object can have sort criteria specified as part of its definition. <b>SetSort</b> overrides 
         the definition, providing new sort criteria for the DataWindow; however, it does not actually sort the rows. 
         Call the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Sort"/> method to perform the actual sorting.</para>
				<para>
					<i>SortExpression</i> can have one of the forms shown below, depending on whether 
         you specify the column by name or number. (Column numbers must be prefaced by #). <c>Order</c> is either <c>A</c> for ascending or <c>D</c> for descending order. You can 
         specify secondary sorting by specifying criteria for additional columns in the format string. Separate each 
         column specification with a comma.</para>
				<list type="bullet">
					<item>
						<c>columnname order</c>, for instance: <c>"emp_lname A"</c> or <c>"emp_lname A, dept_id D"</c>
					</item>
					<item>
						<c>#columnnumber order</c>, for instance: <c>"#3 A"</c>
					</item>
				</list>
				<para>To allow users to specify their own sort expression for a DataWindowControl, 
				call <see cref="M:Sybase.DataWindow.DataWindowControl.SortDialog"/> to display a dialog box allowing for the construction of the expression. 
         Then you can call <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Sort"/> to apply the dynamically constructed expression to the DataWindowControl.
				</para>
			</remarks><seealso cref="M:Sybase.DataWindow.DataWindowControl.SortDialog"/><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Sort"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetSqlUpdate(System.String)">
            <summary>Specifies the SQL statement that is about to be sent to the database by a DataWindowControl or DataStore. 
      </summary><param name="SqlSyntax">The SQL syntax to be submitted to the database.</param><exception cref="T:System.ArgumentNullException">
				<i>SqlSyntax</i> is null.</exception><exception cref="T:System.NotSupportedException">
				<b>SetSqlUpdate</b> was invoked outside of the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.SqlPreview"/> event.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>Use <b>SetSqlUpdate</b> to modify SQL syntax before it is sent to the database. This method can only be
			called within the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.SqlPreview"/> event, where the SQL statement is made available via the 
			SqlSyntax property of <see cref="T:Sybase.DataWindow.SqlPreviewEventArgs"/>. 
      </remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetSqlSelect(System.String)">
            <summary>Specifies the SQL SELECT statement for a DataWindowControl or DataStore.</summary><param name="SqlSyntax">The SQL SELECT syntax</param><exception cref="T:System.InvalidOperationException">
				<see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetTransaction(Sybase.DataWindow.AdoTransaction)"/> has not been executed.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>You must <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetTransaction(Sybase.DataWindow.AdoTransaction)"/> method to set the transaction object before invoking <b>SetSqlSelect</b>, or
				an exception will result.</para>
				<para>Use <b>SetSqlSelect</b> to dynamically change the SQL SELECT statement for a DataWindow.
         If the DataWindow is updatable, the SELECT statement is validated against the database 
         and the DataWindow column specifications. Each column in the SQL SELECT 
         statement must match the column type in the DataWindow object.</para>
				<para>Use <b>SetSqlSelect</b> only if the data source for the DataWindow object is a SQL SELECT statement without 
         retrieval arguments.  You can use <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Modify(System.String)"/> or <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetProperty(System.String,System.String)"/> 
         with the <c>DataWindow.Table.Select</c> property
          when retrieval arguments are involved; however, no validation of the SQL statement will occur, making this technique more
          error prone.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetSqlSelect"/><seealso cref="M:Sybase.DataWindow.DataWindowControl.SetSqlUpdate(System.String)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetTransaction(Sybase.DataWindow.AdoTransaction)">
            <summary>Associates a DataWindow with an ADO.NET database connection.
      </summary><param name="AdoTransaction">The <see cref="T:Sybase.DataWindow.AdoTransaction"/> instance referencing the database connection.</param><exception cref="T:System.InvalidOperationException">
				<i>AdoTransaction</i> has not been bound to an ADO.NET connection.</exception><exception cref="T:System.ArgumentNullException">
				<i>AdoTransaction</i> is null.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>In a DataWindow database connection, <i>AdoTransaction</i> is an object that functions 
         as the communications area between the DataWindow and the database. <i>AdoTransaction</i> specifies the 
         parameters for connecting to a database and is a prerequisite for accessing a 
         database via DataWindow .NET using ADO.NET.</para>
				<para>To connect to a database using an ADO.NET connection, you perform the following general steps:
         <list type="number">
						<item>Create a new ADO.NET IDbConnection reference and set its properties. In the initial release of DataWindow .NET, only 
         			<see cref="T:System.Data.OleDb.OleDbConnection"/> is supported.</item>
						<item>Open the connection.</item>
						<item>Create an <see cref="T:Sybase.DataWindow.AdoTransaction"/> object passing the IDBConnection
						reference to its constructor.</item>
						<item>
							<see cref="M:Sybase.DataWindow.AdoTransaction.BindConnection"/> the ADO.NET connection to the internal DataWindow .NET
         database interaction layer.</item>
						<item>Call <b>SetTransaction</b> to associate the transaction with a DataWindow.</item>
						<item>Perform various database operations, such as <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Retrieve(System.Data.DataTable)"/> and <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData"/>.</item>
						<item>Close the ADO.NET connection.</item>
					</list>
				</para>
			</remarks><example>This C# example retrieves and updates a simple DataStore using an ADO.NET connection to Adaptive Server Anywhere 
			(exception handling has been omitted for brevity) :
         <code>
         System.Data.OleDbConnection oleDbConn = new System.Data.OleDb.OleDbConnection();
         oleDbConn.ConnectionString="User ID=dba;Password=sql;Data Source=mydb;Provider=ASAProv.90";
         oleDbConn.Open();
         
         Sybase.DataWindow.AdoTransaction adoTrans = new Sybase.DataWindow.AdoTransaction(oleDbConn);
         adoTrans.BindConnection();
         
         Sybase.DataWindow.DataStore ds = new Sybase.DataWindow.DataStore("hr.pbl","employees");
         ds.SetTransaction(adoTrans);
         ds.Retrieve();
         
         adoTrans.Transaction = adoTrans.Connection.BeginTransaction();
         ds.SetItemString(1,2,"New Hire");
         ds.UpdateData();
         adoTrans.Transaction.Commit();
         
         adoTrans.Connection.Close();
         </code>
			</example><seealso cref="M:Sybase.DataWindow.AdoTransaction.BindConnection"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetTransaction(Sybase.DataWindow.Transaction)">
            <overloads>Associates a DataWindow with a physical database connection.</overloads><summary>Associates a DataWindow with a database connection made via a native DataWindow .NET database connection.
      </summary><param name="Transaction">The <see cref="T:Sybase.DataWindow.Transaction"/> instance referencing the database connection.</param><exception cref="T:System.ArgumentNullException">
				<i>Transaction</i> is null.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>In a DataWindow database connection, <i>Transaction</i> is an object that functions 
         as the communications area between the DataWindow and the database. <i>Transaction</i> specifies the 
         parameters for connecting to a database and is a prerequisite for accessing a 
         database via DataWindow .NET when using Sybase-provided database interfaces. <note>You cannot use a
         <see cref="T:Sybase.DataWindow.Transaction"/> to access the database outside of a DataWindow .NET method.  You can do this using
         the <see cref="T:Sybase.DataWindow.AdoTransaction"/> class, however.</note>
				</para>
				<para>The following general steps apply: 
         <list type="number">
						<item>Create a <see cref="T:Sybase.DataWindow.Transaction"/> object instance. </item>
						<item>Set its properties.</item>
						<item>
							<see cref="M:Sybase.DataWindow.Transaction.Connect"/> to the database.</item>
						<item>Call <b>SetTransaction</b> to associate object to a DataWindow.</item>
						<item>Perform various database operations, such as <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Retrieve(System.Data.DataTable)"/> and <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData"/>.</item>
						<item>
							<see cref="M:Sybase.DataWindow.Transaction.Disconnect"/> from the database. </item>
					</list>
				</para>
			</remarks><example>This example connects to the database using the Sybase-provided ODBC interface and uses that connection to 
			retrieve the <c>dwDepartment</c> DataWindowControl:
         <code>
         sqlca = new Sybase.DataWindow.Transaction;
         sqlca.Dbms = Sybase.DataWindow.DbmsType.Odbc;
         sqlca.DbParameter = "ConnectString='DSN=EAS Demo DB V10;UID=dba;PWD=sql'";
         try
         {
         	sqlca.Connect();
         	dwDepartment.SetTransaction(sqlca);
        		dwDepartment.Retrieve();
         } catch (System.Exception ex) {
         	HandleException(ex);
         }
         </code>
			</example>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetWSConnection(Sybase.DataWindow.WebServiceConnection)">
            <summary>Specifies overrides for a DataWindow or DataStore's web service connection</summary><param name="wsObject">The <see cref="T:Sybase.DataWindow.WebServiceConnection"/> containing the override values.</param>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.Sort">
            <summary>Sorts the rows in a DataWindow using the current sort criteria. 
      </summary><exception cref="T:System.NotSupportedException">
				<b>Sort</b> is not supported for a composite DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>To change the sort criteria from the default specified in DataWindow Designer, use
         <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetSort(System.String)"/> or <see cref="M:Sybase.DataWindow.DataWindowControl.SortDialog"/> (the latter
         for DataWindowControls only).</para>
				<para>When the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Retrieve(System.Data.DataTable)"/> method retrieves data for the DataWindow, it automatically applies the current
				sort criteria. You only need to call <b>Sort</b> after you 
         change the criteria or if the data have changed because of processing or user input.</para>
				<para>After sorting a DataWindow object that includes groups, 
         call <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.CalculateGroups"/> to ensure the groupings take into account changes in the sort order.</para>
				<para>When the Retrieve As Needed DataWindow object property is set, <b>Sort</b> method cancels its effect, because 
         all rows must be retrieved to be sorted correctly.</para>
				<para>When you sort a DataWindow on a specified column, rows with null data remain at the top, regardless of 
         whether you choose ascending or descending order for your sort criteria.</para>
				<para>The sort order is performed 
         on a result set returned from a database, but is not necessarily the same sort order used by the database 
          when an ORDER BY clause is used in a SQL query.</para>
				<para>
					<b>Sort</b> method uses a typical 
         lexical sort, with symbols, such as a hyphen or underline, ranked higher than alphanumeric characters.</para>
			</remarks><example>This example sort <c>dwEmployee</c> by column 1 in ascending order.  Rows with identical values in the first column
			are further sorted by column 2 in descending order:
         <code>
         dwEmployee.SetSort("#1 A, #2 D")
         dwEmployee.Sort()
         </code>
			</example><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetSort(System.String)"/><seealso cref="M:Sybase.DataWindow.DataWindowControl.SortDialog"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.ShareData(Sybase.DataWindow.IDataWindowBase)">
            <summary>Shares data retrieved by one DataWindow which is referred with another DataWindow</summary><param name="TargetDW">The (secondary) DataWindow that will share the primary DataWindow's data.</param><exception cref="T:System.ArgumentException">Primary DataWindow cannot be shared with <i>TargetDW</i> due to 
			incompatible formats.</exception><exception cref="T:System.ArgumentNullException">
				<i>TargetDW</i> is null.</exception><exception cref="T:System.NotSupportedException">Crosstab and composite DataWindows cannot be shared, nor can the initiator of <b>ShareData</b>
			be a DataWindowChild nested in composite DataWindow.</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>The primary and secondary DataWindows do not share formatting; only the data is shared, including data in the
         Primary, Delete buffer, and Filter buffer, as well as the sort criteria. The columns must be the same for the 
         DataWindow objects, but the SELECT statements can be different. For example, you could share data among DataWindow objects with 
         these SELECT statements:</para>
				<list type="bullet">
					<item>
						<c>SELECT dept_id from dept</c>
					</item>
					<item>
						<c>SELECT dept_id from dept where dept_id = 200</c>
					</item>
					<item>
						<c>SELECT dept_id from employee</c>
					</item>
				</list>
				<para>The WHERE clause in the DataWindow object of <i>TargetDW</i> has no effect on the 
         number of rows returned. The number of rows returned to both DataWindow controls is determined by the 
         WHERE clause in the DataWindow which invoked <b>ShareData</b>.</para>
				<para>When you call methods in either the primary or secondary DataWindow that change the data, 
         messages normally associated with the method are routed to the primary DataWindow 
          and all secondary DataWindows are affected. Such methods include:
         DeleteRow, Filter, FilterDialog, GetSqlSelect, ImportFile, ImportString, ImportClipboard, InsertRow, ReselectRow,
         Reset, Retrieve, SetFilter, SetSort, SetSqlSelect, Sort, SortrDialog, and UpdateData.</para>
				<para>
					<b>ShareData</b> does not automatically share data among DropDownDataWindows
				 in the primary or secondary DataWindows. You must do this explicitly by getting a handle to the DropDownDataWindow 
         using <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetChild(System.String)"/> and either retrieving the DropDownDataWindow or using <b>ShareData</b>
         to share data from an appropriate data source with the DropDownDataWindow.</para>
				<para>To turn off sharing in a primary or secondary DataWindow, call the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ShareDataOff"/> method. When 
         sharing is turned off for the primary DataWindow, the secondary DataWindows are disconnected and 
         the data disappears. However, turning off sharing for a secondary DataWindow does not affect the 
         data in the primary DataWindow or other secondary DataWindows.</para>
				<para>You cannot use <b>ShareData</b> to share data among application boundaries, <see cref="M:Sybase.DataWindow.IDataStore.GetFullState"/>
				for information on how to manage DataWindows in .NET remoting applications.</para>
				<para>Trying to set 
         the QueryMode or QuerySort DataWindow object properties on a secondary DataWindow is not supported and
         results in an exception.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ShareDataOff"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.ShareDataOff">
            <summary>Turns off the sharing of data buffers for a DataWindow.</summary><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>When you call <b>ShareDataOff</b> for a secondary 
         DataWindow, that control no longer contains data, but the primary DataWindow and other secondary controls 
         are not affected. When you call <b>ShareDataOff</b> for the primary DataWindow, all secondary DataWindows are 
         disconnected and no longer contain data. 
      </remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ShareData(Sybase.DataWindow.IDataWindowBase)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData">
            <overloads>Updates the database with the changes made in a DataWindow.</overloads><summary>Updates the database with the changes made in a DataWindow and automatically clears the status flags.</summary><exception cref="T:Sybase.DataWindow.DbErrorException">A database error has occurred.</exception><exception cref="T:System.InvalidOperationException">
				<list type="bullet">
					<item>The DataWindow is not updatable, or</item>
					<item>the associated <see cref="T:Sybase.DataWindow.Transaction"/> or <see cref="T:Sybase.DataWindow.AdoTransaction"/> is not 
				connected to the database.</item>
				</list>
			</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>This overload of <b>UpdateData</b> resets the row and item status flags after successfully completing the update. 
				However, you 
         can prevent the flags from being reset until you perform other validations and commit the changes by
         calling one of the overloaded versions of <b>UpdateData</b> and setting the <i>ResetUpdateFlags</i> argument to <c>false</c>. You would then
         later call <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ResetUpdateStatus"/> to explicitly refresh the status flags. 
         </para>
				<para>
         For DataWindowControls, this version of <b>UpdateData</b> performs an implicit
          <see cref="M:Sybase.DataWindow.DataWindowControl.AcceptText"/> operation on the data within the edit control when the method is 
          invoked.  This ensures that pending data is moved from the edit control to the Primary buffer before the database 
          update occurs. Overloaded versions of this method allow you to change that behavior.</para>
				<para>Do not call this version of <b>UpdateData</b> in the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/> event.
         The implicit <see cref="M:Sybase.DataWindow.DataWindowControl.AcceptText"/> will trigger another ItemChanged event leading to
         a recursive loop and likely a stack fault.</para>
				<!-- CHECK ON THIS - SEEMS LIKE A BUG?
				<para>If a DataWindowControl or DataStore is populated using SetChanges or SetFullState, and an UpdateData is done that 
         includes deleted rows, the deleted rows remain in the delete buffer until a subsequent GetChanges is applied 
         to the DataWindow or DataStore.</para>
         -->
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetTransaction(Sybase.DataWindow.AdoTransaction)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData(System.Boolean)">
            <summary>Updates the database with the changes made in a DataWindow, optionally accepting a pending change in the edit control.</summary><param name="AcceptData">
				<c>true</c> if an <see cref="M:Sybase.DataWindow.DataWindowControl.AcceptText"/> should be 
			performed prior to the update, false otherwise.</param><exception cref="T:Sybase.DataWindow.DbErrorException">A database error has occurred.</exception><exception cref="T:System.InvalidOperationException">
				<list type="bullet">
					<item>The DataWindow is not updatable, or</item>
					<item>the associated <see cref="T:Sybase.DataWindow.Transaction"/> or <see cref="T:Sybase.DataWindow.AdoTransaction"/> is not 
				connected to the database.</item>
				</list>
			</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>Since <see cref="M:Sybase.DataWindow.DataWindowControl.AcceptText"/> applies only to DataWindowControls, this overload is 
				identical to the parameterless version of <b>UpdateData</b> when invoked on a DataStore or DataWindowChild.</para>
				<para>Use this version of <b>UpdateData</b> to ignore any pending changes in the DataWindowControl's edit control
				before performing the update. Changes in the edit control are automatically validated when the user moves from 
				column to column within the control;
				however, if focus leaves the DataWindowControl completely (for instance, a command button is pressed) the last changes made
				in the edit control are not automatically applied to the Primary buffer.  If you want that data to be included in the update, 
				set <i>AcceptData</i> to <c>true</c> (or use the parameterless version of <b>UpdateData</b>).</para>
				<para>If you call <b>UpdateData</b> in the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/>
				event, be sure to set the <i>AcceptData</i> argument to <c>false</c> to 
         avoid an endless loop and a stack fault. If you call <b>UpdateData</b> in that event, the item's old value will be applied
         , not the newly entered value; the new value is not in place until the event completes.
           If you want to include the new value, use an appropriate SetItem method within the event script.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetTransaction(Sybase.DataWindow.AdoTransaction)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.UpdateData(System.Boolean,System.Boolean)">
            <summary>Updates the database with the changes made in a DataWindow, optionally accepting a pending change in the edit control and
			resetting status flags.</summary><param name="AcceptData">
				<c>true</c> if an <see cref="M:Sybase.DataWindow.DataWindowControl.AcceptText"/> should be 
			performed prior to the update, false otherwise.</param><param name="ResetUpdateFlags">
				<c>true</c> if an row and item status flags should be automatically reset, <c>false</c> if they should
			be retained.</param><exception cref="T:Sybase.DataWindow.DbErrorException">A database error has occurred.</exception><exception cref="T:System.InvalidOperationException">
				<list type="bullet">
					<item>The DataWindow is not updatable, or</item>
					<item>the associated <see cref="T:Sybase.DataWindow.Transaction"/> or <see cref="T:Sybase.DataWindow.AdoTransaction"/> is not 
				connected to the database.</item>
				</list>
			</exception><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>
				<para>You can use this version of <b>UpdateData</b> to ignore any pending changes in the DataWindowControl's edit control
				before performing the update. Changes in the edit control are automatically validated when the user moves from 
				column to column within the control;
				however, if focus leaves the DataWindowControl completely (for instance, a command button is pressed) the last changes made
				in the edit control are not automatically applied to the Primary buffer.  If you want that data to be included in the update, 
				set <i>AcceptData</i> to <c>true</c> (or use the parameterless version of <b>UpdateData</b>).</para>
				<para>If you call <b>UpdateData</b> in the <see cref="E:Sybase.DataWindow.DataWindowControl.ItemChanged"/>
				event, be sure to set the <i>AcceptData</i> argument to <c>false</c> to 
         avoid an endless loop and a stack fault. If you call <b>UpdateData</b> in that event, the item's old value will be applied
         , not the newly entered value; the new value is not in place until the event completes.
           If you want to include the new value, use an appropriate SetItem method within the event script.</para>
				<para>If you want to update several tables in one DataWindow, you can use <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.Modify(System.String)"/> or <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetProperty(System.String,System.String)"/>
				to change the Update property of columns in each table. To preserve the status flags of the rows and columns, set 
         <i>ResetUpdateFlags</i> argument to <c>false</c>. Because the updates all occur in the same DataWindow control or DataStore, 
         you cannot allow the flags to be cleared until all the tables have used them. When all the updates are 
         successfully completed and committed, call <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ResetUpdateStatus"/> to clear the status flags and return the DataWindow to 
         an unmodified state.</para>
				<para>Likewise, if you are updating multiple DataWindows as part of one transaction, set the <i>ResetUpdateFlags</i>
         argument to <c>false</c>. This will prevent each DataWindow from "forgetting" which rows to update in case one of 
         the updates fails. You can roll back, try to correct the situation, and attempt to update again. Once all of the 
         DataWindows have been updated successfully, commit the changes to finalize the 
         transaction and call <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ResetUpdateStatus"/> to reset the status flags.</para>
			</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetTransaction(Sybase.DataWindow.AdoTransaction)"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveDataCache">
            <summary>Save all the current data into session state as a data cache.
		</summary><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:System.InvalidOperationException">The control's Page is null or Page.Session is null.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>You can use SaveDataCache to save the data cache into session state after retrieving data <i>or</i> set the <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.AutoSaveDataCacheAfterRetrieve"/> property to <c>true</c> to let the control save the data cache automatically after a retrieve. When the page is posted back, you can use <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.RestoreDataCache"/> to restore the data from session state back into the DataWindow <i>or</i> set <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.AutoRestoreDataCache"/> to <c>true </c>to let the control restore the data cache automatically if it exists in session state.
<para>If you do not want to use integrated data cache management, you can use the GetDataObject and SetDataObject functions to do your own data cache management. For example, you can use GetDataObject to get the DataWindow data cache object and save it into Page.Cache(Context.Cache /HttpRuntime.Cache), which is the application-level cache,  then get back the data cache object from Page.Cache during page post back and set the data cache object back into the DataWindow by calling the SetDataObject method.</para>
<para>SaveDataCache and RestoreDataCache throw an exception if saving or restoring the data cache fails. If AutoRestoreDataCache and AutoSaveDataCacheAfterRetrieve are used, then the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.AutoDataCacheError"></see> event will be fired if saving or restoring the data cache fails.</para>
<note>SaveDataCache and GetDataObject should be used to save  fresh data retrieved from the database only if EnableDataState is set to <c>true</c> to enable data change context management during a page round trip. The WebDataWindowControl’s context management will keep track of data changes and restore the context (by setting AutoRestoreContext to <c>true</c> or calling RestoreContext directly) during a page round trip. If SaveDataCache or GetDataObject save the data with changes, then RestoreContext might reapply the changes  and cause inconsistencies.</note>
</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ClearDataCache"></seealso><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.RestoreDataCache"></seealso><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetDataObject"></seealso><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetDataObject(Sybase.DataWindow.Web.DataObject)"></seealso>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.RestoreDataCache">
            <summary>Restore the data in session state previously saved with the SaveDataCache method back into the DataWindow.
		</summary><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:System.InvalidOperationException">The control's Page is null, Page.Session is null or Data Cache does not exist.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>For more information about cache management, see <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveDataCache"></see> and <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.EnableDataState"></see>.</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ClearDataCache"></seealso><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveDataCache"></seealso>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.ClearDataCache">
            <summary>Clear the data in session state previously saved using the SaveDataCache method.
		</summary><exception cref="T:System.InvalidOperationException">The control's Page is null or Page.Session is null.</exception><remarks>For more information about cache management, see <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveDataCache"></see> and <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.EnableDataState"></see>.</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveDataCache"></seealso><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.RestoreDataCache"></seealso>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetDataObject">
            <summary>Get all the data in the DataWindow.
		</summary><returns>Returns an instance of the DataObject class that contains all the data in the DataWindow.</returns><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks><para>If you do not want to use integrated data cache management, you can use the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetDataObject"></see> and SetDataObject functions to do your own data cache management. For example, you can use GetDataObject to get the DataWindow data cache object and save it into Page.Cache(Context.Cache /HttpRuntime.Cache), which is the application-level cache,  then get back the data cache object from Page.Cache during page post back and set the data cache object back into the DataWindow by calling the SetDataObject method.</para> </remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SetDataObject(Sybase.DataWindow.Web.DataObject)"></seealso>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetDataObject(Sybase.DataWindow.Web.DataObject)">
            <summary>Set back all the data in the DataObject into the DataWindow.
		</summary><param name="dataObject">The DataObject containing all the data to be set back into the DataWindow.</param><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>If you do not want to use integrated data cache management, you can use the GetDataObject and SetDataObject functions to do your own data cache management. For example, you can use GetDataObject to get the DataWindow data cache object and save it into Page.Cache (Context.Cache or HttpRuntime.Cache), which is the application-level cache,  then get back the data cache object from Page.Cache during page post back and set the data cache object back into the DataWindow by calling the SetDataObject method. </remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.GetDataObject"></seealso>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.ScrollFirstPage">
            <summary>Scrolls the WebDataWindowControl to the first page, displaying the result set's first group of rows in the Web page.
		</summary><remarks>Calling ScrollFirstPage causes the page to be reloaded with the first set of rows from the result set.
</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ScrollLastPage"></seealso><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ScrollNextPage"></seealso><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ScrollPriorPage"></seealso>								
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.ScrollLastPage">
            <summary>Scrolls the WebDataWindowControl to the last page, displaying the result set's last group of rows in the Web page.
		</summary><remarks>Calling ScrollLastPage causes the page to be reloaded with the last set of rows from the result set.
</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ScrollFirstPage"></seealso><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ScrollNextPage"></seealso><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ScrollPriorPage"></seealso>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.ScrollNextPage">
            <summary>&gt;Scrolls the WebDataWindowControl to next page, displaying the result set's next group of rows in the Web page.
		</summary><remarks>Calling ScrollNextPage causes the page to be reloaded with the next set of rows from the result set.
</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ScrollFirstPage"></seealso><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ScrollLastPage"></seealso><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ScrollPriorPage"></seealso>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.ScrollPriorPage">
            <summary>Scrolls the WebDataWindowControl to the previous page, displaying the result set's prior group of rows in the Web page.
		</summary><remarks>Calling ScrollPriorPage causes the page to be reloaded with the previous set of rows from the result set.
</remarks><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ScrollFirstPage"></seealso><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ScrollLastPage"></seealso><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.ScrollNextPage"></seealso>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.RestoreContext">
            <summary>Restore the context accumulated during a page round trip back into the DataWindow.
		</summary><exception cref="T:Sybase.DataWindow.DataWindowNotCreatedException">There is no DataWindow object associated with this DataWindow.</exception><exception cref="T:System.InvalidOperationException">The control's Page is null or Page is not in post back state.</exception><exception cref="T:Sybase.DataWindow.MethodFailureException">An unexpected error has occurred.</exception><remarks>	<para>The WebDataWindowControl uses a context model to maintain and manage changes in data on both the client and server and to manage the state of its data on a page round trip. The context includes changes in data on the server, including data modification, rows inserted, and rows deleted, as well as changes on the client and additional state information.  A WebDataWindowControl's data state is the accumulation of all changes in its data. The data state of the context is cleared on the server side when the data is updated to the database.</para>
		<para>In order to preserve the data state across HTTP requests, the WebDataWindowControl
		generates the data state in a request during rendering and saves it into the WebDataWindowControl's context. The WebDataWindowControl's context, including the data state, is then
		passed as a variable to a hidden field when subsequent requests are processed. </para>
			<para>If you are using DataWindow integrated data cache management, you can set AutoSaveDataCacheAfterRetrieve to <c>true</c> to specify that the DataWindow will automatically save the data as a data cache after a retrieve completes successfully. Use AutoSaveDataCacheAfterRetrieve together with AutoRestoreDataCache and AutoRestoreContext to achieve DataWindow integrated data cache management and context management and simplify your coding tasks. Setting AutoRestoreContext to <c>true</c> calls RestoreContext implicitly in the WebDataWindowControl's OnLoad event or the LoadPostData method.</para></remarks><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.AutoRestoreContext"></seealso><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.EnableDataState"></seealso><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)"></seealso><seealso cref="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveDataCache"></seealso>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.OnBeforePerformAction(Sybase.DataWindow.Web.BeforePerformActionEventArgs)">
            <summary>Raises the BeforePerformAction event.</summary><param name="e">BeforePerformActionEventArgs object that contains the event data.</param>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.OnAfterPerformAction(Sybase.DataWindow.Web.AfterPerformActionEventArgs)">
            <summary>Raises the AfterPerformAction event.</summary><param name="e">AfterPerformActionEventArgs object that contains the event data.</param>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.OnDataWindowCreated(Sybase.DataWindow.DataWindowCreatedEventArgs)">
            <summary>
				Raises the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.DataWindowCreated"/> event.
			</summary><param name="e">
				A <see cref="T:Sybase.DataWindow.DataWindowCreatedEventArgs"/> that contains the event data.
			</param><remarks>
				<para>an event invokes the event handler through a delegate. For more information, see Raising an Event.</para>
				<para>The <b>OnDataWindowCreated</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
				<para>Notes to Inheritors:  When overriding <b>OnDataWindowCreated</b> in a derived class, be sure to call the base class's <b>OnDataWindowCreated</b> method so that registered delegates receive the event.</para>
			</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.OnBeginRetrieve(Sybase.DataWindow.BeginRetrieveEventArgs)">
            <summary>
				Raises the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.BeginRetrieve"/> event.
			</summary><param name="e">
				A <see cref="T:Sybase.DataWindow.BeginRetrieveEventArgs"/> that contains the event data.
			</param><remarks>
				<para>an event invokes the event handler through a delegate. For more information, see Raising an Event.</para>
				<para>The <b>OnBeginRetrieve</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
				<para>Notes to Inheritors:  When overriding <b>OnBeginRetrieve</b> in a derived class, be sure to call the base class's <b>OnBeginRetrieve</b> method so that registered delegates receive the event.</para>
			</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.OnRowRetrieved(Sybase.DataWindow.RowRetrievedEventArgs)">
            <summary>
				Raises the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.RowRetrieved"/> event.
			</summary><param name="e">
				A <see cref="T:Sybase.DataWindow.RowRetrievedEventArgs"/> that contains the event data.
			</param><remarks>
				<para>an event invokes the event handler through a delegate. For more information, see Raising an Event.</para>
				<para>The <b>OnRowRetrieved</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
				<para>Notes to Inheritors:  When overriding <b>OnRowRetrieved</b> in a derived class, be sure to call the base class's <b>OnRowRetrieved</b> method so that registered delegates receive the event.</para>
			</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.OnEndRetrieve(Sybase.DataWindow.EndRetrieveEventArgs)">
            <summary>
				Raises the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.EndRetrieve"/> event.
			</summary><param name="e">
				A <see cref="T:Sybase.DataWindow.EndRetrieveEventArgs"/> that contains the event data.
			</param><remarks>
				<para>an event invokes the event handler through a delegate. For more information, see Raising an Event.</para>
				<para>The <b>OnEndRetrieve</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
				<para>Notes to Inheritors:  When overriding <b>OnEndRetrieve</b> in a derived class, be sure to call the base class's <b>OnEndRetrieve</b> method so that registered delegates receive the event.</para>
			</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.OnBeginUpdate(System.ComponentModel.CancelEventArgs)">
            <summary>
				Raises the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.BeginUpdate"/> event.
			</summary><param name="e">
				A <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.
			</param><remarks>
				<para>an event invokes the event handler through a delegate. For more information, see Raising an Event.</para>
				<para>The <b>OnBeginUpdate</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
				<para>Notes to Inheritors:  When overriding <b>OnBeginUpdate</b> in a derived class, be sure to call the base class's <b>OnBeginUpdate</b> method so that registered delegates receive the event.</para>
			</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.OnEndUpdate(Sybase.DataWindow.EndUpdateEventArgs)">
            <summary>
				Raises the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.EndUpdate"/> event.
			</summary><param name="e">
				A <see cref="T:Sybase.DataWindow.EndUpdateEventArgs"/> that contains the event data.
			</param><remarks>
				<para>an event invokes the event handler through a delegate. For more information, see Raising an Event.</para>
				<para>The <b>OnEndUpdate</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
				<para>Notes to Inheritors:  When overriding <b>OnEndUpdate</b> in a derived class, be sure to call the base class's <b>OnEndUpdate</b> method so that registered delegates receive the event.</para>
			</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.OnSqlPreview(Sybase.DataWindow.SqlPreviewEventArgs)">
            <summary>
				Raises the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.SqlPreview"/> event.
			</summary><param name="e">
				A <see cref="T:Sybase.DataWindow.SqlPreviewEventArgs"/> that contains the event data.
			</param><remarks>
				<para>an event invokes the event handler through a delegate. For more information, see Raising an Event.</para>
				<para>The <b>OnSqlPreview</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
				<para>Notes to Inheritors:  When overriding <b>OnSqlPreview</b> in a derived class, be sure to call the base class's <b>OnSqlPreview</b> method so that registered delegates receive the event.</para>
			</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.OnBeginPrint(Sybase.DataWindow.BeginPrintEventArgs)">
            <summary>
				Raises the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.BeginPrint"/> event.
			</summary><param name="e">
				A <see cref="T:Sybase.DataWindow.BeginPrintEventArgs"/> that contains the event data.
			</param><remarks>
				<para>an event invokes the event handler through a delegate. For more information, see Raising an Event.</para>
				<para>The <b>OnBeginPrint</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
				<para>Notes to Inheritors:  When overriding <b>OnBeginPrint</b> in a derived class, be sure to call the base class's <b>OnBeginPrint</b> method so that registered delegates receive the event.</para>
			</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.OnEndPrint(Sybase.DataWindow.EndPrintEventArgs)">
            <summary>
				Raises the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.EndPrint"/> event.
			</summary><param name="e">
				A <see cref="T:Sybase.DataWindow.EndPrintEventArgs"/> that contains the event data.
			</param><remarks>
				<para>an event invokes the event handler through a delegate. For more information, see Raising an Event.</para>
				<para>The <b>OnEndPrint</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
				<para>Notes to Inheritors:  When overriding <b>OnEndPrint</b> in a derived class, be sure to call the base class's <b>OnEndPrint</b> method so that registered delegates receive the event.</para>
			</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.OnPagePrinting(Sybase.DataWindow.PagePrintingEventArgs)">
            <summary>
				Raises the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.PagePrinting"/> event.
			</summary><param name="e">
				A <see cref="T:Sybase.DataWindow.PagePrintingEventArgs"/> that contains the event data.
			</param><remarks>
				<para>an event invokes the event handler through a delegate. For more information, see Raising an Event.</para>
				<para>The <b>OnPagePrinting</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
				<para>Notes to Inheritors:  When overriding <b>OnPagePrinting</b> in a derived class, be sure to call the base class's <b>OnPagePrinting</b> method so that registered delegates receive the event.</para>
			</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.OnItemError(Sybase.DataWindow.ItemErrorEventArgs)">
            <summary>
				Raises the <see cref="E:Sybase.DataWindow.Web.WebDataWindowControl.ItemError"/> event.
			</summary><param name="e">
				A <see cref="T:Sybase.DataWindow.ItemErrorEventArgs"/> that contains the event data.
			</param><remarks>
				<para>an event invokes the event handler through a delegate. For more information, see Raising an Event.</para>
				<para>The <b>OnItemError</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
				<para>Notes to Inheritors:  When overriding <b>OnItemError</b> in a derived class, be sure to call the base class's <b>OnItemError</b> method so that registered delegates receive the event.</para>
			</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.OnAutoDataCacheError(Sybase.DataWindow.Web.AutoDataCacheErrorEventArgs)">
            <summary>Raises the AutoDataCacheError event.</summary><param name="e">AutoDataCacheErrorEventArgs object that contains the event data.</param>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.OnAutoContextRestoreError(Sybase.DataWindow.Web.AutoContextRestoreErrorEventArgs)">
            <summary>Raises the AutoContextRestoreError event.</summary><param name="e">AutoContextRestoreErrorEventArgs object that contains the event data.</param>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetObjectHandle">
            <summary>
            This method is designed for DataWindow .NET internal usage only and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetClientObjectName(System.String)">
            <summary>
            Set client object name, which will override the default client object name.
            </summary>
            <param name="clientObjectName">The client object name.</param>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SetBatchModificationMode(System.Boolean)">
            <summary>
            This method is designed for DataWindow .NET internal usage only and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.BatchModification">
            <summary>
            This method is designed for DataWindow .NET internal usage only and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.InternalModify(System.String)">
            <summary>
            This method is designed for DataWindow .NET internal usage only and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            This member overrides AddAttributesToRender of WebControl.
            </summary>		
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.OnPreRender(System.EventArgs)">
            <summary>
            This member overrides OnPreRender of WebControl.
            </summary>	
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.OnInit(System.EventArgs)">
            <summary>
            This member overrides OnInit of WebControl.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.OnLoad(System.EventArgs)">
            <summary>
            This member overrides OnLoad of WebControl.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.OnUnload(System.EventArgs)">
            <summary>
            This member overrides OnUnload of WebControl.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.LoadViewState(System.Object)">
            <summary>
            This member overrides LoadViewState of WebControl.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.SaveViewState">
            <summary>
            This member overrides SaveViewState of WebControl.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.TrackViewState">
            <summary>
            This member overrides TrackViewState of WebControl.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.RaisePostBackEvent(System.String)">
            <summary>
            Raises events for the WebDataWindowControl when a form is posted back to the server.
            This member implements IPostBackEventHandler.RaisePostBackEvent.
            </summary>
            <param name="eventArgument">A String that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes the postback data for the WebDataWindowControl. 
            This member implements IPostBackDataHandler.LoadPostData.
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns><c>true</c> if the server control's state changes as a result of the post back; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.RaisePostDataChangedEvent">
            <summary>
            This member implements IPostBackDataHandler.RaisePostDataChangedEvent.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.RaiseCallbackEvent(System.String)">
            <summary>
            Raises the callback event using the specified arguments.
            </summary>
            <param name="eventArgument">A string that represents an optional event argument to pass to the event handler.</param>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.GetCallbackResult">
            <summary>
            Returns the result of a callback event that targets a control.
            </summary>
            <returns>The results of the callback.</returns>
            <remarks>The WebDataWindowControl implements the ICallbackEventHandler interface and uses the RaiseCallbackEvent to retrieve callback data and the GetCallbackResult method to return the callback result to the control.</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.Get_dwObject">
            <summary>
            This method is designed for DataWindow .NET internal usage only and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.Get_dwObject(System.String)">
            <summary>
            This method is designed for DataWindow .NET internal usage only and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.WebDataWindowControl.Dispose">
            <summary>
            This member overrides Dispose of Control.
            </summary>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.DataWindowObject">
            <summary>Gets or sets the name of the DataWindow object to load for this WebDataWindowControl.
	    </summary><value>The DataWindow object name.</value><exception cref="T:Sybase.DataWindow.DataWindowLoadFailedException">The specified DataWindow object could not be found in <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.LibraryList"/>.</exception>			
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.LibraryList">
            <summary>Gets or sets the list of libraries in which the WebDataWindowControl searches for DataWindow objects.
		</summary><value>The list of libraries.</value>		
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.HorizontalScrollBar">
            <summary>Gets or sets the horizontal scrollbar style of the WebDataWindowControl.
		</summary><value>The horizontal scrollbar style of the WebDataWindowControl.</value>	
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.VerticalScrollBar">
            <summary>Gets or sets the vertical scrollbar style of the WebDataWindowControl.
		</summary><value>The vertical scrollbar style of the WebDataWindowControl.</value>	
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.JavaScriptConfigurations">
            <summary>Gets or sets the configuration used to deploy JavaScript with the WebDataWindowControl.
		</summary><value>An instance of the JavaScriptConfigurations class of the WebDataWindowControl.</value><remarks>In Visual Studio .NET or in DataWindow Designer, you can generate JavaScript files that contain the JavaScript required to manage common DataWindow operations and operations with DateTime, number, and string datatypes. You can then improve performance by distributing these files once as external files instead of embedding the  JavaScript in each Web page when it is rendered. If you choose this option, you also need to specify the URL where the external files are located.</remarks><seealso cref="T:Sybase.DataWindow.Web.JavaScriptConfigurations"></seealso>	
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.GraphConfigurations">
            <summary>Gets or sets the configuration used to display graphs in a  WebDataWindowControl.
		</summary><value>An instance of the GraphConfigurations class of the WebDataWindowControl.</value><remarks>Graphs can be displayed in a DataWindow in a stand-alone image file or in an image stream embedded into the Web page. In the latter case, the graph image is saved as an image stream in the session cache and passed to a <see cref="P:Sybase.DataWindow.Web.GraphConfigurations.StreamImageContainerPage"/> in a <see cref="T:Sybase.DataWindow.Web.StreamImageContainer"></see>.</remarks><seealso cref="T:Sybase.DataWindow.Web.GraphConfigurations"/>	
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.XmlConfigurations">
            <summary>Gets or sets the configuration used to generate XML or XHTML for the WebDataWindowControl.
		</summary><value>An instance of the XmlConfigurations class of the WebDataWindowControl.</value><remarks>If the DataWindow object is rendered in the XML or XHTML <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.RenderFormat"/>, you can specify the XHTML template (<see cref="P:Sybase.DataWindow.Web.XmlConfigurations.TemplateName"></see>) you designed in the DataWindow painter and the path (<see cref="P:Sybase.DataWindow.Web.XmlConfigurations.UrlPath"></see>) where dynamically generated files are saved. You can also specify that intermediate files specific to a given client are generated (<see cref="P:Sybase.DataWindow.Web.XmlConfigurations.SessionSpecific"></see>), and that XML be generated inline to enhance security (<see cref="P:Sybase.DataWindow.Web.XmlConfigurations.SecurelyInline"></see>).</remarks><seealso cref="T:Sybase.DataWindow.Web.XmlConfigurations"/>	
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.RenderFormat">
            <summary>Gets or sets the format in which the DataWindow object is rendered.
		</summary><value>A value of the <see cref="T:Sybase.DataWindow.Web.RenderFormat"></see> enumeration.</value><remarks>The DataWindow object and data in a WebDataWindowControl can be rendered using three formats: XML, XHTML, and HTML.  Use HTML for simple pages with small amounts of data, XHTML when you want to customize the display with an XHTML template with small amounts of data, and XML when you want customized display and you have a large amount of data. </remarks><example>This Visual Basic code in the code behind file sets the RenderFormat according to the user's choice in a set of radio buttons:<code>
	'Rendering Format
        If rb_format.SelectedIndex = 0 Then
            dw_1.RenderFormat = Sybase.DataWindow.Web.RenderFormat.Html
        ElseIf rb_format.SelectedIndex = 1 Then
            dw_1.RenderFormat = Sybase.DataWindow.Web.RenderFormat.XHtml
        Else
            dw_1.RenderFormat = Sybase.DataWindow.Web.RenderFormat.Xml
        End If
</code></example>	
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.AutoRestoreContext">
            <summary>Gets and sets a value indicating whether the DataWindow context accumulated in a round trip to the server should be restored automatically.
		</summary><value><c>true</c> if the context of the WebDataWindowControl should be restored automatically ; otherwise <c>false</c>. The default is <c>true</c>.</value><remarks>
		<para>When AutoRestoreContext is set to <c>true</c>, context is automatically restored using the <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.RestoreContext"/> method. This method is called internally in one of two places: either in the control's OnLoad event, which is fired after the page's OnLoad event during page post back,<i> or</i> in the control's <see cref="M:Sybase.DataWindow.Web.WebDataWindowControl.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)"/> method.  Where it is called depends on whether the control is stateful and whether you are using integrated cache management (AutoRestoreCache is set to <c>true</c>).</para>
	<note>Context should only be restored after the DataWindow has obtained its data. This can be done using a retrieve, import, data cache restore or another method.</note>
		<para>If the control is stateful, the DataWindow is still loaded after a round trip to the server and the OnLoad event of the WebDataWindowControl is  not called. In this case, if AutoRestoreContext is true, the RestoreContext method is called in the LoadPostData method. </para>
		<para>If the page is not already loaded and the AutoRestoreDataCache property is set to true, the RestoreContext method is called in the LoadPostData method<i>if</i> the data cache is restored successfully.</para>
		<para>If the page is not already loaded and the AutoRestoreDataCache property is set to <c>false</c> (the default), the RestoreContext method is called in the OnLoad event.</para>
		<para>If AutoRestoreContext is <c>true</c> and AutoRestoreDataCache is <c>false</c>, you should populate the DataWindow's data before the WebDataWindowControl's OnLoad event. In this case,
		the best place to populate the DataWindow with data is in the page's OnLoad event. For example, you can do a DataWindow data retrieve in the page's OnLoad event and set
		AutoRestoreContext to <c>true</c> to let the DataWindow automatically restore its context. If you do not want to conform to this limitation, you can set  AutoRestoreContext to <c>false</c> and then call the RestoreContext method manually after your data retrieve is done. </para>
		<para>The default value for this property is <c>true</c>.</para>
        </remarks><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.AutoRestoreDataCache"></seealso><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.AutoSaveDataCacheAfterRetrieve"></seealso>	
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.AutoRestoreDataCache">
            <summary>Gets and sets a value indicating whether the DataWindow will automatically restore the data cache, if it exists, during post back if you are using DataWindow integrated data cache management.
		</summary><value><c>true</c> if an existing data cache should be restored automatically during post back; otherwise <c>false</c>. The default is <c>false</c>.</value><remarks>
		If you are using DataWindow integrated data cache management, use the AutoRestoreDataCache property to specify whether  the DataWindow should automatically restore the data cache, if it exists,
		during post back. The data cache restore will be performed before the control's OnLoad event. After the data cache is restored successfully, the DataWindow context accumulated
		in the round trip to the server will be restored at the same time if the AutoRestoreContext property is set to <c>true</c>. Once the data cache and context have been restored, the user can perform data operations in the DataWindow in the browser.
        </remarks><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.AutoRestoreContext"></seealso><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.AutoSaveDataCacheAfterRetrieve"></seealso>	
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.AutoSaveDataCacheAfterRetrieve">
            <summary>Gets and sets a value indicating whether the DataWindow will automatically save the data in the DataWindow as a data cache after a retrieve completes successfully when you are using DataWindow integrated data cache management.
		</summary><value><c>true</c> if data should be saved as a data cache after a retrieve completes successfully; otherwise <c>false</c>. The default is <c>false</c>.</value><remarks>
		If you are using DataWindow integrated data cache management, you can set AutoSaveDataCacheAfterRetrieve to <c>true</c> to specify that the DataWindow will automatically save the data as a data cache after a retrieve completes successfully. Use AutoSaveDataCacheAfterRetrieve together with AutoRestoreDataCache and AutoRestoreContext to achieve DataWindow integrated data cache management and context management and simplify your coding tasks.
        </remarks><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.AutoRestoreContext"></seealso><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.AutoRestoreDataCache"></seealso>	
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.EnableDataState">
            <summary>Gets or sets a value indicating whether the state of changes to data is stored in the context of the WebDataWindowControl and returned to the client with the result of rendering the DataWindow.
		</summary><value><c>true</c> if the WebDataWindowControl maintains the state of changes to data; otherwise <c>false</c>. The default is <c>true</c>.</value><remarks><para>You must enable data state for the WebDataWindowControl to maintain the state of changes to data across HTTP requests.</para>
		<para>The WebDataWindowControl uses a context model to maintain and manage changes in data on both the client and server and to manage the state of its data on a page round trip. The context includes changes in data on the server, including data modification, rows inserted, and rows deleted, as well as changes on the client and additional state information.  A WebDataWindowControl's data state is the accumulation of all changes in its data. The data state of the context is cleared on the server side when the data is updated to the database.</para>
		<para>In order to preserve the data state across HTTP requests, the WebDataWindowControl
		generates the data state in a request during rendering and saves it into the WebDataWindowControl's context. The WebDataWindowControl's context, including the data state, is then
		passed as a variable to a hidden field when subsequent requests are processed. </para>
		<para>There are times when it is appropriate to disable the data state, particularly to improve application performance.
		For example, if you import a large amount of data into a WebDataWindowControl, the state of data changes becomes large because all the rows imported are treated as newly inserted rows (this behavior is different from that in a retrieve). If EnableDataState is set to <c>true</c>, importing a large amount of data sends a large context to the client.  When the page is posted back, there is no need to import the data again since the context containing the state of data changes is restored to the WebDataWindowControl. If you want to improve performance, you can avoid sending  a large context to the client by setting EnableDataState to<c> false</c>. However, since with this setting the imported data is not included in the context, you must import the data again when the page is posted back.</para>
        </remarks>	
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ObjectLinks">
            <summary>Describes the collection of generated hyperlinks for objects in this DataWindow.
		</summary><value>An instance of the ObjectLinkCollection class.</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.DisplayOnly">
            <summary>Specifies whether this DataWindow is for display only and not for data entry.
		</summary><value><c>true</c> if the DataWindow object in the WebDataWindowControl is read only; otherwise <c>false</c>. The default is <c>false</c>.</value>	
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientValidation">
            <summary>Specifies whether validation will be performed on the client in the browser.
		</summary><value><c>true</c> if validation should be performed on the client; otherwise <c>false</c>. The default is <c>false</c>.</value><remarks>This property specifies whether JavaScript code to perform validation of user-entered data is generated. The validation code is translated from validation expressions specified in the DataWindow painter.</remarks>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientFormatting">
            <summary>Specifies whether display formatting should be performed on the client in the browser. 	</summary><value><c>true</c> if display formatting should be performed on the client; otherwise <c>false</c>. The default is <c>true</c>.</value><remarks>This property specifies whether DataWindow display formats are applied to objects that do not have focus. The JavaScript used to format the data is translated from  display formats specified in the DataWindow painter. </remarks>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientScriptable">
            <summary>Specifies whether client-side JavaScript can interact with the control.
		</summary><value><c>true</c> if client-side JavaScript can interact with the control; otherwise <c>false</c>. The default is <c>false</c>.</value><remarks>This option adds to the size of the generated HTML.</remarks>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.GenerateDDDWFrames">
            <summary>Specifies whether DDDW controls in the DataWindow are generated using frames or HTML select elements.
		</summary><value><c>true</c> if DDDW controls are generated as complete DataWindows using iFrames; otherwise <c>false</c> if simpler HTML select elements are generated instead. The default is <c>true</c>.</value><remarks>This option adds to the size of the generated HTML.</remarks>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEvents">
            <summary>Specifies whether client events can be fired.
		</summary><value><c>true</c> if client events can be fired; <c>false</c> otherwise. The default is <c>true</c>.</value><remarks>If ClientEvents is set to <c>false</c>, then no JavaScript for firing client side events is generated. Each client side event is associated with a ClientEvent property. To add a client event, select Add a New Event Handler from the drop-down list in the ClientEvent property's field in the WebDataWindowControl's  Properties window. This associates a function name with the property and generates a function prototype in the .aspx file. The properties associated with events are <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventButtonClicking"/>, <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventButtonClicked"/>, <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventClicked"/>, <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventCollapsed"/>, <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventCollapsing"/>, <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventExpanded"/>, <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventExpanding"/>, <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventItemChanged"/>, <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventItemError"/>, <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventItemFocusChanged"/>, <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventRowFocusChanging"/>, <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventRowFocusChanged"/>, <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventTreeNodeSelected"/>, and <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventTreeNodeSelecting"/>.
	</remarks>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.RowsPerPage">
            <summary>Specifies how many rows display in one page.
		</summary><value>An integer specifying the number of rows to display. The default value is 0, which displays all the rows retrieved.</value><remarks>You can choose to display fewer than the number of rows retrieved from the database. Displaying a limited number of rows requires less time to refresh the display in the browser.  You can add buttons to the DataWindow object to navigate to the rest of the data.</remarks>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.PagingMethod">
            <summary>
			Gets or sets the mechanism to execute paging actions for the respective RenderFormat.
		</summary><value>
			A value of the <see cref="T:Sybase.DataWindow.Web.PagingMethod"></see> enumeration.
		</value><remarks>A WebDataWindowControl can execute paging actions using three mechanisms: PostBack, Script Callback, and pure Client-Side using XML.</remarks><example>
			This Visual Basic code in the code behind file sets the PagingMethod according to the user's choice in a set of radio buttons:<code>
				'Paging Method
				If rb_paging.SelectedIndex = 1 Then
				dw_1.PagingMethod = Sybase.DataWindow.Web.PagingMethod.Callback
				ElseIf rb_paging.SelectedIndex = 2 Then
				dw_1.PagingMethod = Sybase.DataWindow.Web.PagingMethod.XmlClientSide
				Else
				dw_1.PagingMethod = Sybase.DataWindow.Web.PagingMethod.PostBack
				End If
			</code>
		</example>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.PageNavigationBarSettings">
            <summary>
			Gets a reference to the PageNavigationBarSettings object that allows you to set the properties of the page navigation bar in a WebDataWindowControl.
		</summary><value>
			A reference to the PageNavigationBarSettings object that allows you to set the properties of the page navigation bar in a WebDataWindowControl.
		</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventClicked">
            <summary>Specifies the name of a Clicked client event that fires when the mouse is clicked in the DataWindow in the browser.
		</summary><value>A string specifying the name of the Clicked event.</value><remarks>To define a new event that is fired when the user clicks the mouse in the DataWindow in the browser, select Add a New Event Handler from the drop-down list in the ClientEventClicked field in the WebDataWindowControl's  Properties window. By default the event has the name <c>obj</c><i>name</i><c>_Clicked</c>, where <i>name</i> is the name of the WebDataWindowControl. The ClientEvents property must be set to <c>true</c> (the default).</remarks><example>Adding a new Clicked event handler for a WebDataWindowControl named DWSales adds the following function to the .aspx file:<code>
function objDWSales_Clicked(sender, rowNumber, objectName) {

}
</code></example><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEvents"></seealso>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventCollapsed">
            <summary>
			Specifies the name of a Collapsed client event that fires for a TreeView DataWindow after a collapsing operation when the user clicks the State Icon or uses the collapse* methods.
		</summary><value>A string specifying the name of the Collapsed event.</value><remarks>To define a new event that is fired for a TreeView DataWindow after a collapsing operation.</remarks><example>Adding a new Collapsed event handler for a WebDataWindowControl named DWSales adds the following function to the .aspx file:<code>
function objDWSales_Collapsed(sender, rowNumber, groupLevel) {

}
</code></example><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEvents"></seealso>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventCollapsing">
            <summary>
			Specifies the name of a Collapsing client event that fires for a TreeView DataWindow before a collapsing operation.
		</summary><value>A string specifying the name of the Collapsing event.</value><remarks>To define a new event that is fired for a TreeView DataWindow before a collapsing operation.</remarks><example>Adding a new Collapsing event handler for a WebDataWindowControl named DWSales adds the following function to the .aspx file:<code>
function objDWSales_Collapsing(sender, rowNumber, groupLevel) {

}
</code></example><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEvents"></seealso>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventExpanded">
            <summary>
			Specifies the name of an Expanded client event that fires for a TreeView DataWindow after an expanding operation when the user clicks the State Icon or uses the expand* methods.
		</summary><value>A string specifying the name of the Expanded event.</value><remarks>To define a new event that is fired for a TreeView DataWindow after an expanding operation.</remarks><example>Adding a new Expanded event handler for a WebDataWindowControl named DWSales adds the following function to the .aspx file:<code>
function objDWSales_Expanded(sender, rowNumber, groupLevel) {

}
</code></example><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEvents"></seealso>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventExpanding">
            <summary>
			Specifies the name of an Expanding client event that fires for a TreeView DataWindow before an expanding operation.
		</summary><value>A string specifying the name of the Expanding event.</value><remarks>To define a new event that is fired for a TreeView DataWindow before an expanding operation.</remarks><example>Adding a new Expanding event handler for a WebDataWindowControl named DWSales adds the following function to the .aspx file:<code>
function objDWSales_Expanding(sender, rowNumber, groupLevel) {

}
</code></example><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEvents"></seealso>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventItemChanged">
            <summary>Specifies the name of an ItemChanged client event that fires when the user changes an item in the DataWindow in the browser.
		</summary><value>A string specifying the name of the ItemChanged event.</value><remarks>To define a new event that is fired when the user changes an item in the DataWindow in the browser, select Add a New Event Handler from the drop-down list in the ClientEventItemChanged field in the WebDataWindowControl's  Properties window. By default the event has the name <c>obj</c><i>name</i><c>_ItemChanged</c>, where <i>name</i> is the name of the WebDataWindowControl. The ClientEvents property must be set to <c>true</c> (the default).</remarks><example>Adding a new ItemChanged event handler for a WebDataWindowControl named DWSales adds the following function to the .aspx file:<code>
function objDWSales_ItemChanged(sender, rowNumber, columnName, newValue) {

}
</code></example><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEvents"></seealso>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventItemError">
            <summary>Specifies the name of an ItemError client event that fires when the user changes an item in the DataWindow in the browser and the change does not pass validation.
		</summary><value>A string specifying the name of the ItemError event.</value><remarks>To define a new event that is fired when the user changes an item in the DataWindow in the browser and the change does not pass validation, select Add a New Event Handler from the drop-down list in the ClientEventItemError field in the WebDataWindowControl's  Properties window. By default the event has the name <c>obj</c><i>name</i><c>_ItemError</c>, where <i>name</i> is the name of the WebDataWindowControl. The ClientEvents property must be set to <c>true</c> (the default).</remarks><example>Adding a new ItemError event handler for a WebDataWindowControl named DWSales adds the following function to the .aspx file:<code>
function objDWSales_ItemError(sender, rowNumber, columnName, newValue) {

}
</code></example><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEvents"></seealso>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventItemFocusChanged">
            <summary>Specifies the name of an ItemFocusChanged client event that fires when focus changes to another data item in the DataWindow in the browser.
		</summary><value>A string specifying the name of the ItemFocusChanged event.</value><remarks>To define a new event that is fired when the user changes focus to another data item in the DataWindow in the browser, select Add a New Event Handler from the drop-down list in the ClientEventItemFocusChanged field in the WebDataWindowControl's  Properties window. By default the event has the name <c>obj</c><i>name</i><c>_ItemFocusChanged</c>, where <i>name</i> is the name of the WebDataWindowControl. The ClientEvents property must be set to <c>true</c> (the default).</remarks><example>Adding a new ItemFocusChanged event handler for a WebDataWindowControl named DWSales adds the following function to the .aspx file:<code>
function objDWSales_ItemFocusChanged(sender, rowNumber, columnName) {

}
</code></example><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEvents"></seealso>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventRowFocusChanging">
            <summary>Specifies the name of a RowFocusChanging client event that fires when focus is about to be changed to another row in the DataWindow in the browser.
		</summary><value>A string specifying the name of the RowFocusChanging event.</value><remarks>To define a new event that is fired when the user is changing focus to another row in the DataWindow in the browser, select Add a New Event Handler from the drop-down list in the ClientEventRowFocusChanging field in the WebDataWindowControl's  Properties window. By default the event has the name <c>obj</c><i>name</i><c>_RowFocusChanging</c>, where <i>name</i> is the name of the WebDataWindowControl. The ClientEvents property must be set to <c>true</c> (the default).</remarks><example>Adding a new RowFocusChanging event handler for a WebDataWindowControl named DWSales adds the following function to the .aspx file:<code>
function objDWSales_RowFocusChanging(sender, currentRowNumber, newRowNumber) {

}
</code></example><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEvents"></seealso>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventRowFocusChanged">
            <summary>Specifies the name of a RowFocusChanged client event that fires when focus has changed to another row in the DataWindow in the browser.
		</summary><value>A string specifying the name of the RowFocusChanged event.</value><remarks>To define a new event that is fired when the user has changed focus to another row in the DataWindow in the browser, select Add a New Event Handler from the drop-down list in the ClientEventRowFocusChanged field in the WebDataWindowControl's  Properties window. By default the event has the name <c>obj</c><i>name</i><c>_RowFocusChanged</c>, where <i>name</i> is the name of the WebDataWindowControl. The ClientEvents property must be set to <c>true</c> (the default).</remarks><example>Adding a new RowFocusChanged event handler for a WebDataWindowControl named DWSales adds the following function to the .aspx file:<code>
function objDWSales_RowFocusChanged(sender, newRowNumber) {

}
</code></example><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEvents"></seealso>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventButtonClicking">
            <summary>Specifies the name of a ButtonClicking client event that fires when the mouse is clicked on a button in the DataWindow in the browser.
		</summary><value>A string specifying the name of the ButtonClicking event.</value><remarks>To define a new event that is fired when the user clicks the mouse on a button in the DataWindow in the browser, select Add a New Event Handler from the drop-down list in the ClientEventButtonClicking field in the WebDataWindowControl's  Properties window. By default the event has the name <c>obj</c><i>name</i><c>_ButtonClicking</c>, where <i>name</i> is the name of the WebDataWindowControl. The ClientEvents property must be set to <c>true</c> (the default).</remarks><example>Adding a new ButtonClicking event handler for a WebDataWindowControl named DWSales adds the following function to the .aspx file:<code>
function objDWSales_ButtonClicking(sender, rowNumber, buttonName) {

}
</code></example><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEvents"></seealso>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventButtonClicked">
            <summary>Specifies the name of a ButtonClicked client event that fires when the mouse is clicked on a button in the DataWindow in the browser.
		</summary><value>A string specifying the name of the ButtonClicked event.</value><remarks>To define a new event that is fired when the user clicks the mouse on a button in the DataWindow in the browser, select Add a New Event Handler from the drop-down list in the ClientEventButtonClicked field in the WebDataWindowControl's  Properties window. By default the event has the name <c>obj</c><i>name</i><c>_ButtonClicked</c>, where <i>name</i> is the name of the WebDataWindowControl. The ClientEvents property must be set to <c>true</c> (the default).</remarks><example>Adding a new ButtonClicked event handler for a WebDataWindowControl named DWSales adds the following function to the .aspx file:<code>
function objDWSales_ButtonClicked(sender, rowNumber, buttonName) {

}
</code></example><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEvents"></seealso>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventTreeNodeSelected">
            <summary>
			Specifies the name of a TreeNodeSelected client event that fires for a TreeView DataWindow after a tree node selecting operation.
		</summary><value>A string specifying the name of the TreeNodeSelected event.</value><remarks>To define a new event that is fired for a TreeView DataWindow after a tree node selecting operation.</remarks><example>Adding a new TreeNodeSelected event handler for a WebDataWindowControl named DWSales adds the following function to the .aspx file:<code>
function objDWSales_TreeNodeSelected(sender, rowNumber, groupLevel) {

}
</code></example><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEvents"></seealso>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEventTreeNodeSelecting">
            <summary>
			Specifies the name of a TreeNodeSelecting client event that fires for a TreeView DataWindow before a tree node selecting operation.
		</summary><value>A string specifying the name of the TreeNodeSelecting event.</value><remarks>To define a new event that is fired for a TreeView DataWindow before a tree node selecting operation.</remarks><example>Adding a new TreeNodeSelecting event handler for a WebDataWindowControl named DWSales adds the following function to the .aspx file:<code>
function objDWSales_TreeNodeSelecting(sender, rowNumber, groupLevel) {

}
</code></example><seealso cref="P:Sybase.DataWindow.Web.WebDataWindowControl.ClientEvents"></seealso>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.DeletedCount">
            <summary>Gets the number of rows that have been marked for deletion in the database. 
      </summary><value>The number of rows currently in the Delete buffer.</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.FilteredCount">
            <summary>Gets the number of rows not included in the Primary buffer
         because of the application of a filter criteria. 
      </summary><value>The number of rows currently in the Filter buffer.</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ModifiedCount">
            <summary>Get number of rows that have been modified. 
      </summary><value>The number of modified rows in the DataWindow.</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.RowCount">
            <summary>Gets the number of rows in the Primary buffer.</summary><value>The number of rows currently in the Primary buffer.</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ColumnCount">
            <summary>
            The number of columns in the DataWindow. Computed columns are not included in this value.
            </summary>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.CurrentRow">
            <summary>Gets the number of the current row in a DataWindow.
      </summary><value>The number of the current row in the DataWindow.</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.CurrentPage">
            <summary>Gets the number of the current page in a DataWindow.
		</summary><value>An integer that indicates the current page in the rendered DataWindow. If <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.RowsPerPage"></see> is 0, then CurrentPage is 1 because all the rows display in a single page.</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.PageCount">
            <summary>Gets the total number of pages in a DataWindow.
		</summary><value>An integer indicating the total number of pages in the rendered DataWindow. If <see cref="P:Sybase.DataWindow.Web.WebDataWindowControl.RowsPerPage"></see> is 0, then PageCount is 1 because all the rows display in a single page.</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.FirstRowOfCurrentPage">
            <summary>
			Gets the first row number of current page in a DataWindow.
		</summary><value>
			An integer that indicates the first row number of current page in the rendered DataWindow.
		</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.LastRowOfCurrentPage">
            <summary>
			Gets the last row number of current page in a DataWindow.
		</summary><value>
			An integer that indicates the last row number of current page in the rendered DataWindow.
		</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.DataWindowStyle">
            <summary>Gets the style of the DataWindow.</summary><value>The style of the DataWindow (e.g., Tabular, Grid, Crosstab).</value><remarks>The Tabular, FreeForm, and Group styles are internally identical; the <b>Style</b> will always be reported as Tabular.</remarks>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.Sybase#DataWindow#IDataWindowBase#Style">
            <summary>Gets the style of the DataWindow.</summary><value>The style of the DataWindow (e.g., Tabular, Grid, Crosstab).</value><remarks>The Tabular, FreeForm, and Group styles are internally identical; the <b>Style</b> will always be reported as Tabular.</remarks>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.DataSourceType">
            <!-- No matching elements were found for the following include tag --><include file="DataWindowComments.xml" path="doc/members/member[@name=&quot;P:DataSourceType&quot;]/*"/>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.Syntax">
            <summary>
            Returns the syntax describing the DataWindow object
            </summary>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.PrintProperties">
            <summary>
            Returns print properties.
            </summary>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.ContainsNestedReport">
            <summary>
		Whether the DataWindow contains a nested report.
		</summary><value>A boolean value that is true if the DataWindow contains a nested reported and false otherwise.</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.WebDataWindowControl.TreeViewProperties">
            <summary>
        Gets properties for a TreeView style DataWindow. For a complete list of properties, see the <see cref="T:Sybase.DataWindow.TreeViewProperties"/> class.
       </summary>
        </member>
        <member name="E:Sybase.DataWindow.Web.WebDataWindowControl.BeforePerformAction">
            <summary>Occurs before a client DataWindow post back action is executed. An action can be a DataWindow button action or a DataWindow client object script post back action.
		</summary><example>The following code in a BeforePerformAction event tests whether the user chose to cancel the action:<code>
   Private Sub dw_1_BeforePerformAction(ByVal sender As Object, ByVal e As Sybase.DataWindow.Web.BeforePerformActionEventArgs) Handles dw_1.BeforePerformAction

        If rb_action.SelectedIndex = 0 Then
            e.CancelAction = True
        Else
            e.CancelAction = False
        End If
        msg.Text += "BeforePerformAction Event Fired e.Action = " + e.Action.ToString + "e.CancelAction =  " + e.CancelAction.ToString + vbCrLf

    End Sub
</code></example>
        </member>
        <member name="E:Sybase.DataWindow.Web.WebDataWindowControl.AfterPerformAction">
            <summary>Occurs after a client DataWindow post back action is executed. An action can be a DataWindow button action or a DataWindow client object script post back action.
		</summary>
        </member>
        <member name="E:Sybase.DataWindow.Web.WebDataWindowControl.DataWindowCreated">
            <!-- No matching elements were found for the following include tag --><include file="WebDataWindowComments.xml" path="doc/members/member[@name=&quot;E:DataWindowCreated&quot;]/*"/>
        </member>
        <member name="E:Sybase.DataWindow.Web.WebDataWindowControl.BeginRetrieve">
            <summary>Occurs when retrieval of the DataWindow starts.
		</summary>
        </member>
        <member name="E:Sybase.DataWindow.Web.WebDataWindowControl.RowRetrieved">
            <summary>Occurs after a each row has been retrieved into a DataWindow.
		</summary>
        </member>
        <member name="E:Sybase.DataWindow.Web.WebDataWindowControl.EndRetrieve">
            <summary>Occurs when the retrieval for the DataWindow is complete.
		</summary>
        </member>
        <member name="E:Sybase.DataWindow.Web.WebDataWindowControl.BeginUpdate">
            <summary>Occurs just before changes in the DataWindow are sent to the database.
		</summary>
        </member>
        <member name="E:Sybase.DataWindow.Web.WebDataWindowControl.EndUpdate">
            <summary>Occurs when all the updates from the DataWindow to the database are complete.
		</summary>
        </member>
        <member name="E:Sybase.DataWindow.Web.WebDataWindowControl.SqlPreview">
            <summary>Occurs immediately before a SQL statement is submitted to the database by a DataWindow method.
		</summary>
        </member>
        <member name="E:Sybase.DataWindow.Web.WebDataWindowControl.BeginPrint">
            <summary>Occurs when the printing of the DataWindow starts.
		</summary>
        </member>
        <member name="E:Sybase.DataWindow.Web.WebDataWindowControl.EndPrint">
            <summary>Occurs when the printing of the DataWindow ends.
		</summary>
        </member>
        <member name="E:Sybase.DataWindow.Web.WebDataWindowControl.PagePrinting">
            <summary>Occurs before each page of the DataWindow is formatted for printing.
		</summary>
        </member>
        <member name="E:Sybase.DataWindow.Web.WebDataWindowControl.ItemError">
            <summary>Occurs when a modified field does not pass the validation criteria specified for it.
		</summary>
        </member>
        <member name="E:Sybase.DataWindow.Web.WebDataWindowControl.AutoDataCacheError">
            <summary>Occurs when an auto data cache (Save or Restore) error occurs.
		</summary>		
        </member>
        <member name="E:Sybase.DataWindow.Web.WebDataWindowControl.AutoContextRestoreError">
            <summary>Occurs when an error occurs during automatic restoration of context.
		</summary>		
        </member>
        <member name="T:Sybase.DataWindow.Web.DataObject">
            <summary>An instance of the DataObject class holds the DataWindow object's data cache. </summary><summary>An instance of the DataObject class holds the DataWindow object's data cache. </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.Design.UrlPathEditor">
            <summary>
            Summary description for UrlPathEditor.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.XmlConfigurations">
            <summary>A class that wraps the deployment behavior for DataWindow object XHTML and XML rendering.
		</summary><remarks>You can choose to render a DataWindow object in three formats: XML, XHTML, or HTML. If the DataWindow object is rendered in the XML or XHTML <see cref="T:Sybase.DataWindow.Web.RenderFormat"/>, you can specify the XHTML template (<see cref="P:Sybase.DataWindow.Web.XmlConfigurations.TemplateName"></see>) you designed in the DataWindow painter and the path (<see cref="P:Sybase.DataWindow.Web.XmlConfigurations.UrlPath"></see>) where dynamically generated files are saved. You can also specify that intermediate files specific to a given client are generated (<see cref="P:Sybase.DataWindow.Web.XmlConfigurations.SessionSpecific"></see>), and that XML be generated inline to enhance security (<see cref="P:Sybase.DataWindow.Web.XmlConfigurations.SecurelyInline"></see>).</remarks>
        </member>
        <member name="M:Sybase.DataWindow.Web.XmlConfigurations.#ctor">
            <summary>Initializes a new instance of the <b>XmlConfigurations</b> class.</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.XmlConfigurations.ToString">
            <summary>
            This member overrides ToString of Object.
            </summary>	
        </member>
        <member name="M:Sybase.DataWindow.Web.XmlConfigurations.CopyFrom(Sybase.DataWindow.Web.XmlConfigurations)">
            <summary>Duplicates the xml configurations of the specified XmlConfigurations instance into the instance of the XmlConfigurations class that this method is called from.
		</summary><param name="source">An XmlConfigurations instance that represents the XML configuration to copy.</param><remarks>Use the CopyFrom method to duplicate the properties of the specified XmlConfigurations object into the instance of the XmlConfigurations class that this method is called from.  All properties in the current instance of the XmlConfigurations class will be replaced by the associated property in the XmlConfigurations specified by the <i>source</i> parameter.
</remarks>	
        </member>
        <member name="P:Sybase.DataWindow.Web.XmlConfigurations.TemplateName">
            <summary>Specifies the template that will be used to render the DataWindow object into XHTML or XML.
	    </summary><value>The default value is an empty string.</value><remarks>You define XHTML templates in the DataWindow painter in DataWindow Designer. if you do not specify a template, the default template is used.</remarks>
        </member>
        <member name="P:Sybase.DataWindow.Web.XmlConfigurations.UrlPath">
            <summary>The path for generating URL references of dynamically created files and saving dynamically created file.
	    </summary><value>The default value is an empty string.</value><remarks> The UrlPath property specifies the physical directory in which dynamically created files, such as .css, .js, .xml, and .xslt files, and URL references are stored. This property must specify a URL path in your Web application virtual directory, and it must be a path that can be  mapped to a writable physical directory in your Web application's physical directory.<para>If you specify a value for this property, it overrides the ResourceBase value specified for the CSSGen, JSGen, XMLGen, and XSLTGen DataWindow object properties in the DataWindow painter.</para>	</remarks><example>This is the HTML generated for a WebDataWindowControl whose XmlConfigurations UrlPath property has been set to "/WebDWRendering/XML":<code>
&lt;dw:WebDataWindowControl id="dw_1" style="Z-INDEX: 101; LEFT: 8px; POSITION: absolute; TOP: 112px" runat="server"
				Height="432px" Width="804px" LibraryList="asadb10.pbl" DataWindowObject="d_freeform_asa" AutoSaveDataCacheAfterRetrieve="True"
				AutoRestoreDataCache="True"&gt;
				&lt;XmlConfigurations UrlPath="/WebDWRendering/XML"&gt;&lt;/XmlConfigurations&gt;
			&lt;/dw:WebDataWindowControl&gt;
			</code></example>
        </member>
        <member name="P:Sybase.DataWindow.Web.XmlConfigurations.SessionSpecific">
            <summary>Specifies whether a session-specific ID should be applied to any generated document names, including style (CSS), layout (XSLT), and control definitions (JS) files, which would otherwise be shared.
	    </summary><value><c>true</c> if a session-specific ID is to be applied to any generated document names; otherwise <c>false</c> for separate XML data file. The default value is <c>false</c>.</value><remarks>Typically you share style (CSS), layout (XSLT), and control definitions (JS) for use by all clients; however, if you use dynamic DataWindow objects customized for specific clients, you can force generation of the DataWindow presentation-related document names to be specific to each client. You do this by setting this property to <c>true</c>. This eliminates the possibility of server-side contention for presentation formats when the DataWindow generation is specific to the client.</remarks>
        </member>
        <member name="P:Sybase.DataWindow.Web.XmlConfigurations.SecurelyInline">
            <summary>Specifies whether XML data is generated inline to the XSLT transformation script in the page for security reasons.
	    </summary><value><c>true</c> if XML data needs to be generated inline to the XSLT transformation script; otherwise <c>false</c>. The default value is <c>false</c>.</value><remarks>The XML published on the Internet could contain sensitive data, and this data is essentially exposed to all Internet users without any means of authentication. If the XSLT transformation script in the page that renders the control can only be received by authenticated users, and if the SecurelyInline property is set to <c>true</c> so that the XML data is generated "inline" to the XSLT transformation script, the security of the XML is ensured, without any adverse side effects.</remarks>
        </member>
        <member name="T:Sybase.DataWindow.Web.ObjectLink">
            <summary>Represents a link object that is added to a WebDataWindowControl.
		</summary><remarks>You can add a link  to a column, computed field, bitmap, or text control in a WebDataWindowControl in the control's Properties window:
	<list type="number"><item>In the Properties window for a WebDataWindowControl, click the ellipsis button in the ObjectLinks field. </item>
	<item>In the ObjectLink Collection Editor, click Add to add a new object link. </item>
	<item>Specify values for the <see cref="P:Sybase.DataWindow.Web.ObjectLink.ObjectName"></see> and <see cref="P:Sybase.DataWindow.Web.ObjectLink.LinkUrl"></see> properties, and optionally the <see cref="P:Sybase.DataWindow.Web.ObjectLink.LinkTarget"></see> and <see cref="P:Sybase.DataWindow.Web.ObjectLink.LinkArguments"></see> properties. </item></list>
	<para>The ObjectLink object generates an HTML hyperlink for the selected control. If the control is a column, the HTML is generated only if the column is readonly (its tab order in the DataWindow painter is 0).</para>
	<para>The ObjectLink class encapsulates the HTML.Link, HTML.LinkArgs, and HTML.LinkTarget properties of the DataWindow object's column, computed field, bitmap, or text controls, using the ObjectName property to identify the control. You can specify values for these properties on the HTML page in the Properties view for the control in the DataWindow painter. Values you specify in the ObjectLink Collection Editor override values set in the painter.</para></remarks><example>The following ObjectLink definition in a .<i>aspx</i> file specifies a hyperlink for a readonly column named emp_id:
<code>&lt;cc1:ObjectLink ObjectName="emp_id" LinkUrl="/MyWebDemo/MasterDetailDemo.aspx"&gt;
	&lt;LinkArguments&gt;
		&lt;cc1:LinkArgument Type="DataWindowColumn" Name="emp_id" Value="emp_id"&gt;&lt;/cc1:LinkArgument&gt;
	&lt;/LinkArguments&gt;
&lt;/cc1:ObjectLink&gt;</code>

<para>ObjectName="emp_id" identifies the column for which the hyperlink will be generated. LinkUrl="/MyWebDemo/MasterDetailDemo.aspx" specifies the URL of the page that is the target of the link. Name="emp_id" is the name of the hyperlink parameter. Value="emp_id" is the value of the hyperlink parameter. The rendered result is:</para>
<code>&lt;A HREF="/MyWebDemo/MasterDetailDemo.aspx?emp_id=102" NAME="emp_id_0" TARGET= ""&gt;102&lt;/A&gt;</code>

<para>Value="emp_id" is replaced by the value of the column emp_id because the LinkArgument type is DataWindowColumn and its value is the emp_id column.
During rendering, the link argument value is evaluated dynamically.</para>
</example><seealso cref="P:Sybase.DataWindow.Web.ObjectLink.LinkArguments"></seealso>
        </member>
        <member name="M:Sybase.DataWindow.Web.ObjectLink.#ctor">
            <overloads>Initializes a new instance of the ObjectLink class.</overloads><summary>Initializes a new instance of the ObjectLink class with the link's <see cref="P:Sybase.DataWindow.Web.ObjectLink.ObjectName"></see> and <see cref="P:Sybase.DataWindow.Web.ObjectLink.LinkUrl"></see> properties set to empty strings.</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.ObjectLink.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the ObjectLink class with the specified values for the link's <see cref="P:Sybase.DataWindow.Web.ObjectLink.ObjectName"></see> and <see cref="P:Sybase.DataWindow.Web.ObjectLink.LinkUrl"></see> properties.</summary><param name="objectName">The name of a link object in a WebDataWindowControl.</param><param name="linkUrl">The URL that is the target of the object link.</param>
        </member>
        <member name="M:Sybase.DataWindow.Web.ObjectLink.ToString">
            <summary>
            This member overrides ToString of Object.
            </summary>		
        </member>
        <member name="M:Sybase.DataWindow.Web.ObjectLink.LoadViewState(System.Object)">
            <summary>
            This member overrides LoadViewState of StateObject.
            </summary>	
        </member>
        <member name="M:Sybase.DataWindow.Web.ObjectLink.SaveViewState">
            <summary>
            This member overrides SaveViewState of StateObject.
            </summary>		
        </member>
        <member name="M:Sybase.DataWindow.Web.ObjectLink.TrackViewState">
            <summary>
            This member overrides TrackViewState of StateObject.
            </summary>	
        </member>
        <member name="P:Sybase.DataWindow.Web.ObjectLink.ObjectName">
            <summary>The name of a link object in a WebDataWindowControl.
	    </summary><value>The default value is an empty string.</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.ObjectLink.LinkUrl">
            <summary>A URL that is the target of a link in a WebDataWindowControl.
	    </summary><value>The default value is an empty string.</value><remarks>The LinkUrl property is a URL that is the target of a link (an HTML anchor element) generated for each data item in the column or for the specified control. The text or user-visible part of the link will be the data value in the column, the value of the computed field, the text in the Text control, or the image of a Picture control. The URL can include parameters. Other properties, such as LinkArguments, can cause additional parameters to be added when the HTML is generated.</remarks>
        </member>
        <member name="P:Sybase.DataWindow.Web.ObjectLink.LinkTarget">
            <summary>The target window or frame for an object link in a WebDataWindowControl.
	    </summary><value>The default value is an empty string.</value><remarks>The name of a target frame or window for the hyperlink (HTML "A" element) specified in the LinkUrl property. The target is included in the generated HTML or XML using the TARGET attribute. You can use the LinkTarget property to direct the new page to a detail window or frame in a master/detail page design. If LinkTarget is <c>null</c> or an empty string (""), then no TARGET attribute is generated.</remarks>
        </member>
        <member name="P:Sybase.DataWindow.Web.ObjectLink.LinkArguments">
            <summary>Arguments to be added to the <see cref="P:Sybase.DataWindow.Web.ObjectLink.LinkUrl"></see> property of an object link.
	    </summary><value>Returns the LinkArguments of ObjectLink.</value><remarks>A string in the form:<i>argname</i>='<i>exp</i>'{ | <i>argname</i> = '<i>exp</i>' } ...  <para><i>Argname</i> is a page parameter to be passed to the server. <i>Exp</i> is a DataWindow expression whose value is a string. It is evaluated and converted using URL encoding and included in the LinkArguments string.</para>
	<para>The evaluated LinkArguments string is appended to the LinkUrl property when HTML or XML is generated to produce a hyperlink for each data item in a column or other control in the DataWindow.</para>
	</remarks>
        </member>
        <member name="T:Sybase.DataWindow.Web.ObjectLinkConverter">
            <summary>Represents the ObjectLinkConverter class.
		</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.ObjectLinkConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Returns whether this converter can convert an object of the given type to an object of this converter's type.</summary><returns><c>true</c> if the type can be converted; otherwise <c>false</c>.</returns><param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context. </param><param name="sourceType">A <see cref="T:System.Type"></see> that represents the type you want to convert from. </param>
        </member>
        <member name="M:Sybase.DataWindow.Web.ObjectLinkConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Returns whether this converter can convert an object of this converter's type to an object of the given type.</summary><returns><c>true</c> if the type can be converted; otherwise <c>false</c>.</returns><param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context. </param><param name="destinationType">A <see cref="T:System.Type"></see> that represents the type you want to convert to. </param>
        </member>
        <member name="M:Sybase.DataWindow.Web.ObjectLinkConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <!-- No matching elements were found for the following include tag --><include file="WebDataWindowComments.xml" path="doc/members/member[@name=&quot;M:CanConvertFrom(ITypeDescriptorContext, CultureInfo, object)&quot;]/*"/>
        </member>
        <member name="M:Sybase.DataWindow.Web.ObjectLinkConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <!-- No matching elements were found for the following include tag --><include file="WebDataWindowComments.xml" path="doc/members/member[@name=&quot;M:CanConvertFrom(ITypeDescriptorContext, CultureInfo, object, Type)&quot;]/*"/>
        </member>
        <member name="T:Sybase.DataWindow.Web.NoPermissionCreateFileException">
            <summary>The exception that is thrown when the user does not have permission to create a file.</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.NoPermissionCreateFileException.#ctor(System.String)">
            <summary>The constructor of NoPermissionCreateFolderException.</summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.NoPermissionCreateFolderException">
            <summary>The exception that is thrown when the user does not have permission to create a folder.</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.NoPermissionCreateFolderException.#ctor(System.String)">
            <summary>The constructor of NoPermissionCreateFolderException.</summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.NextPrevPageNavigatorSettings">
            <summary>
				Encapsulates the properties used for rendering the NextPrev style page navigator in page navigation bar.
			</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.NextPrevPageNavigatorSettings.#ctor">
            <summary>
				Initializes a new instance of the <b>NextPrevPageNavigatorSettings</b> class.
			</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.NextPrevPageNavigatorSettings.ToString">
            <summary>
            This member overrides ToString of Object.
            </summary>
        </member>
        <member name="P:Sybase.DataWindow.Web.NextPrevPageNavigatorSettings.NextPageText">
            <summary>
				Gets or sets the text to display for the next page button.
			</summary><value>
				The text to display for the Next Page button. The default is "%26gt;", which renders as "&gt;".
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NextPrevPageNavigatorSettings.NextPageImageUrl">
            <summary>
				Gets or sets the URL to an image to display for the Next Page button.
			</summary><value>
				The URL to an image to display for the Next Page button. The default is an empty string (""), which indicates that this property is not set.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NextPrevPageNavigatorSettings.NextPageToolTip">
            <summary>
				Gets or sets the tooltip for the Next Page button.
			</summary><value>
				The tooltip to display for the Next Page button. The default is an empty string (""), which indicates that this property is not set.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NextPrevPageNavigatorSettings.PrevPageText">
            <summary>
				Gets or sets the text to display for the Previous Page button.
			</summary><value>
				The text to display for the Next Page button. The default is "%26lt;", which renders as "&lt;".
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NextPrevPageNavigatorSettings.PrevPageImageUrl">
            <summary>
				Gets or sets the URL to an image to display for the Previous Page button.
			</summary><value>
				The URL to an image to display for the Previous Page button. The default is an empty string (""), which indicates that this property is not set.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NextPrevPageNavigatorSettings.PrevPageToolTip">
            <summary>
				Gets or sets the tooltip for the Previous Page button.
			</summary><value>
				The tooltip to display for the Previous Page button. The default is an empty string (""), which indicates that this property is not set.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NextPrevPageNavigatorSettings.FirstPageText">
            <summary>
				Gets or sets the text to display for the First Page button.
			</summary><value>
				The text to display for the First Page button. The default is "|%26lt;%26lt;", which renders as "|&lt;&lt;".
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NextPrevPageNavigatorSettings.FirstPageImageUrl">
            <summary>
				Gets or sets the URL to an image to display for the First Page button.
			</summary><value>
				The URL to an image to display for the First Page button. The default is an empty string (""), which indicates that this property is not set.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NextPrevPageNavigatorSettings.FirstPageToolTip">
            <summary>
				Gets or sets the tooltip for the First Page button.
			</summary><value>
				The tooltip to display for the First Page button. The default is an empty string (""), which indicates that this property is not set.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NextPrevPageNavigatorSettings.LastPageText">
            <summary>
				Gets or sets the text to display for the Last Page button.
			</summary><value>
				The text to display for the Last Page button. The default is "%26gt;%26gt;", which renders as "&lt;&lt;|".
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NextPrevPageNavigatorSettings.LastPageImageUrl">
            <summary>
				Gets or sets the URL to an image to display for the Last Page button.
			</summary><value>
				The URL to an image to display for the Last Page button. The default is an empty string (""), which indicates that this property is not set.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NextPrevPageNavigatorSettings.LastPageToolTip">
            <summary>
				Gets or sets the tooltip for the Last Page button.
			</summary><value>
				The tooltip to display for the Last Page button. The default is an empty string (""), which indicates that this property is not set.
			</value>
        </member>
        <member name="T:Sybase.DataWindow.Web.NumericPageNavigatorSettings">
            <summary>
				Encapsulates the properties used for rendering the Numeric style page navigator in page navigation bar.
			</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.NumericPageNavigatorSettings.#ctor">
            <summary>
				Initializes a new instance of the <b>NumericPageNavigatorSettings</b> class.
			</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.NumericPageNavigatorSettings.ToString">
            <summary>
            This member overrides ToString of Object.
            </summary>
        </member>
        <member name="P:Sybase.DataWindow.Web.NumericPageNavigatorSettings.NextPageGroupText">
            <summary>
				Gets or sets the text to display for the Next Page Group button.
			</summary><value>
				The text to display for the Last Page button. The default is "...%26gt;", which renders as "...&gt;".
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NumericPageNavigatorSettings.NextPageGroupImageUrl">
            <summary>
				Gets or sets the URL to an image to display for the Next Page Group button.
			</summary><value>
				The URL to an image to display for the Next Page Group button. The default is an empty string (""), which indicates that this property is not set.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NumericPageNavigatorSettings.NextPageGroupToolTip">
            <summary>
				Gets or sets the tooltip for the Next Page Group button.
			</summary><value>
				The tooltip to display for the Next Page Group button. The default is an empty string (""), which indicates that this property is not set.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NumericPageNavigatorSettings.PrevPageGroupText">
            <summary>
				Gets or sets the text to display for the Previous Page Group button.
			</summary><value>
				The text to display for the Previous Page Group button. The default is "%26gt;...", which renders as "&lt;...".
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NumericPageNavigatorSettings.PrevPageGroupImageUrl">
            <summary>
				Gets or sets the URL to an image to display for the Previous Page Group button.
			</summary><value>
				The URL to an image to display for the Previous Page Group button. The default is an empty string (""), which indicates that this property is not set.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NumericPageNavigatorSettings.PrevPageGroupToolTip">
            <summary>
				Gets or sets the tooltip for the Previous Page Group button.
			</summary><value>
				The tooltip to display for the Previous Page Group button. The default is an empty string (""), which indicates that this property is not set.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NumericPageNavigatorSettings.FirstPageText">
            <summary>
				Gets or sets the text to display for the First Page button.
			</summary><value>
				The text to display for the First Page button. The default is "|%26lt;%26lt;", which renders as "|&lt;&lt;".
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NumericPageNavigatorSettings.FirstPageImageUrl">
            <summary>
				Gets or sets the URL to an image to display for the First Page button.
			</summary><value>
				The URL to an image to display for the First Page button. The default is an empty string (""), which indicates that this property is not set.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NumericPageNavigatorSettings.FirstPageToolTip">
            <summary>
				Gets or sets the tooltip for the First Page button.
			</summary><value>
				The tooltip to display for the First Page button. The default is an empty string (""), which indicates that this property is not set.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NumericPageNavigatorSettings.LastPageText">
            <summary>
				Gets or sets the text to display for the Last Page button.
			</summary><value>
				The text to display for the Last Page button. The default is "%26gt;%26gt;", which renders as "&lt;&lt;|".
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NumericPageNavigatorSettings.LastPageImageUrl">
            <summary>
				Gets or sets the URL to an image to display for the Last Page button.
			</summary><value>
				The URL to an image to display for the Last Page button. The default is an empty string (""), which indicates that this property is not set.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NumericPageNavigatorSettings.LastPageToolTip">
            <summary>
				Gets or sets the tooltip for the Last Page button.
			</summary><value>
				The tooltip to display for the Last Page button. The default is an empty string (""), which indicates that this property is not set.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NumericPageNavigatorSettings.FirstLastVisible">
            <summary>
				Gets or sets a value indicating whether First and Last Page Button is shown..
			</summary><value>
				<c>true</c> to show the First and Last Page Button; otherwise, <c>false</c>. The default value is <c>false</c>.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.NumericPageNavigatorSettings.PageCountPerGroup">
            <summary>
				Gets or sets the number of numeric buttons to display concurrently in the page navigator.
			</summary><value>
				The number of numeric buttons to display concurrently in the page navigator. The default value is 10.
			</value><remarks>
				Use the PageCountPerGroup property to specify the number of numeric buttons to display concurrently in the the page navigator.
				If there are more pages in the WebDataWindowControl than specified in this property, Next or/and Previous Group Page buttons are displayed in in the the page navigator.
				When clicked, these buttons display the next or previous page group of numeric buttons.
			</remarks>
        </member>
        <member name="P:Sybase.DataWindow.Web.NumericPageNavigatorSettings.PageNumberDisplayFormat">
            <summary>
				Gets and sets the format used to generated the numeric page number button text.
			</summary><value>
				A String containing the format. The default value is an empty string.
			</value><remarks>
				In the page number display format, {P} is the keyword for generating numeric page number button text.
				For example, if the PageNumberDisplayFormat is "[{P}]", then the numeric page number button text will be shown
				as [1], [2]...
				When PageNumberDisplayFormat is an empty string(default value), a format "[{p}]" is used to generate numeric page number button text.
			</remarks>
        </member>
        <member name="T:Sybase.DataWindow.Web.QuickGoPageNavigatorSettings">
            <summary>
				Encapsulates the properties used for rendering the Quick Go style page navigator in page navigation bar.
			</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.QuickGoPageNavigatorSettings.#ctor">
            <summary>
				Initializes a new instance of the <b>QuickGoPageNavigatorSettings</b> class.
			</summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.QuickGoPageNavigatorSettings.ToString">
            <summary>
            This member overrides ToString of Object.
            </summary>
        </member>
        <member name="P:Sybase.DataWindow.Web.QuickGoPageNavigatorSettings.Type">
            <summary>
				Gets or sets the type of Quick Go style navigator.
			</summary><value>
				One of the  <see cref="T:Sybase.DataWindow.Web.QuickGoPageNavigatorType"/> enumeration values. The default is <c>DropDownList</c>.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.QuickGoPageNavigatorSettings.GoToDescription">
            <summary>
				Gets or sets the description text displayed on the left of page number selection DropDownList or input Edit.
			</summary><value>
				A string value of the description text displayed on the left of page number selection DropDownList or input Edit. The default value is "Go To:".
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.QuickGoPageNavigatorSettings.PageNumberDisplayFormat">
            <summary>
				Gets and sets the format used to generated the numeric page number text in DropDownList.
			</summary><value>
				A String containing the format. The default value is an empty string.
			</value><remarks>
				This property will only take effect when the <see cref="P:Sybase.DataWindow.Web.QuickGoPageNavigatorSettings.Type"/> is set to <c>DropDownList</c>.
				The Mode property must be set to PagerMode.NumericPages for this property to have any effect.
				In the page number display format, {P} is the keyword for generating numeric page number button text.
				For example, if the PageNumberDisplayFormat is "[{P}]", then the numeric page number button text will be shown
				as [1], [2]...
				When PageNumberDisplayFormat is an empty string(default value), a format "[{p}]" is used to generate numeric page number button text.
			</remarks>
        </member>
        <member name="P:Sybase.DataWindow.Web.QuickGoPageNavigatorSettings.PageNumberToolTip">
            <summary>
				Gets and sets tooltip for the page number selection DropDownList or input Edit.
			</summary><value>
				tooltip to display for the page number selection DropDownList or input Edit. The default is an empty string (""), which indicates that this property is not set.
			</value>
        </member>
        <member name="P:Sybase.DataWindow.Web.QuickGoPageNavigatorSettings.GoToButtonText">
            <summary>
				Gets and sets text for the GoTo Page button.
			</summary><value>
				The text to display for the GoTo Page button. The default is "Go".
			</value><remarks>
				This property will only take effect when the <see cref="P:Sybase.DataWindow.Web.QuickGoPageNavigatorSettings.Type"/> is set to <c>Edit</c> since only at that case, the
				GoTo Page button will be shown.
			</remarks>
        </member>
        <member name="P:Sybase.DataWindow.Web.QuickGoPageNavigatorSettings.GoToButtonImageUrl">
            <summary>
				Gets or sets the URL to an image to display for the GoTo Page button.
			</summary><value>
				The URL to an image to display for the GoTo Page button. The default is an empty string (""), which indicates that this property is not set.
			</value><remarks>
				This property will only take effect when the <see cref="P:Sybase.DataWindow.Web.QuickGoPageNavigatorSettings.Type"/> is set to <c>Edit</c> since only at that case, the
				GoTo Page button will be shown.
			</remarks>
        </member>
        <member name="P:Sybase.DataWindow.Web.QuickGoPageNavigatorSettings.GoToButtonToolTip">
            <summary>
				Gets or sets the tooltip for the GoTo Page button.
			</summary><value>
				The tooltip to display for the GoTo Page button. The default is an empty string (""), which indicates that this property is not set.
			</value><remarks>
				This property will only take effect when the <see cref="P:Sybase.DataWindow.Web.QuickGoPageNavigatorSettings.Type"/> is set to <c>Edit</c> since only at that case, the
				GoTo Page button will be shown.
			</remarks>
        </member>
        <member name="T:Sybase.DataWindow.Web.Design.XHtmlTemplateEditor">
            <summary>
            Summary description for XHtmlTemplateEditor.
            </summary>
        </member>
        <member name="T:Sybase.DataWindow.Web.Design.LibraryListForm">
            <summary>
            Summary description for LibraryList.
            </summary>
        </member>
        <member name="F:Sybase.DataWindow.Web.Design.LibraryListForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.Design.LibraryListForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Sybase.DataWindow.Web.Design.LibraryListForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
